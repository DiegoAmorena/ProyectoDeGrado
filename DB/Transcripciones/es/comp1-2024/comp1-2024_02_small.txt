 Vamos a comenzar entonces con la clase de hoy, con la clase 2 del curso de computación 1. Como en la clase pasada, vamos a seguir familiarizándonos con la herramienta que vamos a usar de trabajo, la computadora. La clase pasada nos centramos en arquitectura, entender un poco cuáles son las partes más importantes de una computadora y algunas cosas como bastantes generales de funcionamiento. Como les dije, la clase pasada, arquitectura del computador, es un curso que dura un semestre en la carrera de computación. Eléctrica tiene una asignatura parecida y también dura por lo menos un semestre. Obviamente que lo que vimos es, son grandes pinceladas para que tengan una idea de cómo funciona una computadora. Hoy nos vamos a mover un paso más arriba. Nosotros estuvimos hablando del hardware, los fierros. Y ahora vamos a hablar de los sistemas operativos. Nosotros vamos a trabajar después con lenguajes de programación sobre los que vamos a programar, que todavía van a estar más arriba en esta especie de capas en las que vemos como la computadora, cómo interactúan la computadora con los programas. Bien, entonces lo primero que vamos... Bueno, como decía, arquitectura es un curso que dura un semestre y el sistema operativo es otro curso que dura un semestre. Se ven un montón de temas. La idea acá es entender un poco a nivel de usuario qué viene a significar un sistema operativo y por qué es importante la existencia de sistemas operativos. Entonces, vamos a ver como una especie de definición de lo que sería un sistema operativo. O sea, qué es lo que hacen, digamos. Son aquellos que gestionan y coordinan el uso de los recursos del equipo haciendo que los detalles particulares del hardware sean transparentes para las aplicaciones. Y de alguna forma es un intermediario entre los programas y el hardware que es el que tiene los recursos. Capaz que yo menciono esto y les suena como algo super raro y dicen, ¿por qué están importantes estos sistemas operativos? Bueno, voy a mencionar qué tipo de recursos son los que gestionan y ahora voy a poner algunos ejemplos de por qué esto es útil. Bueno, ¿qué recursos son los que manejan la memoria RAM, el procesador, la captura y el despliegue de información? O sea, cuando yo toco el teclado y eso aparece en la pantalla, la captura es lo que yo... lo que hace cuando yo escribo en el teclado y el despliegue de información es lo que hace cuando me muestran la pantalla. Bueno, el manejo de los medios externos en los que pueda grabar datos, la conexión de red y cualquier otra cosa general que tenga que ver con el hardware de la computadora. ¿Por qué esto es útil? ¿Por qué esto ha servido para, de alguna forma, masificar la computación y simplificarla? Para mí el ejemplo más sencillo para que entiendan eso tiene que ver con los celulares. O sea, la mayoría de las personas hoy tenemos un celular inteligente que tiene el sistema Android o el sistema iOS. Y si ustedes piensan que termina los cursos, hacen todo, no sé, terminan siendo asignaturas de computación y terminan siendo desarrolladores de aplicaciones para celular. Cuando uno tiene que hacer eso, piensen en la cantidad de aparatos distintos que hay hoy en día. O sea, hay... bueno, si estamos trabajando con celulares Apple, no porque básicamente es el mismo fabricante y son todos medios parecidos, aunque hay un montón de modelos distintos. Pero si uno quiere hacer una aplicación que funcione en celulares Android, tiene para empezar, no sé, 20 fabricantes, 30 fabricantes distintos de celulares. ¿no? Las marcas que se les ocurran, Samsung, Motorola, las que quieran considerar. Y después, dentro de esas marcas, hay un montón de modelos distintos. Si yo no tuviera una entidad que, de alguna forma, me abstraiga el hardware, me permita, por ejemplo, decirle, saca una foto. No se piensen en el que hizo, el que desarrolló Instagram para celulares. El que desarrolló esa aplicación tendría que saber cómo sacar una foto en todos los modelos de celulares, de todos los fabricantes de celulares posibles. Entonces eso sería una tarea prácticamente inabordable. Estarías todo el tiempo haciendo ajustes. Uy, salió un modelo nuevo, tengo que reprogramar la aplicación Instagram para que pueda sacar una foto en ese celular nuevo que existe ahora. ¿Se entiende eso? Entonces el modelo que se usa para el desarrollo en realidad es al revés, yo voy a hacer una aplicación y yo me concentro en ser bueno en lo que yo tengo que hacer. No sé, en Instagram será en no sé, aplicar filtros, las redes de conexiones entre amigos y conocidos y contactos y esto. Ahora, cuando yo necesite sacar una foto, lo que voy a hacer es pedirle al sistema operativo que él se encargue de sacar la foto. Entonces, ¿qué termina pasando? Que cuando un fabricante saca un modelo nuevo, no sé, Samsung saca un celular nuevo, lo que tiene que hacer es que haya una versión de Android que funcione en ese celular y hacer algunos ajustes para que se pueda sacar una foto en ese celular. Pero es el fabricante de alguna forma del hardware que termina siendo algo en el sistema operativo para que pueda hacer eso que yo necesito. Estoy poniendo el ejemplo de sacar una foto pero es cualquier cosa, mandar un mensaje, hacer una conexión a internet, cualquier otra cosa. Yo hago la aplicación, ahora están los videojuegos que juegan en red en celulares. Se están pasando mensajes, se están haciendo un montón de cosas cuando estoy jugando. Tengo un hijo que tiene 12 años, juega el Brawl Stars, capaz que alguno de ustedes juega, juega con otros amigos y están jugando en el mismo mundo. Se están mandando mensajes, están combatiendo contra los mismos, no sé qué. Si el que fabricó Brawl Stars tendría que encargarse de toda la comunicación, otra vez tendría que hacerlo para todos los modelos de celulares, para todos los fabricantes, para todo ese tipo de cosas. Con esta idea de yo tengo un sistema operativo, alguien que se ocupa de hacer estas tareas, el que tiene que hacer la aplicación se concentra en hacer lo que él tiene que hacer y asume que el sistema operativo me da ese servicio. Por eso a veces pasa que sale una aplicación nueva o una versión nueva y deja de andar para celulares viejos porque necesita alguna funcionalidad o necesita algo del sistema operativo que en algún celular viejo esa funcionalidad no estaba disponible o cosas de ese estilo. ¿Se entiende? Para eso es que precisamos los sistemas operativos. Puse el ejemplo de celulares pero esto en realidad también aplica una PC. Nos sorprendemos la PC tiene Windows y no nos andamos preocupando ninguna de las aplicaciones. Yo que se entra un chat, manda un mail o algo y Windows es el que se ocupa de que ese mensaje se convierta en conjunto de símbolos y se mande por una conexión de red a la otra persona que yo preciso que le llegue. No el que hace la aplicación. Bueno y otras cosas que ya mencioné un poco la clase pasada pero es esto por ejemplo de la memoria gestionar la memoria te queda espacio de memoria puedo abrir esta aplicación lo que hablamos de la memoria virtual la clase pasada lo gestiona el sistema operativo. Es el sistema operativo el que dice bueno como te estás quedando sin memoria yo te uso esta memoria virtual para que tengas más memoria y no tengas que cerrar aplicaciones y eso viene dado por el sistema operativo el que hace una aplicación no tiene que hacer nada para hacer eso solo llamar algunas operaciones que el sistema operativo provee. Entonces bueno por eso dice acá no son imprescindibles o sea uno podría agarrar y hacer un programa de cero que la computadora prenda y ejecute su programa y haga lo que él quiera que haga pero en general es poco práctico nadie hace eso hoy en día y todo se sustenta en el uso de sistemas operativos. Se entendió más o menos esta idea. Bueno en general entonces para para comenzar a ejecutar los sistemas operativos seguramente como usuarios ustedes ya lo hayan visto esto o por lo menos intuyan algunas cosas de las que pasan acá o sea primero en algún dispositivo de memoria estable tiene que estar alojado del sistema operativo o sea yo tengo que instalarlo en una computadora a veces cuando uno compra una computadora ya le viene instalado pero alguien en el disco duro puso el Windows para que el Windows pueda cargar si yo compro una computadora completamente vacía y la prendo no hace nada digamos chequea hace los chequeos de las memorias y todo eso y después se queda ahí porque no tiene nada para ejecutar lo primero que tengo que hacer es instalarlo un sistema operativo eso va a quedar como decía en el disco duro en alguna forma de memoria estable entonces cuando yo ahí prenda la computadora lo que va a pasar es que se va a cargar desde el disco duro y se tiene que copiar en la memoria RAM todo o una parte la mayoría de los sistemas operativos hoy cargan una parte a la memoria RAM y se le ordena que ejecute la primera instrucción los sistemas operativos viejos bueno el otro día hablamos de Windows XP Windows XP capaz que me estoy acordar me puedo estar acordando mal y confundiéndome con alguna versión anterior de Windows a veces pero creo que Windows XP era uno de ellos uno prendía la máquina aparecía el logo de Windows y demoraba un minuto en darme el control en poder hacer algo porque porque cargaba un montón de cosas en la memoria y eso demoraba mucho hoy en día los sistemas operativos cambiaron un poco esa forma de acceder porque tal los usuarios somos un poco más ansiosos no estamos dispuestos a aprender una computadora a esperar tres minutos a poder hacer algo entonces cargan una partecita y en seguida te aparece por lo menos para loguidad para poner tu usuario para poner una clave lo mismo pasa con los celulares en seguida que lo prendes por más que está cargando un montón de cosas todavía y eso voy a poder usarlo bueno si lo formalizamos un poco que la otra vez hablamos de las memorias por esto también cuando prende una computadora seguramente les aparezca estos carteles y van a la sala de máquinas y ustedes prenden la computadora les va a aparecer o sea cuando yo prendo el equipo lo primero que ejecutas el programa de la bios que va a estar almacenado en una epron una de esas memorias que son de solo lectura digamos que yo no puedo escribir en este tipo de memorias lo primero que va a ser el labio es verificar que el hardware básico que yo lo tengo que haber configurado previamente está instalado y operativo qué quiere decir eso bueno cuando yo configure la computadora le voy a decir tenés un disco duro de tal marca que tiene tal espacio estás conectado un teclado a un procesador de tales características a tales cosas que yo las tengo que configurar antes lo que hacen ese paso es chequear que esas cosas estén puede haber pasado que no sé se rompa el procesador y esté quemado o no sé o el disco duro se haya desconectado alguien de los que desarma la computadora haya desconectado el disco duro y no lo haya vuelto a conectar o sea haya desconectado el teclado entonces los que te va a salir es un cartel que te va a avisar y te va a decir no encuentro tal cosa después de que termina ese proceso de chequeo que en general este salvo que eso que estemos armando y desarmando computadoras nunca nos debería pasar que ahí pase algo lo que va a hacer es leer los parámetros de instalación desde la cmos que es otra memoria y a partir de eso sabe dónde puede encontrar en el disco duro el sistema operativo está fíjense que para poder ejecutar el sistema operativo si ven acá hay algunas cosas que parecen que pueden parecer este obvias o este o como demasiado detalladas es bueno si yo no sé dónde está escrito el sistema operativo no lo puede leer entonces tiene que estar escrito en algún lado cuando yo prendo dónde voy a leer la primera instrucción entonces la bios lee el sistema operativo de acuerdo a la dirección que le da la cmos y carga este es el diseño que se usa hoy en día un núcleo de ese sistema operativo en la memoria ramo o sea una parte mínima y imprescindible para poder empezar a ejecutar cuando termina de cargar eso o sea hasta que todo eso no está cargado en la ram no puede empezar a hacer nada cuando todo eso ya se aloja en la ram lo que hace la bios es le dice a la primera instrucción del sistema operativo empezar a ejecutar vos y la bios deja de hacer cosas acá está gráficamente lo mismo para para terminar de entenderlo o sea yo prendo la bios hace los chequeos este del hardware o sea tiene los parámetros y los chequea lee los parámetros del sistema operativo empieza a leer el sistema operativo lo cargan la ram y le dice empezar a ejecutar vos esto pasa cada vez que apagamos y prendemos la computadora no así cuando cuando suspendemos la ejecución de la computadora ahí es el sistema esa por ejemplo es una funcionalidad del sistema operativo queda en algún estado ahí el sistema operativo tiene como la capacidad de bajar una imagen del en funcionamiento y cuando vuelvo a aprender vuelve a levantar esa imagen acá no en ese caso no pasa nada de esto no no no actúa la bios no actúa el cmo s es el sistema operativo que está haciendo eso bueno cuando cuando empieza a ejecutar el sistema operativo una de las cosas que va a ser es terminar de cargarse en la memoria ram o sea después de que él ya está en control de la máquina va a tener que seguir cargando un montón de cosas más dentro de las cosas que va a cargar van a ser los programas de control de los diferentes dispositivos y otros programas residentes ahora voy a hablar un poco más de los programas de control pero no sé uno tiene instalado una impresora uno tiene instalado no sé una conexión de red o algo a través de un puerto u sb y precisa poder dialogar con esos dispositivos bueno eso lo va a hacer a través de controladores y cuando uno configura el sistema operativo y no instale cosas uno le dice bueno necesito este controlador este controlador este controlador y a los tiene que cargar para que yo los pueda usar bueno los controladores es eso tienen que interactuar con ese tipo de cosas no por ejemplo una el controlador del disco duro el controlador de la impresora pero también hay programas residentes por ejemplo si no instale un antivirus el antivirus va a empezar a funcionar ahí enseguida que empezó el sistema operativo eso es lo que lo vuelve seguro de alguna forma entonces el sistema operativo tiene que esto levanta los controladores y esos programas que se le llaman residentes o sea que están ejecutando desde el principio que uno prende la computadora los tiene que cargar este ahí en ese momento no es exactamente un programa residente pero funciona como si lo fuera este por ejemplo la búsqueda en windows no uno quiere buscar dentro de todo el disco duro de las carpetas si ustedes escriben comandos ahí en la parte baja en la barra del lado izquierdo no puede buscar el nombre un archivo y se los va a encontrar en en cualquier lugar que esté eso es en realidad como un proceso del sistema operativo que está ejecutando que es el windows search que uno puede apagarlo a veces pasa que o sea el windows search para buscar hace una indexación que ocupa espacio y a veces si uno tiene el disco duro muy lleno y no le da lugar si uno apaga el windows search la computadora anda más rápido que si lo tiene prendido digamos no sería exactamente un programa residente eso pero para que se hagan una idea no y ese tipo de cosas son como aplicaciones que va cargando a medida que va aprendiendo el sistema operativo se entendió esa idea de que son los programas residentes más o menos el otro ejemplo que pueden pensar es el antivirus y bueno hoy en día pasa con un montón de cosas cuando ustedes le dan al lado derecho y ven y apretan y le salen un montón de iconitos ahí esos son cosas que la computadora ya cargó y tiene prontas para que ustedes puedan usar todos esos son programas residentes bueno y a partir de ese momento cuando termina de hacer la carga de los controladores y los programas residentes queda la espera de órdenes del usuario y atiende interrupciones no acuérdense que lo mencioné la clase pasada funciona por interrupciones cuando yo escribo detecta que yo hice algo y a partir de eso empieza a hacer algo en la computadora en muchos casos hoy en día el usuario puede hacer cosas antes de que termine este proceso de carga pero a veces pasa que si empiezas a abrir cosas claramente la computadora está trabajando y que funciona como un poco lenta o erratica al principio y es porque no terminó de hacer ese proceso entonces bueno este modelo que les comentaba hoy de las aplicaciones por un lado no que cada uno que tiene que hacer una aplicación básicamente se concentra en lo que le interesa a él porque va a dialogar con el sistema operativo y les hablaba de que está el hardware abajo que es el que se ocupa o sea el hardware son los fierros cómo se da ese diálogo entre el sistema operativo y el hardware a través de los controladores o sea el que haya el que tenga una computadora en su casa y haya instalado por ejemplo una impresora va a ver que para que empiece a funcionar la impresora tiene la primera vez que la conecta hoy en día muchos detectan al enchufar la impresora automáticamente la computadora detecta que ya se cargó algo y te pone que va a descargar unos archivos bueno eso es la controladora para que esa impresora funcione ahora como en realidad uno puede conectar cualquier impresora a una computadora cada vez que yo le conecte un dispositivo nuevo lo que va a pasar es que va a ser ese mismo proceso y va a instalar los los drivers de todo lo que yo le conecta a veces pasa que uno conecta no sé un algo por el puerto usb un pendrive o no sé uno está haciendo un trabajo con un compañero el compañero le presta el pendrive para copiar unos archivos lo enchufa y te pone voy a hacer voy a cargar algo para que puedas usar el pendrive porque si no no entiende los datos que están grabados en el pendrive no puede comunicarse con él con el pendrive se entiende eso entonces este bueno cuando uno instala el sistema operativo hay un montón de drivers que ya vienen por defecto o sea que los va a detectar la tarjeta de vídeo y otras cosas pero bueno no me instala todos los drivers posibles sino que la lógica es esta cuando yo enchufo algo detecto eso que estoy conectando y hago la instalación del driver bueno algunos ejemplos de sistemas operativos los más famosos y los que seguramente ustedes conozcan sean este windows o el sistema operativo de las max linux también en realidad linux es viene linux viene relacionado con este con los sistemas unix este más antiguos la facultad tuvo equipos que funcionaban con con sistemas y unix solaris y con el unix berkley pero hace años que ya la facultad se pasó definitivamente a linux windows que es bastante común y bastante no sé para los usuarios que lo conocen es relativamente sencillo de usar el sistema operativo de las max que tiene algunas ventajas no sé la gente que trabaja con temas de diseño gráfico ese tipo de cosas en general prefiere los entornos mac en principio no hay una preferencia por ninguno de estos sistemas depende de lo que uno precisé hacer y con lo que uno esté familiarizado como usuario yo que es en los sistemas linux se se pusieron de moda por llamarla así de alguna forma hace unos no sé 20 años capa esto por todo el tema de el código libre digamos en los sistemas operativos windows microsoft programó ese sistema operativo y las personas no saben cómo funciona digamos el código de ese sistema operativo no está disponible para nadie los sistemas operativos linux no todos pero hay un montón que siguen la filosofía de que el código está disponible uno podría agarrar y sentarse y leer todo el programa y entender cómo funciona en general hay gente especializada en algunas partes de ese sistema operativo no es que todo el mundo conoce todo estamos hablando de programas que seguramente ocupan millones de líneas de código o sea que que por más que uno tenga el código no es real que uno puede sentarse y entenderlo todo pero eso en general también está relacionada a veces con que haya menos virus en linux que en windows digamos porque al ser de código abierto y haber mucha gente trabajando sobre ese código cuando hay una vulnerabilidad un error de programación como pasa en todos los sistemas que puede haber en linux se detecta y se avisa y se corrige en windows como en general no se conoce el código eso no pasa y en general se detectan nuevos virus cuando ya hubo un ataque de ese virus digamos en general los virus explotan algún error en el código que muchas veces pasan porque bueno no sé gente con experiencia diseña ataques especiales para esos sistemas operativos después todos los sistemas en general son equivalentes depende de lo que uno precisa hacer uno puede programar sobre cualquiera de ellos en general acá en el curso por ejemplo cuando vayamos a la sala de pc vamos a ir a la de windows pues suponemos que es con la plataforma que están más familiarizados ustedes pero se podría hacer lo mismo que vamos a hacer y todo lo que vamos a hacer en este curso en plataformas linux sin ningún problema bueno como les decía eso un sistema operativo básicamente esos me permite como encapsular o esconder el funcionamiento del hardware de un dispositivo hay sistemas operativos para celulares fue el ejemplo que puse hoy los más populares y conocidos son android de google ios de apple hay algún este algún sistema operativo que han tenido que que desarrollar para algunas marcas de celulares chinos no sé creo que es huawei que tiene un sistema operativo propio que en realidad creo que usa cosas públicas de android y le tuvieron que agregar tuvieron que cambiar las cosas creo que lo comenté la clase pasada cuando hablamos de arquitectura pero entre china y estados unidos vienen con este problema bueno por disputas políticas por por ver quién es la potencia más grande y por problemas comerciales y todo eso entonces ya desde la época de obama más o menos hay ciertas tecnologías desarrolladas en estados unidos que están prohibidas que se las vendan a china eso yo les hablé de las tarjetas de vídeo por ejemplo algunas arquitecturas de tarjeta de vídeo las que están muy pensadas como para inteligencia artificial y eso no se las pueden vender al gobierno chino por ejemplo y acá hubo algunos líos con huawei por creo que con huawei me puede estar equivocando el fabricante por temas de privacidad que decían que guardaba información y se espiaba la gente o algo así y entonces android no podía seguir funcionando no básicamente los prohibieron que siguieran haciendo versiones para ese fabricante de hardware no voy a entrar en detalles todo el tema este de los datos personales y la confiabilidad es algo este que que tal que debería este preocuparles a futuro digamos es algo que está bastante o sea más allá de no también con la con con el tema del del 5g esta discusión también estuvo o sea huawei también fabrica tecnología 5g y en algunos países se prohibió usar esa tecnología y bueno puede ser ahí un poco este o sea es un problema que de la sociedad actual digamos y va a ser de futuro de alguna forma no sé están estos fabricantes chinos de los que hay una cierta desconfianza de si se roban los datos o los usan para otros fines y en general muchos de nosotros usamos google usamos gmail y vemos que continuamente usan nuestros datos para hacer otras cosas pero está ahí en el fondo hay este como discusiones políticas y ese tipo de cosas pero en general hay en muchos fabricantes que están empezando a hacer cosas para que tus datos no puedan ser usados para otras cosas pero estamos bastante lejos de eso después sorprendentemente con con todo esto que estamos hablando o sea si bien windows es una de las plataformas no en sistemas operativos de pc windows tienen más penetración que linux hay más gente que usa windows que la que usa linux sin embargo en sistemas operativos de celulares nunca logró posicionarse como una tecnología un sistema operativo algo que la gente usara masivamente tuvo varios intentos windows phone windows 10 mobile en algún momento pero llegó tarde a digo los dispositivos que son marca apple está atiendo su propio sistema operativo y juegan por afuera no juegan en o sea no va a haber un windows que ande en algo apple porque apple no va a permitir que otro sistema operativo ande en sus plataformas pero para los dispositivos más generales o sea de otros fabricantes andro o sea google llegó primero con android y por más que ha hecho un montón de esfuerzo microsoft durante muchos años por hacer un sistema operativo que que le compita no lo ha logrado y fíjense que es este como bastante raro no porque uno usa la computadora en windows lo más natural sería que su pasaje al celular sea con el mismo sistema operativo y que sea fácil interactuar entre las dos cosas y está es tan fuerte el uso de la gente de por parte de la gente de android que nunca logró hacerle mella digamos este y básicamente lo último que estuve viendo sobre esto porque windows 10 mobile ya estaba discontinuado es que hoy en día lo que hay es como una especie de launcher que te permite correr como algunas funcionarias de windows arriba de android pero ya no se están planteando hacer un sistema operativo digamos de cero que ande en un coso porque está es como que de alguna forma reconocieron que ya perdieron ahí y que no tiene sentido seguir intentándolo se entendió más o menos esto bien como en todas estas clases que son así más generales y eso habrá notado que la gente de computación le encanta clasificar las cosas para tratar de entenderlas hacer taxonomías y ver características distintas entre las cosas en general los sistemas operativos hay como dos características que nos suelen interesar o que históricamente solían interesar una tiene que ver con la cantidad de usuarios que pueden trabajar concurrentemente en un dispositivo que tiene ese sistema operativo sea cantidad de usuarios que pueden trabajar a la vez no tengo una pc cuántos usuarios pueden estar a la vez trabajando sobre la misma máquina entonces bueno tengo los que son mono usuario en los que solamente puede trabajar un usuario a la vez y tengo los multi usuario que permiten en forma simultánea trabajar más de un usuario a la vez de los que están acá quiénes cuántos usan linux ninguno bueno los sistemas operativos linux en general son multi usuario ustedes pueden ver a si van a la sala linux puede haber estudiantes haciendo una tarea de programación y accediendo remoto desde la casa y trabajando la misma máquina que hay un estudiante en ese momento tipeando en esa máquina incluso ejecutando sus programas ahí en esa máquina es una característica como súper útil este se usa bastante de los que están acá cuántos usan windows windows es multi usuario mono usuario más o menos es multi usuario existe una aplicación que la facultad no está instalada y que se puede usar que se llama remote de esto por lo menos se llamaba así antes no sé cómo se llama hoy en día que permite que una persona está remoto a la computadora pueda acceder y trabajar sobre esa computadora con la misma filosofía esta que tiene linux en general no es una aplicación que instalemos por defecto en las computadas que tenemos en nuestras casas o eso por eso no sabemos que existe digamos pero eso los sistemas operativos modernos todos tienden a ser multi usuario porque es eso como tenés más de un core yo que se puede tener un equipo que tenga 8 cores y eso pueden trabajar dos personas concurrentemente sobre la misma cada uno ve solo sus datos no no puede ver los datos del otro pero eso es una funcionalidad súper útil y windows la tiene también se les ocurre algún ejemplo de sistemas operativos mono usuario y que creo yo no que van a seguir siendo mono usuario que no tiene sentido que sean multi usuario los celulares porque querríamos que alguien remoto a la vez esté usando el teléfono y compitiendo nos por los recursos no parece tener sentido no parece ser una funcionalidad útil este al momento actual no está soportado y yo creo que no va a estar porque es eso no es algo que parezca que sirva para algo y es más como solemos tener información sensible en nuestros celulares nos expone a posibles ataques o cosas entonces yo no creo que eso vaya a pasar se entendió esta idea de multi usuario mono usuario más o menos bien entonces a medida que ha pasado el tiempo casi todos han convergido a esto y en la cantidad de tareas concurrentes que puedan realizar están los monotareas que básicamente están haciendo una cosa a la vez y los multitareas que pueden hacer más de una tarea a la vez con el advenimiento del paralelismo a las computadoras lo que contaba la clase pasada todos los sistemas operativos han ido hacia multitareas igual es interesante que incluso cuando tenía un procesador solo había varios sistemas operativos que no eran monotareas que lograban hacer algunas cosas de como de compartir el tiempo entre procesos y ejecutar un poquito cada cosa para que las cosas fueran ejecutando este como si fueran multitarea pero bueno en esto hoy en día todos los sistemas son multitareas por lo menos los que usamos no comúnmente incluso los de los sistemas operativos tienen bueno ustedes lo habrán visto tenés varias aplicaciones abiertas los celulares ya son quad core o sea puede ser que alguna implementación bueno en realidad la implementación del sistema operativo es multitarea pero puede ser que uno lo use en algún contexto restringido alguna cosa sobre todo la gente que trabaja en sistemas enbebidos o que hace internet de las cosas esos que no se ponen algún chip en algún lado a sacar fotos y procesar esas imágenes yo que sé para no sé detección de plaga en fruta en el campo no ponen una pc ponen una placa más chiquita con alguna cosa más sencilla pero igual si están usando linux el sistema operativo es multitarea se entendió más o menos esto bien esta es una aclaración nada más porque este a veces genera dudas que tiene que ver con que con el interfaz con el que interactuamos con el sistema operativo cada sistema operativo por lo menos va a tener un interfaz con el usuario y eventualmente puede tener más de uno no sé estamos muy acostumbrados a windows que que tiene este no que todo el sistema basado en en ventanas si uno va a donde puede tipiar comandos en windows y uno pone cmd le va a salir una ventanita negra que básicamente es un interfaz para interactuar con el sistema operativo en lo que uno va escribiendo comandos o sea es una ventana negra texto blanco y uno va poniendo no sé puede navegar entre las carpetas ponir por ejemplo poniendo con dir le dice qué archivos hay en un directorio puede hacer cd el nombre de una carpeta para moverse una carpeta y puede copiar los archivos escribiendo comandos digamos y no usando el interfaz visual o sea la funcionalidad del sistema operativo es la que me permite mover los archivos copiar los renombrarlos el interfaz es lo que me permite ver lo lindo con ventanas y que eso sea fácil pero no tiene que ser la única forma en en que yo haga eso justo no hay ninguno que usa el inox pero en Linux es más uno puede elegir el sistema de ventanas que usa digamos y hay más de uno disponible en windows en realidad es como uno solo entonces bueno hay como una especie de protocolo entre el interfaz y el sistema operativo ahora vamos a ver porque básicamente el interfaz es una aplicación más a veces para el usuario es difícil verlo pero el interfaz con el que yo estoy interactuando sea cuando yo agarro y abro los archivos y empiezo a mover carpetas y hacer ese tipo de cosas yo estoy interactuando con el interfaz que me da el sistema operativo pero no es parte del sistema operativo entonces como les decía hay interfaces de diferentes características uno puede ser solamente de texto está esto es lo que yo les decía que que puedo usar en windows usando el comando cmd a es los microsoft antes de tener los sistemas windows tenía los sistemas de os que estaban todos basado en eso pantalla negra escribía comandos no había ventanas estamos hablando de en hasta el 90 y no sé poquito 91 92 la verdad que no me acuerdo exactamente cuando los sistemas linux tienen la gel de linux si alguna vez estuvieron en las salas de linux y en los estudiantes de computación van a ver que más allá de estar usando la navegación y eso van a tener ventanas escribiendo comandos y cosas de ese estilo pues permite automatizar fácilmente tareas hace uno quiere que algo se haga muchas veces es más fácil escribir un archivo con una con esa cantidad de instrucciones y pedir que eso se ejecute muchas veces que uno irá haciendo la mano moviendo carpetas y copiando archivos bueno esos son los de texto digamos y después tenemos los gráficos que bueno el de windows como les decía es único el de apple también y bueno en linux uno tiene un montón de opciones para elegir en general no sé siempre cada cada tipo de linux viene con un con un interfaz por defecto seguimos en esto de como de ir subiendo en esta especie de de capas no hablamos del hardware primero después hablamos del sistema operativo y para terminar de entender esto del software y qué cosas forman parte del sistema operativo y cuál es no vamos a usar esta termina terminología que cada vez se usa un poco menos pero pero que es clásica que habla de software de base o programas de base que son esos software de base o programas de base bueno el interfaz gráfica el sistema operativo como mencionaba los editores de texto el navegador de internet el administrador de correo electrónico una planilla electrónica un manejador de base de datos porque hacemos esta salvedad para que ustedes acuérdense lo que era el sistema operativo el sistema operativo es eso que interactúa con el hardware y me permite hacer las cosas en navegador de internet no forma parte del sistema operativo lo que pasa que hoy en día cualquier sistema operativo que vos instales viene con un navegador de internet pero en realidad es una aplicación distinta que podría estar instalada o podría no estar instalada lo mismo es el blog de notas lo mismo es tener un programa de manejo de correo electrónico que hoy en día un instala windows y viene ya con un montón de otros software que es útil y sin el que uno no podría capaz que usar la máquina o la mitad de las cosas que uno quiera hacernos las podría hacer pero es importante que entiendan que eso no forma parte del sistema operativo se entendió esa esa diferencia otra cosa es que cuando uno lo instale venga todo eso si hoy en día uno instala linux también viene con todo eso porque saben que el usuario necesita esas aplicaciones pero no forma parte del sistema operativo después me va a pasar en que en varios contextos de trabajo yo voy a tener lo que se llaman aplicaciones de usuario que son en realidad aplicaciones específicas que van a tener sentido para un usuario en particular yo que si estamos hablando no sé en la sección de sueldo por ejemplo acá de la facultad o de un trabajo y seguro que va a tener un software de liquidación de sueldo porque lo va a precisar para este poder gestionar todo lo que tiene que ver con con el pago de los sueldos si es una empresa que factura van a necesitar un sistema de facturación algo para el manejo del sistema contable o la gestión de stock esto podría ser incluso en una fábrica o algo de estilo que tenga que gestionarlo bueno estos software van a ser específicos y cada necesidad de un usuario va a ser que o compre un sistema de ese tipo o desarrolla un sistema de ese tipo pero fíjense que este tipo de aplicaciones están como un nivel como un escalón más arriba o sea son súper específicas esto yo no preciso que cualquier computadora tenga esto para usarlas entonces por eso se hace esta distinción entre software de base digamos y aplicaciones de usuario software de usuario en el software de base como les decía hay un montón que son aplicaciones y uno podría verlas al mismo nivel que estas otras digamos por eso le digo que esta categorización entre software de base y aplicación de usuario cada vez se tiende a usar un poco menos bien entonces venimos hablando de las aplicaciones y eso y una aplicación que va a ser muy importante para nosotros van a ser los editores de texto porque porque vamos a programar programar básicamente es escribir un conjunto de instrucciones o comandos para que la computadora haga algo y para eso vamos a precisar editores de texto para poder hacerlo entonces el primer tipo de editores de texto son los editores de texto plano cuando uno se refiere a texto plano está hablando de texto asqui o sea texto que no tiene ningún tipo de formato se acuerdan que la clase pasada vimos la tabla asqui tenía las letras en minúscula las letras en mayúscula los números pero y tenía un montón de caracteres especiales que era no sé dar un enter y cosas de ese estilo pero yo no podía no tenía una letra subrayada no tenía letras en negritas no tenía tamaño de las letras entonces en este tipo de editores en general lo que yo voy a poder hacer es escribir algún tipo de texto en lo que lo importante es lo que está escrito o sea voy a tener un solo tipo de tipografía o sea un solo tipo de letra no voy a tener gráficos no voy a tener no voy a tener colores y en general este tipo de editores son los que me van a servir cuando yo quiera suministrar información en programos y sistemas o sea para programar yo voy a usar editores de texto plano ustedes van a tener el lunes que viene la presentación con Ernesto y después las clases en la sala de máquinas van a usar un editor que forma parte de octav donde pueden escribir las instrucciones y van a ver una cosa que les va a llamar la atención por esto que yo les digo el editor de octav reconoce algunas palabras especiales que ustedes van a usar no sé la palabra function las palabras wild for if y ese tipo de cosas y se las va a pintar de colores ahí a uno le podrías arruido y va a decir bueno pero vos me estás diciendo que no hay colores que no hay esto y cuando yo uso un editor real me pinta las palabras de colores bueno el que está pintando eso es el editor cuando uno guarda el archivo si ustedes lo abran en otro editor van a ver que las palabras no tienen colores lo pasa de claro cuando yo programo en octav octav sabe que la palabra y tiene un sentido especial en la programación entonces me la resalta para que yo la vea más fácil la palabra function la palabra wild ahora cuando trabaja en la semana que la otra semana en la sala de máquinas lo van a ver es importante ahí que no le genera confusión eso o sea no es que se está escribiendo esa palabra en ese color sino que la estoy viendo en ese color solamente es el editor el que me la muestra de esa forma porque porque imagínense cuando uno escribe programas de 50 líneas de código si todo se ve sin ningún tipo de jerarquización es difícil de leer el código que editores de texto hay bueno el más conocido es el blog de notas seguramente que alguna vez lo hayan usado y bueno estos son de linux y estos ya están más orientados a veces a programación no pas más más y sublime es eso si yo escribo es sublime por ejemplo me deja elegir asociado a un texto en qué lenguaje está escrito ese texto y en función de eso me pinta las palabras especiales de colores este se usa bastante en desarrollo ustedes van a usar un editor que ya viene en octav o octav van a lo van a ver la clase que viene es un entorno en el que yo puedo ejecutar cosas y a la vez puedo escribir código y eso me permite escribir cosas y probar que hacen de forma bastante interactiva eso no suele pasar en la mayoría de lenguajes de programación por otro lado voy a tener los procesadores de texto que van a tener texto con formato enriquecido en ese caso yo voy a poder agregar elementos que me van a permitir organizar y jerarquizar la información esto es lo que están más familiarizado por ejemplo word es uno de este tipo donde yo puedo usar diferentes tipos de caracteres subrayado negrita tamaño colores pone imágenes y perlinks y esto en realidad está más orientado a que sea leído por una persona o sea si yo agarro un word y escribo un programa en octav y se lo doy escriba un programa en el lenguaje de octav y se lo dio octav octav no va a saber procesar ese archivo porque tiene un montón de otra información que octav no sabe qué hacer con ella se entendió de eso entonces cuando uno vaya a hacer un programa o usa el editor de octav o usa el blog de notas o algo similar pero no vayan a usar nunca un procesador de texto con formato porque lo que les va a pasar es que cuando le pidan ejecutame este archivo les va a dar error bueno vamos a empezar a hablar de lenguajes de programación o sea hablamos de hardware hablamos de sistemas operativos de los tipos de aplicaciones que hay estas de base las otras más orientadas en usuario y ahora vamos a hablar de lenguajes de programación que nos van a permitir a nosotros hacer programas hacer aplicaciones no vamos a llegar a hacer aplicaciones como las que suelen usar pero vamos a hacer programas que hacen que la computadora compute o haga un cálculo o resuelva un problema concreto entonces bueno que es un que es un lenguaje es un conjunto de símbolos y reglas acerca de cómo se organizan esos símbolos esta es la definición del lenguaje general en un lenguaje de programación va a ser lo mismo pero aplicado a la programación o sea yo voy a tener un conjunto de reglas y de símbolos que voy a poder usar para poder escribir ese programa si yo no cumplo con esas reglas lo que va a pasar es que el programa no va a funcionar me va a dar un error me va a decir no entiendo lo que me quieres decir es bastante parecido con el símil con el idioma con el lenguaje castellano o ese tipo de cosas si yo construyo más las oraciones lo que pasa es que ustedes no me entienden lo que yo digo bueno si yo cuando le escribo en un lenguaje de programación un programa a la computadora y escribo las cosas mal digamos no respeto las estructuras lo que va a pasar es que la computadora no va a entender lo que yo quise decir en el caso de la computadora es peor porque básicamente aplica un algoritmo y tratas de hacer eso entre dos personas capaz que yo me expreso mal pero si la otra persona pone buena voluntad termina entendiendo lo que yo quise decir la computadora aplica reglas y si no te ceñiza las reglas no te entiendo estás haciendo algo mal hablamos la clase pasada del tema de los cero si uno si todo el tema del binario y eso cada computadora tiene un lenguaje de máquina digamos que es que es en binario digamos que son tiras de unos y ceros de instrucciones que entiende esa computadora lo que nos va a permitir hacer un lenguaje de programación es que nosotros podamos escribir un algoritmo o sea un conjunto de instrucciones en un lenguaje de más alto nivel y en algún momento eso se va a convertir a esas instrucciones de unos y ceros que va a usar la computadora se entiende eso más o menos o sea antiguamente no sé yo qué sé hay gente que hoy en día trabaja en cosas en las que programan muy bajo nivel y termina programando prácticamente el lenguaje de máquina pero son aplicaciones muy concretas y muy específicas cuando empezaron las primeras épocas de la programación y ese tipo de cosas en computadora de la década del 60 70 lo lenguaje de programación empiezan a surgir por ahí pero lo primero se programaba en eso en las instrucciones de la máquina no en tiras de unos y ceros instrucciones de muy bajo nivel a veces las máquinas tienen otra cosa de se llama lenguaje ensamblador que por lo menos esas tiras de unos y ceros me los transforma en palabras que tienen algún sentido pero bueno lo que ha pasado con el paso de los años es que uno tiende cada vez a programar con más nivel de abstracción uno no quiere hacer cosas tan a bajo nivel en general entonces es fundamental el uso del lenguaje de programación que permiten que yo pueda definir como ideas a más alto nivel más conceptuales no este no sé hablábala otra vez del modelado del río a la plata no el tema este del sedimento y todo eso en realidad yo voy a tener un problema ahí de de ecuaciones en derivadas parciales de elementos finitos o algo en lo que yo quiero que cada posición del río en función del sedimento que hay en las posiciones cercanas y cómo viene la marea calcule en el paso siguiente cuál va a ser el sedimento en ese lugar bueno eso es un problema matemático son unas ecuaciones que yo tengo que resolver o sea que tiene que ver con los unos y ceros yo quiero un lenguaje en el que le pueda poner expresiones matemáticas y me puedas calcular las cosas se entiende yo necesito mucha más abstracción el ejemplo que les ponía de los molinos de viento y los tipos de pala lo que yo quiero poderle decir es bueno tenés estos diseños evaluámele a ser un simulador no quiero escribir en instrucciones de bajo nivel de una computadora o en unos y ceros tan entonces los lenguajes de programación me simplifican la vida es lo que hace que yo pueda resolver problemas más difíciles que si no me perdería el tiempo aprendiendo a programar en assembler o en ceros y unos hay muchos tipos de lenguaje de programación depende un poco para qué lo quiera uno el lenguaje que va a usar los lenguajes científicos que se suelen usar voy a hablar primero madlab y octav madlab es un lenguaje que es hecho por una empresa octav es como una versión libre bastante inspirado en madlab con menos librerías disponibles no madlab te da un montón de librerías que te resuelven ya un montón de problemas en octav hay una comunidad de gente que que desarrolla cosas similares pero bueno a veces no no tiene todas las cosas que tiene madlab nosotros vamos a usar octav primero porque es eso es ustedes lo pueden bajarlo pueden instalar o sea es gratuito madlab las licencias salen como cinco mil dólares una cosa así es no tiene sentido después está fortran que es otro lenguaje científico este es un lenguaje bastante viejo y que se viene usando como desde la década del 70 ha tenido muchas versiones los que usaban esto mayoritariamente originalmente eran los físicos hay mucha gente que labura hoy en día en el instituto de mecánica toda la gente que trabaja como en termo aplicada la gente que trabaja con curto y eso que usan fortran para programar se sigue usando hasta el día de hoy bueno después hay software que tienen que ver más con cosas comerciales como los sistemas de bancos bases de datos y almacenamiento yo que sé sistema de liquidación de ute que suelen usar cobal es algo viejo que todavía sigue existiendo pero pero generalmente con códigos legados pero está más se usa bastante las bases de datos programadas en ese que le o pl sql después hay algunos lenguajes que persiguen objetivos genéricos que son multipropósitos se sirven un poco para cualquier cosa el el que más se usa en computación suele ser seis más más que se usa bastante python también es un lenguaje que se está usando bastante ahora sobre todo para los temas de ciencia de datos y eso que da varias posibilidades digamos bueno después hay software específico para para generar simulaciones no si uno tiene que hacer yo que sé simulaciones de estado finito no de cosas bueno justo las simulaciones que se me ocurren se pueden resolver análicamente pero por ejemplo si uno quisiera hacer un modelo no en los supermercados los supermercados usan modelos alguien lo estudió los modelos de cola para para minimizar el tiempo de espera de la gente cuando tiene que pagar ustedes son relativamente jóvenes pero seguramente lo vieron hace 10 años atrás o 15 años atrás los supermercados la gran mayoría tenía una caja tenía 10 cajas y había 10 colas distintas no seguro que el que lo llegaron a ver hoy en día la mayoría de supermercados tiene una caja sola y vos vas perdón una cola sola y vos vayendo a la caja que va quedando libre eso ese modelo se puede estudiar analíticamente no hace falta simularlo eso hace que el tiempo de espera de la gente sea más bajo que en el modelo que en el otro modelo digamos pero bueno con simula uno puede generar eso una simulación y estudiar los tiempos medios de espera y ese tipo de cosas bueno puede haber software específico yo que sé para hacer animaciones no sé en algún momento flash era algo muy usado y creo que se usan bastante menos y bueno en la carrera computación se ven otros paradigmas distintos al que vamos a ver en este curso que tiene que ver con este programación funcional y programación lógica pero bueno eso no me voy a poner a explicar qué son pero esos esquemas siguen ideas un poco distintas a las que vamos a ver en el curso si alguna vez escucharon hablar a seguramente alguno con el tema de de la aplicación coronavirus y capaz que lo sintió a hablar a jodal que es el dueño de artech el motor de artech artech es una empresa que hace un software uruguayo que se llama genexus creo que ahora la vendieron la empresa y eso que permite es como un software que te ayuda a desarrollar otros sistemas el grueso de las cosas o sea el motor que funciona bajo nivel usa el paradigma de este lógico digamos usaron ese paradigma para desarrollar su aplicación de en computación hay un curso de un semestre que enseña programación funcional y otro curso de un semestre que enseña programación lógica pero bueno es bastante distinto a lo que vamos a ver en el curso bueno entonces estábamos hablando de esto de cómo de un lenguaje de programación se va a pasar a un lenguaje de máquina básicamente van a haber dos estrategias distintas que van a tener características completamente distintas y van a determinar funcionamientos distintos por un lado está la compilación y por otro lado está la interpretación o los lenguajes compilados digamos o los lenguajes interpretados qué pasa con los lenguajes compilados a ver ejemplos de lenguajes compilados son fortrans cs más más a esos de los que yo de los que nombré desde el que estaban en la presentación anterior en la en la ppt anterior esos son compilados qué es lo que va a pasar en un lenguaje compilado bueno el programador va a escribir su programa fuente o sea su código va a escribir el código que puede tener funciones puede estar partido no quiere decir que tiene que escribir un único archivo que tiene un montón que son miles y miles de líneas sino que podría partirse en archivos tener algún tipo de relación entre esos archivos y con esos archivos va a llamar a un compilador un programa que es el que se va a encargar de generar el código máquina perdón qué es lo que va a pasar acá con cuando yo compile el compilador lo que va a hacer es chequear que lo que yo escriba esté correcto sintácticamente qué quiere decir que esté correcto sintácticamente que esto que les decía hoy del lenguaje de que yo esté usando bien las reglas del lenguaje en el que estoy programando todos los años creo que pongo el mismo ejemplo si yo les digo el perro verde ustedes pueden decir a qué sentido tiene un perro verde capaz que el color no es ese y te está refiriendo algo que está mal pero eso es semántica la oración está bien formulada o sea es el perro verde si yo les digo perro el verde o verde perro el ustedes van a decir no ahí estás diciendo algo que está está mal bueno cuando hablo de chequeos sintácticos de alguna forma lo que está pasando es eso lo que está chequeando es que la estructura que yo estoy armando tenga sentido ahora eso no quiere decir que eso haga algo que esté bien yo puedo escribir algo que sintácticamente es correcto y que semánticamente esté mal lo mismo va a pasar con los lenguajes de con con los programas que yo hago en los lenguajes de programación o sea cuando yo compilo algo lo que va a chequear es que yo esté usando las instrucciones correctamente o sea que si en el if por ejemplo que lo vamos a ver dentro de varias clases lo siguiente que se espera es una condición aparezca una condición ahora el compilador no tiene forma de saber si la si la condición que yo escribí ahí es la correcta para este programa lo que va a chequear es que yo si respete la estructura sintáctica de lo que tengo que escribir o sea siga las reglas del lenguaje de programación si escribo algo que sigue las reglas pero hace otra cosa distinta la que yo tengo que hacer el programa va a funcionar mal pero va a funcionar se entiende eso entonces el compilador lo que hace es chequea esas condiciones semánticas y genera un código máquina tan se va a ejecutar un encadenador después del compilador que es el que va a generar el ejecutable que va a ser la tira de unos y ceros porque porque está ese paso intermedio acá bueno porque como les decía hoy hay muchas cosas que se usan para aumentar la productividad en computación y una tiene que ver con que existan bibliotecas que hacen algo por ejemplo en los ejemplos que ponía hoy si yo creo estoy haciendo un modelado de algo y en el medio resuelvo una ecuación en derivadas parciales si existiera una biblioteca que resuelve ecuaciones en derivadas parciales en mi código lo que yo pondría es llamar esa biblioteca y ejecutar esta función ahora en mi programa no están los unos y ceros de cómo resolver eso en mi programa sólo está la llamada esa función yo le voy a decir ah en la biblioteca solver de ecuaciones en derivadas parciales resolveme llamar tal función que resuelve este tipo de ecuaciones en derivadas parciales entonces primero se hace esa compilación se obtiene algo que ya se empieza a parecer a unos y ceros o tiene unos y ceros pero en algún lado dice acá llama la función tal de tal otro biblioteca acá llama a tal cosa entonces en esta etapa de el encadenador lo que hace es se obtienen los unos y ceros de esas funciones que yo llamé y con eso se hace un programa ejecutable completo se hace genera toda la tira de unos y ceros que ejecuta mi programa por eso está esta separación entre compilador y encadenador pero lo importante acá es que entiendan este proceso de eso tengo el programa fuente compilo con eso obtengo los unos y ceros y el único chequeo que se hizo en el medio es sintáctico ahora como decía en eso si yo uso un montón de bibliotecas y uso un montón de funciones lo que me va a pasar es que el programa ese binario va a crecer y va a ser muy grande y eso me va a traer problemas para que eso cargue en la memoria ramo entonces en windows por ejemplo en algún momento lo que se usaban son unas librerías dinámicas que se llamaban del l se siguen usando hasta hoy entonces si yo llamaba esas rutinas que estaban en esa biblioteca y todo eso en vez de traerme los unos y ceros y incrustárselos a mi código lo que se hace es que se dejan como unas referencias pendientes y cuando va a ejecutar llama a esa librería que ejecuta ese es el esquema que usa en windows este otro esquema perdón los dinámicos ya de object creo que son de son de linux bueno esos son los compilados ahora cómo funcionan los interpretados nosotros vamos a trabajar con octav con octav que es interpretado en los lenguajes interpretados lo que se hace es se agarra ese texto que yo estoy escribiendo con el programa y voy a leer una única instrucción voy a leer una sentencia sola esa se va a analizar otra vez el chequeo este sintáctico que les digo sea ver que la instrucción sea correcta en el sentido de que respete las reglas del lenguaje si no está bien me va a dar un mensaje de error me va a decir no entiendo lo que escribiste corregilo porque no se entiende esa instrucción y te va a dar algún tipo de ayuda de cuál es el error que es lo que no está entendiendo a veces ese error puede ser bastante difícil de identificar si la instrucción que yo le doy es correcta digamos en el sentido sintáctico el intérprete la entiende lo que va a hacer es ejecutarla y ahí va a pasar a esperar a leer la próxima sentencia entonces fíjense que esto es bastante distinto a lo que dije hace un rato porque en lo que hace un rato yo tenía mi archivo con mil líneas y lo que le hacía las procesaba todas y generaba unos y ceros en esto va a dar la primera línea la va a tratar de ejecutar puedo bien voy a la segunda y nunca genero los unos y ceros digamos de alguna forma eso en general nos da un montón de ventaja porque nos permite prototipar programas o sea yo puedo escribir una instrucción y probarla ver qué hace escribir otra instrucción y probarla ver qué hace en los lenguajes compilados lo que suele pasar es que si uno hace un programa largo de mil líneas de código y no los fue probando a poquito le va a pasar que cuando compila le encuentra 40 errores y a veces es un poco difícil porque los errores se encadenan y los mensajes de error son muy difíciles de seguir si han visto a los estudiantes de computación haciendo entregas de p2 y de p3 eso les pasa todos los días digamos están luchando contra el compilador y tratar de entender por qué no me compila nosotros vamos a usar este paradigma que en general es más es más sencillo tiene algunas ventajas y tiene algunas desventajas ahora vamos a ver cuáles son bueno primero cerremos esto de cómo funciona cada uno cuando yo hago un programa compilado entonces como yo estoy obteniendo los unos y ceros termino con un programa ejecutable para eso no sea si fueran windows ustedes van a terminar con un punto x en el que si uno hiciera doble clic va a ejecutar el programa de ustedes entonces la interacción siempre es el hardware con el sistema y el programa que yo generé cuando yo trabajo cuando yo trabajo con programas interpretados yo voy a tener el hardware el sistema operativo y voy a necesitar tener el intérprete siempre y voy a usar mi archivo para ejecutar o sea para yo para que ustedes puedan ejecutar octav van a precisar una máquina que tenga instalado octav sino no van a poder ejecutar el programa si ustedes hicieran la entrega la entrega o este código este curso perdón lo hicieramos en c ustedes con el ejecutable lo podrían copiar de una máquina otra y ejecutarlo en otra se entendió de esto cuando yo tengo interpretado siempre necesito el intérprete puede ser que este esquema les parezca un poco complejo y dice bueno pero sirve eso se usa para algo bueno los que tengan un máquina windows y cada tanto les cargue les diga estoy actualizando el java y ese tipo de cosas haba funciona así y fue una un lenguaje que tuvo mucha incidencia en como en la explosión de internet en las computadoras porque porque es esto lo mismo que hablábamos con el sistema operativo si yo tengo un intérprete instalado en cada máquina o sea yo doy la versión para que se pueda instalar cualquier máquina soporta los programas que yo haga cuando yo genero un ejecutable hay que ver si anda cualquier máquina ahora voy a explicar por qué a veces no andan en cualquier máquina por por qué no van a andar en cualquier máquina por lo que dice acá o sea yo necesito un código ejecutable para cada plataforma se acuerdan cuando hablábamos de las máquinas de 32 bits y de 64 bits bueno si yo lo generé de 64 de 32 no me anda si yo generé un ejecutable para windows en linux no me anda si lo generé en linux en windows no me anda entonces cuando yo compilo generó un ejecutable que va a andar que va a funcionar en esa máquina y en máquinas similares si lo copio a otra de características distintas ese archivo no anda porque porque esas tiras de unos y ceros acuerdan se son instrucciones de la máquina cuando yo uso esas instrucciones de máquina en un contexto windows entiende algunas instrucciones y otras no y cuando lo hago en linux hay otras que no que no se entienden cruzadas qué ventajas tiene bueno ya que dije nombré primero este una desventaja voy a seguir con otras desventaja que es que no es cómodo para modelar cuando yo no tengo el algoritmo es esto si yo quiero probar una idea digo a ver esto capaz que funcione a ver yo tengo que escribir un programa completo para poder ejecutarlo no puedo probar dos líneas de código y ver qué hace entonces no puedo prototipar fácil ahora la gran ventaja que van a tener eso es que como ya tengo la cadena de unos y ceros cuando yo ejecute un programa compilado van a dar rapidísimo cuando yo trabaje con cosas interpretadas en general van a ser más lentos porque fíjense que cada vez que yo ejecuto estoy convirtiendo las instrucciones estoy decidir a esta instrucción quiere decir que tengo que hacer tal cosa esta instrucción está bien sintácticamente quiere tengo que hacer esta cosa en el otro yo ya generé todo el código junto y ya está lo bueno que tiene es que el programa es válido para cualquier plataforma con la que yo trabaje que tenga el intérprete o sea acá ninguno tiene linux pero si no sé fueran a hacer laboratorio dos compañeros uno tiene windows el otro tiene linux se pasan el archivo del programa y les van a dar en las dos máquinas lo único que tienen que tener es octav instalado en cada una de ellas y es mucho más fácil para ser modelado y análisis de rápido de datos o sea yo tengo que trabajar sobre eso quiero analizar unos datos ver este no sé si hay una regreso si puedo hacer una regresión lineal entre un conjunto de datos le pido a ver mostrame cómo son estos datos hace una gráfica se me esto voy viendo cosas y tomando decisiones el otro yo tendría como que pensar todo a priori en computación obviamente cuando hay estos cuando hay estos paradigmas así que son tan opuestos lo que se busca es tratar de hacer algo intermedio entonces hay algunas soluciones de compromiso entre esas cosas para no tener que eso o ser puramente compilados o ser puramente interpretados entonces por ejemplo se compila hasta un nivel intermedio entre lenguaje de programación y lenguaje de máquina y eso hace que el análisis intactico este que les decía o sea si yo tengo algo puramente interpretado cada vez hace el análisis intactico cuando hago este enfoque intermedio en realidad ya el análisis intactico lo hice una vez sola ya puedo chequear que las variables sean del tipo que tienen que ser que esté haciendo las cosas razonablemente y después sólo tengo que interpretar el código y otra solución perdón y otra solución de estas características es los compiladores que se llaman just in time que básicamente lo que hacen es me generan un código compilado pero chequean si yo el código fuente que dice es más nuevo no o sea si yo compilo una vez no si yo compilo una vez ya tengo un ejecutable si yo no hice cambios acá lo estamos pensando desde el lado interpretado si yo no hice cambios sobre el archivo no tiene sentido que reinterprete todo el archivo porque el ejecutable que genera ya me va a servir si en algún momento yo modificó algo en el archivo el tiene que generar otro ejecutable y eso se hace de alguna forma automáticamente haba esto que les decía que que sirvió para el auge de internet usaba una máquina virtual java y en realidad un código intermedio era este primero de los enfoques que yo les decía o sea el desarrollador en java generaba ese código intermedio que era lo que yo me bajaba en la máquina y eso se ajustaba a mi máquina específica cuando yo ejecutaba ahora el segundo paradigma que les dije de este de los compiladores este ya esting time es el que usa por ejemplo punto net hace ese tipo de cosas o sea se baja el código genera un ejecutable y si yo no cambio el código usa siempre el mismo ejecutable más lavo y en día hace eso para que para que las octav todavía no pero más lavo hace que es si yo escribo un programa lo trata de convertir en un ejecutable si yo no toco más el archivo usa el ejecutable ese que generó porque van a dar más rápido no tiene que interpretar cada vez bueno con eso dejamos por hoy el lunes con Ernesto van a ver octav y conmigo retoman el lunes siguiente acuérdense que el miércoles no hay clase