 Bueno, yo soy Ernesto, el otro docente que va a dar Teórico este año en Computación Uno. La clase de hoy es sobre Octave, que es el lenguaje de programación que vamos a usar durante el curso. Y bueno, vamos a ver que también es un entorno interactivo y les da posibilidades de hacer un montón de cosas. Bueno, yo soy Ernesto, el otro docente que va a dar Teórico este año en Computación Uno. La clase de hoy es sobre Octave, que es el lenguaje de programación que vamos a usar durante el curso. Y bueno, vamos a ver que también es un entorno interactivo y les da posibilidades de hacer un montón de cosas. Entonces bueno, vamos a empezar por la introducción a Octave. Más o menos mencionarles los elementos que están en el entorno, cómo se usa, algunos componentes y después algunas cosas particulares. Entonces bueno, vamos a empezar por la introducción a Octave. Más o menos mencionarles los elementos que están en el entorno, cómo se usa, algunos componentes y después algunas cosas particulares. Más sobre utilizar Octave como lenguaje de programación, que son las variables, las matrices, operaciones que se pueden hacer. Y así que bueno, comenzamos con Octave. Es un lenguaje de los que llamamos de alto nivel. Más sobre utilizar Octave como lenguaje de programación, que son las variables, las matrices, operaciones que se pueden hacer. Y así que bueno, comenzamos con Octave. Es un lenguaje de los que llamamos de alto nivel. Más creo que en la clase que viene con Martín van a ver un poco más sobre programación, sobre lenguajes de programación. En general decimos que un lenguaje es de alto nivel cuando es parecido a las palabras que usamos para hablar y para comunicarnos. Más creo que en la clase que viene con Martín van a ver un poco más sobre programación, sobre lenguajes de programación. En general decimos que un lenguaje es de alto nivel cuando es parecido a las palabras que usamos para hablar y para comunicarnos. Aunque van a ver que no es tan sencillo como el lenguaje natural, tiene algunas palabras que usamos todos los días y una sintaxis bastante entendible por humanos. Hay lenguajes de más bajo nivel que son un poco más crípticos, más orientados a lo que la máquina necesita y no tanto a lo que los humanos entendemos y estamos cómodos. Aunque van a ver que no es tan sencillo como el lenguaje natural, tiene algunas palabras que usamos todos los días y una sintaxis bastante entendible por humanos. Hay lenguajes de más bajo nivel que son un poco más crípticos, más orientados a lo que la máquina necesita y no tanto a lo que los humanos entendemos y estamos cómodos. Octave comienza haciendo un software pensado para un curso de diseño de reactores químicos, o sea que los que trabajan en ingeniería química, los que estudian ingeniería química, Octave comienza haciendo un software pensado para un curso de diseño de reactores químicos, o sea que los que trabajan en ingeniería química, los que estudian ingeniería química, ¿tienen algo de idea? Y bueno, se siguió desarrollando y hasta lo que eso hay, digamos. ¿tienen algo de idea? Y bueno, se siguió desarrollando y hasta lo que eso hay, digamos. Es software libre, quiere decir que es gratis y además es código abierto. Incluye herramientas para resolver problemas relacionados con álgebra lineal, con problemas de ingeniería y problemas científicos. Es software libre, quiere decir que es gratis y además es código abierto. Incluye herramientas para resolver problemas relacionados con álgebra lineal, con problemas de ingeniería y problemas científicos. Eso ya viene con Octave, da muchas facilidades en ese sentido y por eso lo elegimos como lenguaje del curso, porque pensamos que en el contexto en que estamos nosotros les puede servir en el futuro conocer esta herramienta. Eso ya viene con Octave, da muchas facilidades en ese sentido y por eso lo elegimos como lenguaje del curso, porque pensamos que en el contexto en que estamos nosotros les puede servir en el futuro conocer esta herramienta. Básicamente les puede resultar muy útil para prototipar algo rápido. Tienen una idea, quieren hacer un programa que funcione rápidamente y que resuelva un problema que tienen que involucra, por ejemplo, matrices o algo relacionado con el área en la que trabajan. Básicamente les puede resultar muy útil para prototipar algo rápido. Tienen una idea, quieren hacer un programa que funcione rápidamente y que resuelva un problema que tienen que involucra, por ejemplo, matrices o algo relacionado con el área en la que trabajan. Esto con Octave se hace rápidamente. Encontraste con otros lenguajes en donde el proceso puede ser un poco más trabajoso. Alternativas a Octave hay muchas. Matlab es como un calco de Octave, es muy parecido, van a ver si conocen algo de Matlab o si lo usaron alguna vez, van a ver que la sintaxis es muy parecida. Esto con Octave se hace rápidamente. Encontraste con otros lenguajes en donde el proceso puede ser un poco más trabajoso. Alternativas a Octave hay muchas. Matlab es como un calco de Octave, es muy parecido, van a ver si conocen algo de Matlab o si lo usaron alguna vez, van a ver que la sintaxis es muy parecida. Es un software pago, es muy potente, tiene muchas posibilidades. Usamos Octave que es muy parecido pero es software libre. Es un software pago, es muy potente, tiene muchas posibilidades. Usamos Octave que es muy parecido pero es software libre. Después algunos capaces que están familiarizados con CLab, que es otro lenguaje que se usa en ingeniería y en la ciencia. Después algunos capaces que están familiarizados con CLab, que es otro lenguaje que se usa en ingeniería y en la ciencia. Y bueno, últimamente está, últimamente hace diez años, pero está muy de moda Python, que es un lenguaje que se usa muchísimo para ciencia de datos. Entonces por eso se ha vuelto tan famoso y tan usado. Y bueno, últimamente está, últimamente hace diez años, pero está muy de moda Python, que es un lenguaje que se usa muchísimo para ciencia de datos. Entonces por eso se ha vuelto tan famoso y tan usado. Y para trabajar con cuestiones numéricas, que es lo que más nos interesa en este curso, tiene la biblioteca NumPy que les da algunas cosas que también Octave les trae para que sea sencillo trabajar con matrices y cuestiones de números. Pero bueno, Octave se lo pueden descargar de la página. Y para trabajar con cuestiones numéricas, que es lo que más nos interesa en este curso, tiene la biblioteca NumPy que les da algunas cosas que también Octave les trae para que sea sencillo trabajar con matrices y cuestiones de números. Pero bueno, Octave se lo pueden descargar de la página. Es bastante sencillo, ahí tienen versiones de Octave para distintos sistemas operativos. Está disponible para Linux, Mac y Windows, que son los más usados. También pueden descargarse el código y compilarlo ustedes mismos. Pero bueno, no es lo que recomendamos. Es bastante sencillo, ahí tienen versiones de Octave para distintos sistemas operativos. Está disponible para Linux, Mac y Windows, que son los más usados. También pueden descargarse el código y compilarlo ustedes mismos. Pero bueno, no es lo que recomendamos. El proceso de instalación en Windows es muy sencillo. Si ya han instalado otros programas es descargar el instalador, ejecutarlo y darle siguiente hasta que quede instalado. En Linux tienen distintos instaladores según la distribución de Linux que ustedes usen. Pero bueno, tampoco es mucho más difícil. El proceso de instalación en Windows es muy sencillo. Si ya han instalado otros programas es descargar el instalador, ejecutarlo y darle siguiente hasta que quede instalado. En Linux tienen distintos instaladores según la distribución de Linux que ustedes usen. Pero bueno, tampoco es mucho más difícil. Y por último, los que no quieren tener Octave instalado en su PC o prefieren, yo que sé, tienen una tablet o lo usan en el celular, hay una versión online que les da la mayoría de las funcionalidades que nos interesan en el curso y la pueden usar directamente desde la web. Y por último, los que no quieren tener Octave instalado en su PC o prefieren, yo que sé, tienen una tablet o lo usan en el celular, hay una versión online que les da la mayoría de las funcionalidades que nos interesan en el curso y la pueden usar directamente desde la web. La única cuestión acá es que para hacer programas y guardarlos tienen que entrar con una cuenta de Google y guardarlos en el Drive, los programas. Pero bueno, en general esta versión de Octave hace todo lo que necesitamos en el curso. Así que es una alternativa válida. La única cuestión acá es que para hacer programas y guardarlos tienen que entrar con una cuenta de Google y guardarlos en el Drive, los programas. Pero bueno, en general esta versión de Octave hace todo lo que necesitamos en el curso. Así que es una alternativa válida. Bien. Ya yendo a lo que es Octave. Octave se puede ver como dos cosas. Como una calculadora superpotente, digamos, o como un lenguaje de programación. Si lo queremos usar como una calculadora, lo que vamos a tener es lo que llamamos una consola, que es un lugar donde podemos escribir comandos. Bien. Ya yendo a lo que es Octave. Octave se puede ver como dos cosas. Como una calculadora superpotente, digamos, o como un lenguaje de programación. Si lo queremos usar como una calculadora, lo que vamos a tener es lo que llamamos una consola, que es un lugar donde podemos escribir comandos. Y cuando damos enter, Octave ejecuta ese comando y nos da el resultado. Entonces, eso nos da una respuesta inmediata. Podemos poner muchos tipos de cosas. Podemos poner todo. Le pondríamos una calculadora, no sé, 2 más go, enter y nos dice 4. Pero podemos poner raíz cuadrada, podemos poner gráficame tal cosa. Y cuando damos enter, Octave ejecuta ese comando y nos da el resultado. Entonces, eso nos da una respuesta inmediata. Podemos poner muchos tipos de cosas. Podemos poner todo. Le pondríamos una calculadora, no sé, 2 más go, enter y nos dice 4. Pero podemos poner raíz cuadrada, podemos poner gráficame tal cosa. Hay muchas cosas que podemos usar. Si queremos usar Octave así, como si fuera una calculadora, donde nosotros le damos una entrada y nos da una salida. Además, lo podemos usar como lenguaje de programación. Esto quiere decir que podemos escribir nuestros propios programas, que es lo que nos interesa más en este curso, Hay muchas cosas que podemos usar. Si queremos usar Octave así, como si fuera una calculadora, donde nosotros le damos una entrada y nos da una salida. Además, lo podemos usar como lenguaje de programación. Esto quiere decir que podemos escribir nuestros propios programas, que es lo que nos interesa más en este curso, que es básicamente de aprender a programar o aprender lo básico sobre la programación. Entonces, el uso que más le vamos a dar, que es el de escribir funciones y escribir scripts. Ya voy a explicar un poquito qué son cada uno. Si tienen alguna duda, me paran. que es básicamente de aprender a programar o aprender lo básico sobre la programación. Entonces, el uso que más le vamos a dar, que es el de escribir funciones y escribir scripts. Ya voy a explicar un poquito qué son cada uno. Si tienen alguna duda, me paran. Levantan la mano y yo creo que hasta acá es toda información. Entonces, para abrir Octave, si tienen un Linux, una consola, bueno, escriben Octave y se abre el programa en Windows. Levantan la mano y yo creo que hasta acá es toda información. Entonces, para abrir Octave, si tienen un Linux, una consola, bueno, escriben Octave y se abre el programa en Windows. No sé, lo tendrán que buscar en el menú y ir al ícono de Octave y abrirlo. Cuando están dentro de Octave pueden sacarlo con la cruz o con el comando quit. Eso es muy sencillo. Y cuando abran Octave van a encontrarse con esto. No sé, lo tendrán que buscar en el menú y ir al ícono de Octave y abrirlo. Cuando están dentro de Octave pueden sacarlo con la cruz o con el comando quit. Eso es muy sencillo. Y cuando abran Octave van a encontrarse con esto. Es un programa donde hay varias zonas delimitadas en la pantalla que hacen distintas cosas. Esta parte grande central, digamos, vendría a ser la consola, que es donde van a aparecer los resultados de todos los comandos que nosotros ingresemos. Es un programa donde hay varias zonas delimitadas en la pantalla que hacen distintas cosas. Esta parte grande central, digamos, vendría a ser la consola, que es donde van a aparecer los resultados de todos los comandos que nosotros ingresemos. ¿Se acuerdan cuando ingresamos un comando y le damos enter? Aparece el resultado ahí. El comando lo vamos a escribir acá abajo, en donde aparecen estas dos flechitas. Ahí se escribe el comando enter y sale la respuesta en esa parte central. ¿Se acuerdan cuando ingresamos un comando y le damos enter? Aparece el resultado ahí. El comando lo vamos a escribir acá abajo, en donde aparecen estas dos flechitas. Ahí se escribe el comando enter y sale la respuesta en esa parte central. Después tenemos una parte que es el explorador de archivos. Acá podemos navegar y seleccionar el directorio de trabajo de Octave. El directorio de trabajo aparece acá y acá. Después tenemos una parte que es el explorador de archivos. Acá podemos navegar y seleccionar el directorio de trabajo de Octave. El directorio de trabajo aparece acá y acá. Y es el directorio en donde están los programas que podemos usar en el momento. Para poder ejecutar un programa dentro de Octave vamos a necesitar que esté en el directorio de trabajo. Y es el directorio en donde están los programas que podemos usar en el momento. Para poder ejecutar un programa dentro de Octave vamos a necesitar que esté en el directorio de trabajo. Después, acá en el espacio de trabajo, ya van a ver, vamos a tener las variables que tenemos definidas en el ambiente. Ahora vamos a ver qué es definir una variable y todo, pero ahí vamos a tener los datos con los que estamos trabajando. Después, acá en el espacio de trabajo, ya van a ver, vamos a tener las variables que tenemos definidas en el ambiente. Ahora vamos a ver qué es definir una variable y todo, pero ahí vamos a tener los datos con los que estamos trabajando. Y acá abajo tenemos el historial de comandos. En caso de que hayamos ingresado unos comandos hace un rato y queramos ingresarlos de vuelta, los podemos buscar ahí en lugar de escribirlos todo de vuelta. Y acá abajo tenemos el historial de comandos. En caso de que hayamos ingresado unos comandos hace un rato y queramos ingresarlos de vuelta, los podemos buscar ahí en lugar de escribirlos todo de vuelta. Bien, esos son más o menos los elementos del área de trabajo con los que se van a encontrar y ahora los vamos a ver de vuelta, así que no se preocupen. Esta es la consola, un poco más grande. Bien, esos son más o menos los elementos del área de trabajo con los que se van a encontrar y ahora los vamos a ver de vuelta, así que no se preocupen. Esta es la consola, un poco más grande. Bueno, acá el usuario ingresó un comando que dice A igual RAM 10. Todo esto debería crear una matriz de 10 por 10 con números aleatorios y fue lo que pasó. Este es el resultado de ejecutar ese comando. Y luego el usuario ingresó este otro comando que es norma de A que debería calcular la norma de esa matriz. Bueno, acá el usuario ingresó un comando que dice A igual RAM 10. Todo esto debería crear una matriz de 10 por 10 con números aleatorios y fue lo que pasó. Este es el resultado de ejecutar ese comando. Y luego el usuario ingresó este otro comando que es norma de A que debería calcular la norma de esa matriz. Y ahí apareció este resultado, ans, y la norma de la matriz. Algunos comandos que podemos ingresar en esa consola están acá para que les queden como referencia. Algunos se los van a terminar aprendiendo porque al trabajar con la consola de Octave los ingresa mucho. Y ahí apareció este resultado, ans, y la norma de la matriz. Algunos comandos que podemos ingresar en esa consola están acá para que les queden como referencia. Algunos se los van a terminar aprendiendo porque al trabajar con la consola de Octave los ingresa mucho. PWD les dice el directorio de trabajo en el que están. Who y Who's les da información sobre las variables que están definidas. Dir y LS les permite cambiar de directorio y ver qué hay en cada directorio. CD también les permite cambiar de directorio. Dir y LS listan. PWD les dice el directorio de trabajo en el que están. Who y Who's les da información sobre las variables que están definidas. Dir y LS les permite cambiar de directorio y ver qué hay en cada directorio. CD también les permite cambiar de directorio. Dir y LS listan. CLC limpia la pantalla. Clear Variable nada más saca del entorno una variable que ya está definida. Clear Roll limpia todo lo que hay en el entorno. Estos son simplemente algunos comandos. CLC limpia la pantalla. Clear Variable nada más saca del entorno una variable que ya está definida. Clear Roll limpia todo lo que hay en el entorno. Estos son simplemente algunos comandos. Y ahora vamos a repasarlos al final de las diapositivas. Para obtener ayuda pueden Googlear, pero también pueden poner Help y el comando sobre el cual quieran que Octave les de información. Y ahora vamos a repasarlos al final de las diapositivas. Para obtener ayuda pueden Googlear, pero también pueden poner Help y el comando sobre el cual quieran que Octave les de información. En general la ayuda está en inglés, creo. Help nos da información sobre cómo usar la ayuda. Doc nos muestra la documentación de Octave. En general la ayuda está en inglés, creo. Help nos da información sobre cómo usar la ayuda. Doc nos muestra la documentación de Octave. LookFor sirve para si nos acordamos de alguna palabra o queremos... No sabemos exactamente cómo se llama la función sobre la que queremos la información, pero nos acordamos de algo. LookFor busca un texto dentro de la ayuda de Octave. Entonces nos va a dirigir hacia donde queremos. LookFor sirve para si nos acordamos de alguna palabra o queremos... No sabemos exactamente cómo se llama la función sobre la que queremos la información, pero nos acordamos de algo. LookFor busca un texto dentro de la ayuda de Octave. Entonces nos va a dirigir hacia donde queremos. Hasta acá nada muy complicado. Si tienen preguntas me van diciendo. Esto es obtener ayuda sobre los operadores. Por ejemplo, Help y entre apostrofes el puntito lista todos los operadores que hay en Octave. Hasta acá nada muy complicado. Si tienen preguntas me van diciendo. Esto es obtener ayuda sobre los operadores. Por ejemplo, Help y entre apostrofes el puntito lista todos los operadores que hay en Octave. Entre apostrofes el puntito lista todos los operadores que hay en Octave. Operadores son, por ejemplo, lo que ustedes saben que son los operadores. El signo de más, el signo de por, el igual. Entonces son operadores. Algunos funcionan y otros no tanto. Entre apostrofes el puntito lista todos los operadores que hay en Octave. Operadores son, por ejemplo, lo que ustedes saben que son los operadores. El signo de más, el signo de por, el igual. Entonces son operadores. Algunos funcionan y otros no tanto. En ese caso pueden ir a la documentación. Hay una parte que se llama Operator Index donde están todos listados y los pueden buscar mejor. Eso está más que nada para que les quede de referencia. Luego no pretendo que se lo acuerden. Yo no me lo acuerdo. En ese caso pueden ir a la documentación. Hay una parte que se llama Operator Index donde están todos listados y los pueden buscar mejor. Eso está más que nada para que les quede de referencia. Luego no pretendo que se lo acuerden. Yo no me lo acuerdo. Se lo acuerden eso. Yo no me lo acuerdo. Pero bueno, siguiendo con los elementos de la pantalla de Octave. Ahí en la parte de arriba están las herramientas que es muy parecido a la barra de herramientas de cualquier programa que ustedes conozcan. Ahí hay una hojita con una estrellita que es como crear un... Se lo acuerden eso. Yo no me lo acuerdo. Pero bueno, siguiendo con los elementos de la pantalla de Octave. Ahí en la parte de arriba están las herramientas que es muy parecido a la barra de herramientas de cualquier programa que ustedes conozcan. Ahí hay una hojita con una estrellita que es como crear un... Sirve para crear un nuevo archivo. Esos archivos van a ser donde guardemos los programas que escribamos. Entonces darle a la hojita esa lo que va a hacer es abrir un editor de texto especial. Si bien pueden usar cualquier editor de texto que a ustedes les guste. Ese editor de texto lo que tiene es que les va a marcar con colores algunas palabras que son propias del lenguaje Octave. Sirve para crear un nuevo archivo. Esos archivos van a ser donde guardemos los programas que escribamos. Entonces darle a la hojita esa lo que va a hacer es abrir un editor de texto especial. Si bien pueden usar cualquier editor de texto que a ustedes les guste. Ese editor de texto lo que tiene es que les va a marcar con colores algunas palabras que son propias del lenguaje Octave. Y bueno, el otro elemento que vemos acá es el directorio en donde estamos parados. Como les decía, los programas que estén guardados en ese directorio son los que vamos a poder ejecutar. Los otros no los va a encontrar. Vamos a tener que cambiar de directorio para ejecutarlos. Y bueno, el otro elemento que vemos acá es el directorio en donde estamos parados. Como les decía, los programas que estén guardados en ese directorio son los que vamos a poder ejecutar. Los otros no los va a encontrar. Vamos a tener que cambiar de directorio para ejecutarlos. Si le dan a la hojita con la estrellita, se abre el editor. Ahí lo ven en acción. Ahí hay algunas palabras que tienen sentido para Octave. Les decimos palabras reservadas que no las pueden usar para otras cosas. Si ustedes escriben function, eso para Octave quiere decir que empieza una función. Si le dan a la hojita con la estrellita, se abre el editor. Ahí lo ven en acción. Ahí hay algunas palabras que tienen sentido para Octave. Les decimos palabras reservadas que no las pueden usar para otras cosas. Si ustedes escriben function, eso para Octave quiere decir que empieza una función. En el resto del programa no van a poder poner la palabra function y usarla para otra cosa. Porque se va a generar un problema. If y End también son palabras reservadas de Octave que quieren decir algo específico. Por eso se las ponen en color azul. Después los números se los ponen amarillito. Los paréntesis se los resalta también. En el resto del programa no van a poder poner la palabra function y usarla para otra cosa. Porque se va a generar un problema. If y End también son palabras reservadas de Octave que quieren decir algo específico. Por eso se las ponen en color azul. Después los números se los ponen amarillito. Los paréntesis se los resalta también. La bondad de este editor es que justamente les facilita la lectura del código. Si se olvidan de cerrar una sección del código se van a dar cuenta más fácil. Si hay algún error de tipeo o de sintaxis que no se acuerdan bien cómo se hace alguna cosa. La bondad de este editor es que justamente les facilita la lectura del código. Si se olvidan de cerrar una sección del código se van a dar cuenta más fácil. Si hay algún error de tipeo o de sintaxis que no se acuerdan bien cómo se hace alguna cosa. Capaz que Octave se los puede marcar y les dicen que acá hay un error, acá hay algo mal. Es recomendable usar este editor. Pero pueden usar cualquier editor que ustedes quieran para escribir los programas. Pueden usar el blog de notas o pueden usar Sublime, los que lo conozcan o Notebook más más. Es lo mismo. Los programas los van a poder ejecutar igual. Capaz que Octave se los puede marcar y les dicen que acá hay un error, acá hay algo mal. Es recomendable usar este editor. Pero pueden usar cualquier editor que ustedes quieran para escribir los programas. Pueden usar el blog de notas o pueden usar Sublime, los que lo conozcan o Notebook más más. Es lo mismo. Los programas los van a poder ejecutar igual. Solo que esto nada más les pinta con colorcitos las palabras reservadas. Ahí arriba también hay algunas cosas que les van a resultar útiles en Octave, que las pueden ir explorando ustedes. Solo que esto nada más les pinta con colorcitos las palabras reservadas. Ahí arriba también hay algunas cosas que les van a resultar útiles en Octave, que las pueden ir explorando ustedes. Pero bueno, si están escribiendo un programa con este botón de play lo pueden ejecutar. Ese tipo de cosas. Yo les decía que cuando usamos Octave como lenguaje de programación lo que vamos a hacer es escribir funciones y scripts. Pero bueno, si están escribiendo un programa con este botón de play lo pueden ejecutar. Ese tipo de cosas. Yo les decía que cuando usamos Octave como lenguaje de programación lo que vamos a hacer es escribir funciones y scripts. Más adelante en el curso vamos a profundizar sobre estas dos cosas, ver cuáles son las diferencias y qué cuidados hay que tener cada una. Pero les doy un pantallazo para que sepan de lo que estoy hablando. Los scripts son simplemente listas de comandos. Más adelante en el curso vamos a profundizar sobre estas dos cosas, ver cuáles son las diferencias y qué cuidados hay que tener cada una. Pero les doy un pantallazo para que sepan de lo que estoy hablando. Los scripts son simplemente listas de comandos. Cuando yo uso Octave como calculadora, pongo un comando, aprieto enter, me da la respuesta, pongo otro comando, pongo enter, me da la respuesta. Yo puedo hacer una lista de todos esos comandos y ejecutarlos todos de una y guardarlos bajo cierto nombre en un archivo. Eso es un script. Cuando yo uso Octave como calculadora, pongo un comando, aprieto enter, me da la respuesta, pongo otro comando, pongo enter, me da la respuesta. Yo puedo hacer una lista de todos esos comandos y ejecutarlos todos de una y guardarlos bajo cierto nombre en un archivo. Eso es un script. Para crear un script, podemos abrir el editor, poner todos los comandos que queramos separados por enter, lo guardamos, le ponemos un nombre. Y después para ejecutar todos esos comandos, cuando los dejamos en el script, en el archivo, esos comandos todavía no hicieron nada, no se ejecutaron. Para crear un script, podemos abrir el editor, poner todos los comandos que queramos separados por enter, lo guardamos, le ponemos un nombre. Y después para ejecutar todos esos comandos, cuando los dejamos en el script, en el archivo, esos comandos todavía no hicieron nada, no se ejecutaron. Para ejecutarlos, para que hagan algo, tenemos que ir hacia el directorio de trabajo en donde está ese script, donde guardamos ese archivo. Escribir el nombre del archivo en la consola de octaves en donde ponemos los comandos y darle enter. Ahí, cuando leemos enter, se van a ejecutar todos los comandos que hayamos puesto en esa lista. Para ejecutarlos, para que hagan algo, tenemos que ir hacia el directorio de trabajo en donde está ese script, donde guardamos ese archivo. Escribir el nombre del archivo en la consola de octaves en donde ponemos los comandos y darle enter. Ahí, cuando leemos enter, se van a ejecutar todos los comandos que hayamos puesto en esa lista. ¿Alguna pregunta sobre esto? Un script, un archivo con una lista de comandos. Lo guardo y para ejecutarlo le pongo el nombre en la consola de octaves. ¿Alguna pregunta sobre esto? Un script, un archivo con una lista de comandos. Lo guardo y para ejecutarlo le pongo el nombre en la consola de octaves. Variables. Yo les dije que acá, en esta parte de la pantalla de octaves, van a aparecer todas las variables que están definidas. ¿Qué es una variable? Una variable es un valor al que yo le pongo un nombre. Variables. Yo les dije que acá, en esta parte de la pantalla de octaves, van a aparecer todas las variables que están definidas. ¿Qué es una variable? Una variable es un valor al que yo le pongo un nombre. Es como si tuviera una cajita, le pusiera una etiqueta con un nombre y adentro guardara un valor. Cuando quiero saber qué hay en esa cajita, tengo que abrirla y ver qué valor tiene. Y también puedo reemplazar el valor que está en esa cajita. Esa es una variable. Es como si tuviera una cajita, le pusiera una etiqueta con un nombre y adentro guardara un valor. Cuando quiero saber qué hay en esa cajita, tengo que abrirla y ver qué valor tiene. Y también puedo reemplazar el valor que está en esa cajita. Esa es una variable. Para usar ese valor en el programa, vamos a tener un nombre con el que nos vamos a referir ese valor. Y esas cajitas, esas variables, pueden guardar un montón de cosas. Lo que nosotros queramos. Pueden guardar números reales, pueden guardar complejos, pueden guardar matrices, pueden guardar letras, textos y más cosas. Para usar ese valor en el programa, vamos a tener un nombre con el que nos vamos a referir ese valor. Y esas cajitas, esas variables, pueden guardar un montón de cosas. Lo que nosotros queramos. Pueden guardar números reales, pueden guardar complejos, pueden guardar matrices, pueden guardar letras, textos y más cosas. Y eso es lo importante. También pueden modificarse. Yo tengo una variable definida, puedo modificar su valor y esa variable pasa a valer otra cosa. Y lo que valía antes ya no existe más. Capaz que es un poquito distinto al concepto de variable al que están acostumbrados. Y eso es lo importante. También pueden modificarse. Yo tengo una variable definida, puedo modificar su valor y esa variable pasa a valer otra cosa. Y lo que valía antes ya no existe más. Capaz que es un poquito distinto al concepto de variable al que están acostumbrados. Y si ustedes están acostumbrados a la variable, tienen que pensar en eso. En la variable como un pedazo de la memoria de la computadora, una cajita en donde guardo cosas. Donde guardo un valor. Las etiquetas que le pongo a esas cajitas tienen algunas reglas. No puedo ponerle cualquier nombre a una variable. Y si ustedes están acostumbrados a la variable, tienen que pensar en eso. En la variable como un pedazo de la memoria de la computadora, una cajita en donde guardo cosas. Donde guardo un valor. Las etiquetas que le pongo a esas cajitas tienen algunas reglas. No puedo ponerle cualquier nombre a una variable. Puedo usar básicamente cualquier letra, número o carácter tipo guión bajo. Pero no puede contener espacios. Tiene que estar todo junto. Tiene que comenzar con una letra. No puedo poner un número al principio de un nombre de variable. Y se distingue mayúsculas y minúsculas. Entonces la variable X mayúscula va a ser distinta a la variable X minúscula. Puedo usar básicamente cualquier letra, número o carácter tipo guión bajo. Pero no puede contener espacios. Tiene que estar todo junto. Tiene que comenzar con una letra. No puedo poner un número al principio de un nombre de variable. Y se distingue mayúsculas y minúsculas. Entonces la variable X mayúscula va a ser distinta a la variable X minúscula. Y puedo mezclar mayúsculas y minúsculas como quiera en el nombre de variable. Y puedo crear el nombre que yo quiera. ¿Cómo hago para poner un valor adentro de la cajita? Bueno, tengo esa sintaxis, esa forma de hacerlo que es... Y puedo mezclar mayúsculas y minúsculas como quiera en el nombre de variable. Y puedo crear el nombre que yo quiera. ¿Cómo hago para poner un valor adentro de la cajita? Bueno, tengo esa sintaxis, esa forma de hacerlo que es... Del lado izquierdo pongo el nombre de la variable. Pongo ese operador que si bien yo le voy a decir igual en realidad es el operador de asignación. Es el operador que usamos para asignar un valor a una variable. Y del lado derecho pongo el valor que quiero asignarle. Ese valor puede ser un número, como les decía puede ser un texto. Del lado izquierdo pongo el nombre de la variable. Pongo ese operador que si bien yo le voy a decir igual en realidad es el operador de asignación. Es el operador que usamos para asignar un valor a una variable. Y del lado derecho pongo el valor que quiero asignarle. Ese valor puede ser un número, como les decía puede ser un texto. O puede ser el resultado de una operación. Entonces puedo poner cualquier cosa de ese lado derecho que termine siendo un valor. Entonces ahí hay algunos ejemplos. X igual 3 asigna el valor 3 a la variable X. O puede ser el resultado de una operación. Entonces puedo poner cualquier cosa de ese lado derecho que termine siendo un valor. Entonces ahí hay algunos ejemplos. X igual 3 asigna el valor 3 a la variable X. Ahí en el segundo renglón la variable Y va a ser asignada con el resultado de la operación 5 por 4. Esa operación se va a hacer primero. Va a dar el resultado 20 y se va a asignar un 20 a la variable Y. Y en el tercer renglón lo que estamos haciendo es crear un vector de tres elementos. Ahí en el segundo renglón la variable Y va a ser asignada con el resultado de la operación 5 por 4. Esa operación se va a hacer primero. Va a dar el resultado 20 y se va a asignar un 20 a la variable Y. Y en el tercer renglón lo que estamos haciendo es crear un vector de tres elementos. Y se lo estamos asignando a la variable Z. Lo que quiero remarcar es que por más que sea igual no estoy en este momento comparando la X con un valor. Lo que estoy haciendo es asignándole ese valor. Y se lo estamos asignando a la variable Z. Lo que quiero remarcar es que por más que sea igual no estoy en este momento comparando la X con un valor. Lo que estoy haciendo es asignándole ese valor. Para comparar dos cosas, para saber si son iguales o no, voy a usar otro operador que es el operador de igualdad. Este es el operador de asignación. ¿Preguntas? Bueno. No entiendo, cuando algo te consideras falso, no pones nada. Para comparar dos cosas, para saber si son iguales o no, voy a usar otro operador que es el operador de igualdad. Este es el operador de asignación. ¿Preguntas? Bueno. No entiendo, cuando algo te consideras falso, no pones nada. Existen un tipo de variables que son las variables lógicas que pueden tener dos valores. ¿Verdadero o falso? Lo que dice ahí es que Octave va a considerar falso cualquier variable que valga cero. Yo voy a poder usar en un lugar en donde se pida una expresión lógica, un resultado lógico que es verdadero o falso, voy a poder usar el cero como sinónimo de falso. Existen un tipo de variables que son las variables lógicas que pueden tener dos valores. ¿Verdadero o falso? Lo que dice ahí es que Octave va a considerar falso cualquier variable que valga cero. Yo voy a poder usar en un lugar en donde se pida una expresión lógica, un resultado lógico que es verdadero o falso, voy a poder usar el cero como sinónimo de falso. Y como sinónimo de verdadero voy a poder usar cualquier valor que no sea cero. Eso es lo que dice. Cero se considera falso, distinto de cero se considera verdadero. Este ñoki al lado del igual quiere decir distinto. Entonces bueno, tenemos esas variables lógicas que pueden valer verdadero o falso, cero y no cero. Y como sinónimo de verdadero voy a poder usar cualquier valor que no sea cero. Eso es lo que dice. Cero se considera falso, distinto de cero se considera verdadero. Este ñoki al lado del igual quiere decir distinto. Entonces bueno, tenemos esas variables lógicas que pueden valer verdadero o falso, cero y no cero. Y después tenemos variables como por ejemplo pueden ser cadenas de caracteres, palabras o textos, a las que las asignamos de esa forma. Primero del lado izquierdo siempre va el nombre de la variable. En este caso por ejemplo la variable se llama nombre. Y el valor que le estamos asignando a la variable es leticia. Y después tenemos variables como por ejemplo pueden ser cadenas de caracteres, palabras o textos, a las que las asignamos de esa forma. Primero del lado izquierdo siempre va el nombre de la variable. En este caso por ejemplo la variable se llama nombre. Y el valor que le estamos asignando a la variable es leticia. Y para asignarle un texto a esa variable lo que tenemos que poner es entre apóstrofes el texto que queremos darle. El segundo reglón asigna sobre una letra pero es lo mismo. Y las variables que contienen palabras o textos en realidad pueden ser manipuladas como si fueran un vector de letras. Y para asignarle un texto a esa variable lo que tenemos que poner es entre apóstrofes el texto que queremos darle. El segundo reglón asigna sobre una letra pero es lo mismo. Y las variables que contienen palabras o textos en realidad pueden ser manipuladas como si fueran un vector de letras. Entonces en los vectores tenemos esta posibilidad de acceder a una posición particular del vector. Y eso lo hacemos utilizando el nombre de la variable y entre paréntesis la posición a la que queremos acceder. Y eso nos da como resultado la letra E que es la que está en la posición 2 de leticia. Entonces en los vectores tenemos esta posibilidad de acceder a una posición particular del vector. Y eso lo hacemos utilizando el nombre de la variable y entre paréntesis la posición a la que queremos acceder. Y eso nos da como resultado la letra E que es la que está en la posición 2 de leticia. Bueno, como les decía, asignaciones no alias. Ese 2 igual a X les va a dar un error porque del lado izquierdo siempre van los nombres de las variables, no los valores. Y esa que está en el segundo reglón también les va a dar un error porque esto es algo que lo hacen mucho. Bueno, como les decía, asignaciones no alias. Ese 2 igual a X les va a dar un error porque del lado izquierdo siempre van los nombres de las variables, no los valores. Y esa que está en el segundo reglón también les va a dar un error porque esto es algo que lo hacen mucho. Entonces es un error muy común. Que dice, bueno, yo quiero asignarle a la variable A el valor 1 y asignarle a la variable B el valor 2. Entonces, bueno, lo pongo ahí adentro de un vector y le asigno este otro vector al vector con las variables A, B. Pero esto no funciona porque no está definido en el lenguaje. Entonces es un error muy común. Que dice, bueno, yo quiero asignarle a la variable A el valor 1 y asignarle a la variable B el valor 2. Entonces, bueno, lo pongo ahí adentro de un vector y le asigno este otro vector al vector con las variables A, B. Pero esto no funciona porque no está definido en el lenguaje. Entonces, si quisiéramos hacer eso tendríamos que hacer dos reglones separados, poner A igual 1, B igual 2. Esto así no marcha. Del lado izquierdo siempre hay nombres de variables. Entonces, si quisiéramos hacer eso tendríamos que hacer dos reglones separados, poner A igual 1, B igual 2. Esto así no marcha. Del lado izquierdo siempre hay nombres de variables. Bueno, lo otro que yo les decía es, bueno, cuando usemos como lenguaje de programación vamos a hacer scripts y funciones. Bueno, ¿qué son las funciones? Bueno, lo otro que yo les decía es, bueno, cuando usemos como lenguaje de programación vamos a hacer scripts y funciones. Bueno, ¿qué son las funciones? Una función, ustedes ya saben lo que es, porque desde el liceo hasta acá están estudiando funciones. Es básicamente eso, es algo que recibe parámetros y nos devuelve valores. Una función, ustedes ya saben lo que es, porque desde el liceo hasta acá están estudiando funciones. Es básicamente eso, es algo que recibe parámetros y nos devuelve valores. Solo que, bueno, en este caso los parámetros pueden ser variables que tengamos cargadas en el entorno o en el programa que estemos haciendo. Pueden ser valores directamente, pueden ser cualquier cosa. Y lo importante es que la función siempre nos va a devolver un valor. Solo que, bueno, en este caso los parámetros pueden ser variables que tengamos cargadas en el entorno o en el programa que estemos haciendo. Pueden ser valores directamente, pueden ser cualquier cosa. Y lo importante es que la función siempre nos va a devolver un valor. Si no nos devuelve nada, no es una función. Entonces la cuestión es esa, la función nos va a devolver un valor y ese valor se lo podemos asignar a otra variable. Entonces vamos a tener cosas de ese estilo, z, y puede ser una variable y le puedo asignar el resultado de una función. Si no nos devuelve nada, no es una función. Entonces la cuestión es esa, la función nos va a devolver un valor y ese valor se lo podemos asignar a otra variable. Entonces vamos a tener cosas de ese estilo, z, y puede ser una variable y le puedo asignar el resultado de una función. Y bueno, y lo interesante para esta clase, porque ya vamos a profundizar bastante sobre el tema funciones y cómo se programan, cómo se invocan. Lo interesante para esta clase es que Octave ya trae varias funciones que podemos usar para resolver cosas cotidianas. Y bueno, y lo interesante para esta clase, porque ya vamos a profundizar bastante sobre el tema funciones y cómo se programan, cómo se invocan. Lo interesante para esta clase es que Octave ya trae varias funciones que podemos usar para resolver cosas cotidianas. Algunos ejemplos de funciones que vienen con Octave y que usamos mucho en el curso. En general, ya van a ver que en los parciales y en los exámenes y en los prácticos van a tener un montón de ejercicios con números, que hacen cosas sencillas con números y con vectores. Algunos ejemplos de funciones que vienen con Octave y que usamos mucho en el curso. En general, ya van a ver que en los parciales y en los exámenes y en los prácticos van a tener un montón de ejercicios con números, que hacen cosas sencillas con números y con vectores. Estas funciones las usamos bastante, que son las funciones de redondeo. Hay distintas funciones de redondeo y bueno, a estas les conviene aprenderse por lo menos un par. Por ejemplo, fix de X nos devuelve la parte entera de X. No sé si la variable de X tiene adentro el valor 2,5 nos devuelve un 2. Estas funciones las usamos bastante, que son las funciones de redondeo. Hay distintas funciones de redondeo y bueno, a estas les conviene aprenderse por lo menos un par. Por ejemplo, fix de X nos devuelve la parte entera de X. No sé si la variable de X tiene adentro el valor 2,5 nos devuelve un 2. Floor, que es decir piso, nos devuelve el redondeo hacia menos infinito. Siempre el entero que está por debajo de ese número. Round es el redondeo común, digamos. Floor, que es decir piso, nos devuelve el redondeo hacia menos infinito. Siempre el entero que está por debajo de ese número. Round es el redondeo común, digamos. Sail es, quiere decir ceiling, lo opuesto a floor. O sea, nos da el entero que está por arriba del entero que haya en la variable X en este caso. Cuando nosotros pasamos, cuando la X está ahí entre los paréntesis que están al costado de un nombre de función, Sail es, quiere decir ceiling, lo opuesto a floor. O sea, nos da el entero que está por arriba del entero que haya en la variable X en este caso. Cuando nosotros pasamos, cuando la X está ahí entre los paréntesis que están al costado de un nombre de función, es que X es el parámetro de la función. Entonces, Round nos devuelve el redondeo del parámetro que le pasemos. Sail nos redondea hacia arriba. Y después están estas dos, rem y mod, que básicamente hacen lo mismo. Entonces, en el curso las pueden usar de forma indistinta. es que X es el parámetro de la función. Entonces, Round nos devuelve el redondeo del parámetro que le pasemos. Sail nos redondea hacia arriba. Y después están estas dos, rem y mod, que básicamente hacen lo mismo. Entonces, en el curso las pueden usar de forma indistinta. La única diferencia entre las dos es cómo se comportan con los negativos. Lo que hacen es, ahí ven que a diferencia de las demás, estas funciones toman dos parámetros de entrada, X e Y, y devuelven un valor de salida, que es el resultado de, es el resto de la división entre X e Y. La única diferencia entre las dos es cómo se comportan con los negativos. Lo que hacen es, ahí ven que a diferencia de las demás, estas funciones toman dos parámetros de entrada, X e Y, y devuelven un valor de salida, que es el resultado de, es el resto de la división entre X e Y. Entonces, con estas vamos a jugar bastante, se las van a aprender. Cuando son números positivos pueden usarlas indistintamente. Y en general, nosotros siempre ponemos problemas con números positivos. Así que, rem y mod son lo mismo, pero sepan que es el resto de la división entera. Entonces, con estas vamos a jugar bastante, se las van a aprender. Cuando son números positivos pueden usarlas indistintamente. Y en general, nosotros siempre ponemos problemas con números positivos. Así que, rem y mod son lo mismo, pero sepan que es el resto de la división entera. Hay muchísimas funciones más, que ya vienen definidas con Octave, para trabajar sobre vectores matrices. Esas las vamos a usar pila en el curso, Length, Size, Cero y Ones. Ahora las vamos a ver un poquito más en detalle. Hay muchísimas funciones más, que ya vienen definidas con Octave, para trabajar sobre vectores matrices. Esas las vamos a usar pila en el curso, Length, Size, Cero y Ones. Ahora las vamos a ver un poquito más en detalle. Y hay millones de funciones de matemática, por ejemplo, seno, coseno, tangente, raíz cuadrada. Y hay otras cosas también, sobre tratamiento de texto. Típicamente, uno cuando está trabajando sobre un problema, googlea y se fija qué funciones puede usar y cómo se escriben y cuál es la sintaxis. Y hay millones de funciones de matemática, por ejemplo, seno, coseno, tangente, raíz cuadrada. Y hay otras cosas también, sobre tratamiento de texto. Típicamente, uno cuando está trabajando sobre un problema, googlea y se fija qué funciones puede usar y cómo se escriben y cuál es la sintaxis. Siempre son cosas para resolver operaciones básicas. Después vamos a programar funciones que hacen cosas un poco más elaboradas. Bien, les decía que Octave y Matlab también te da la gran facilidad de trabajar con matrices y vectores de una forma muy cómoda. Siempre son cosas para resolver operaciones básicas. Después vamos a programar funciones que hacen cosas un poco más elaboradas. Bien, les decía que Octave y Matlab también te da la gran facilidad de trabajar con matrices y vectores de una forma muy cómoda. Para declarar o meter una variable de tipo matriz, tenemos distintas opciones. Por ejemplo, poner elemento a elemento todos los numeritos de la matriz. Una matriz, por si alguien no recuerda, es como una tabla de números, básicamente. Para declarar o meter una variable de tipo matriz, tenemos distintas opciones. Por ejemplo, poner elemento a elemento todos los numeritos de la matriz. Una matriz, por si alguien no recuerda, es como una tabla de números, básicamente. Con la que están definidas ciertas operaciones. Entonces, podemos poner uno por uno sus elementos, podemos generarlas a partir de otras matrices y como resultado de funciones, operaciones matriciales y otras cosas. Con la que están definidas ciertas operaciones. Entonces, podemos poner uno por uno sus elementos, podemos generarlas a partir de otras matrices y como resultado de funciones, operaciones matriciales y otras cosas. Hay algunos ejemplos. En el primer ejemplo, se crea una matriz de dos filas. Con la primera fila tiene los números 1, 2, 3. La segunda fila tiene los números 4, 5 y 6. Para separar las filas, usamos el punto y coma. Hay algunos ejemplos. En el primer ejemplo, se crea una matriz de dos filas. Con la primera fila tiene los números 1, 2, 3. La segunda fila tiene los números 4, 5 y 6. Para separar las filas, usamos el punto y coma. El segundo ejemplo, llena un vector con los números entre el 1 y el 5. Para generar el rango de enteros entre el 1 y el 5, usamos el 2 puntos. Uno o dos puntos 5 genera eso. Un vector con los enteros entre 1 y 5. El segundo ejemplo, llena un vector con los números entre el 1 y el 5. Para generar el rango de enteros entre el 1 y el 5, usamos el 2 puntos. Uno o dos puntos 5 genera eso. Un vector con los enteros entre 1 y 5. En lugar de que sean todos seguidos, queremos ir salteando de a 2. Por ejemplo, podemos usar esa otra opción. En el tercer ejemplo, ponemos 2 puntos 2, 2 puntos el final del rango. Nos va a generar los enteros entre 2 y 10, pero saltando de 2 en 2. En lugar de que sean todos seguidos, queremos ir salteando de a 2. Por ejemplo, podemos usar esa otra opción. En el tercer ejemplo, ponemos 2 puntos 2, 2 puntos el final del rango. Nos va a generar los enteros entre 2 y 10, pero saltando de 2 en 2. En el cuarto ejemplo, le asignamos a la matriz D el resultado de una función. Ese 1 es una función que está definida en octaves, que nos devuelve un valor. ¿Qué es ese valor? Una matriz. En el cuarto ejemplo, le asignamos a la matriz D el resultado de una función. Ese 1 es una función que está definida en octaves, que nos devuelve un valor. ¿Qué es ese valor? Una matriz. Una matriz de unos de la dimensión que nosotros le pasemos en el parámetro. Entonces, ahí le estamos pasando un solo parámetro, el número 2, que quiere lo que le dice a la función, es que el resultado tiene que ser una matriz de 2 por 2, con unos. La función siempre va a devolver matrices de unos. Una matriz de unos de la dimensión que nosotros le pasemos en el parámetro. Entonces, ahí le estamos pasando un solo parámetro, el número 2, que quiere lo que le dice a la función, es que el resultado tiene que ser una matriz de 2 por 2, con unos. La función siempre va a devolver matrices de unos. Lo que le pasamos por parámetro es la dimensión que nosotros queremos que tenga el resultado. La segunda función que vemos ahí es ceros, que hace lo mismo pero con ceros. Entonces, ahí tenemos una matriz de 2 por 2 de unos y una matriz de 2 por 2 de ceros. Lo que le pasamos por parámetro es la dimensión que nosotros queremos que tenga el resultado. La segunda función que vemos ahí es ceros, que hace lo mismo pero con ceros. Entonces, ahí tenemos una matriz de 2 por 2 de unos y una matriz de 2 por 2 de ceros. Si quisiéramos que la matriz no fuera de 2 por 2, sino que fuera de, yo que sé, m por n, tendríamos que pasarle los dos parámetros a la función ones y a la función ceros. Entonces, hay funciones que hacen cosas distintas dependiendo de la cantidad de parámetros que le pasemos. Si quisiéramos que la matriz no fuera de 2 por 2, sino que fuera de, yo que sé, m por n, tendríamos que pasarle los dos parámetros a la función ones y a la función ceros. Entonces, hay funciones que hacen cosas distintas dependiendo de la cantidad de parámetros que le pasemos. Yo tengo una pregunta. ¿Cómo voy a explicar el C? En C lo que hace es crear un rango, un vector que tiene los enteros entre el primer número y el último saltando de a 2 en ese caso, pero de a lo que sea que le pongas ahí en el medio. Yo tengo una pregunta. ¿Cómo voy a explicar el C? En C lo que hace es crear un rango, un vector que tiene los enteros entre el primer número y el último saltando de a 2 en ese caso, pero de a lo que sea que le pongas ahí en el medio. Todo esto lo van a ejercitar ahora en el práctico que tienen en la sala de PC. ¿Es el primero o el segundo dos el que dice de a cuánto número? Claro, no. El primero es el comienzo del rango, el primero es el comienzo del rango, el medio es el salto Todo esto lo van a ejercitar ahora en el práctico que tienen en la sala de PC. ¿Es el primero o el segundo dos el que dice de a cuánto número? Claro, no. El primero es el comienzo del rango, el primero es el comienzo del rango, el medio es el salto Y el final es el final del rango. ¿Y otra consulta? Sí. ¿El número que tiene que ser múltiplo de primero o solo de la primera? No me acuerdo la verdad cuál es el comportamiento, pero supongo que lo genera hasta el múltiplo anterior o el siguiente. Y el final es el final del rango. ¿Y otra consulta? Sí. ¿El número que tiene que ser múltiplo de primero o solo de la primera? No me acuerdo la verdad cuál es el comportamiento, pero supongo que lo genera hasta el múltiplo anterior o el siguiente. Tiendo a creer que hasta el anterior. Bien. Ahí tenemos el ejemplo de cómo generar matrices a partir de otras matrices. Siempre y cuando las dimensiones de las matrices lo permitan, puedo como pegarlas una al lado de la otra. Tiendo a creer que hasta el anterior. Bien. Ahí tenemos el ejemplo de cómo generar matrices a partir de otras matrices. Siempre y cuando las dimensiones de las matrices lo permitan, puedo como pegarlas una al lado de la otra. Ya sea en horizontal o en vertical. Entonces ahí tengo la matriz B que es de dimensión 1x5, una fila por cinco columnas. Y la matriz C que también es de dimensión 1x5. Si yo las pongo uno al lado de la otra o separadas por una coma y entre paréntesis rectos. Ya sea en horizontal o en vertical. Entonces ahí tengo la matriz B que es de dimensión 1x5, una fila por cinco columnas. Y la matriz C que también es de dimensión 1x5. Si yo las pongo uno al lado de la otra o separadas por una coma y entre paréntesis rectos. Lo que estoy haciendo es crear una matriz que tiene una a continuación de la otra. Como queda ahí la matriz H. Pero es una pregunta. En el primer ejemplo hay un espacio por la coma. ¿Es lo mismo dejar espacio? Es lo mismo. Es lo mismo. Los espacios no cuentan. Solo si usted no pone la coma, sí tienen que dejar un espacio para separar las dos matrices. Lo que estoy haciendo es crear una matriz que tiene una a continuación de la otra. Como queda ahí la matriz H. Pero es una pregunta. En el primer ejemplo hay un espacio por la coma. ¿Es lo mismo dejar espacio? Es lo mismo. Es lo mismo. Los espacios no cuentan. Solo si usted no pone la coma, sí tienen que dejar un espacio para separar las dos matrices. Pero si pone la coma, pueden poner o no el espacio, que es lo mismo. En el segundo ejemplo, lo que hacemos es pegarlas en vertical. Para poder hacer eso, repito, tienen que tener la misma dimensión, la misma cantidad de columnas, porque si no, no las podría pegar en vertical. Lo mismo que en el primer ejemplo, tienen que tener la misma cantidad de filas, si no va a ocurrir un error. Pero si pone la coma, pueden poner o no el espacio, que es lo mismo. En el segundo ejemplo, lo que hacemos es pegarlas en vertical. Para poder hacer eso, repito, tienen que tener la misma dimensión, la misma cantidad de columnas, porque si no, no las podría pegar en vertical. Lo mismo que en el primer ejemplo, tienen que tener la misma cantidad de filas, si no va a ocurrir un error. ¿Cómo sé la cantidad de filas y columnas de una matriz? Octave nos da la función size. Si a size le paso como parámetro una matriz, me devuelve dos valores que van a ser la cantidad de filas primero y la cantidad de columnas después de la matriz. Ahí en el ejemplo, la matriz M tiene dos filas y tres columnas. ¿Cómo sé la cantidad de filas y columnas de una matriz? Octave nos da la función size. Si a size le paso como parámetro una matriz, me devuelve dos valores que van a ser la cantidad de filas primero y la cantidad de columnas después de la matriz. Ahí en el ejemplo, la matriz M tiene dos filas y tres columnas. Entonces size nos da esos dos valores, dos y tres. Para los vectores podemos usar length, porque es más cómodo, también podríamos usar size. Length nos dice el largo del vector. Y esa la vamos a usar un montón, ya van a ver, en todos los ejercicios. Pero es una pregunta, ¿el vector X ahí se puede escribir así o sin la que poner para el vector X? Se puede escribir así. Entonces size nos da esos dos valores, dos y tres. Para los vectores podemos usar length, porque es más cómodo, también podríamos usar size. Length nos dice el largo del vector. Y esa la vamos a usar un montón, ya van a ver, en todos los ejercicios. Pero es una pregunta, ¿el vector X ahí se puede escribir así o sin la que poner para el vector X? Se puede escribir así. Se puede escribir así. Porque para matrices, bueno, en realidad eso te devuelve una matriz. Te devuelve una matriz que es un vector, una matriz de uno por la cantidad de columnas que es, en este caso, 50. Sí, en ese caso se puede omitir el paréntesis recto. Se puede escribir así. Porque para matrices, bueno, en realidad eso te devuelve una matriz. Te devuelve una matriz que es un vector, una matriz de uno por la cantidad de columnas que es, en este caso, 50. Sí, en ese caso se puede omitir el paréntesis recto. Bueno, algo importante sobre las matrices es como inspeccionar los valores que tiene. Para acceder a una cierta posición, usamos los paréntesis curvos y los índices de fila y columna separados por coma. Bueno, algo importante sobre las matrices es como inspeccionar los valores que tiene. Para acceder a una cierta posición, usamos los paréntesis curvos y los índices de fila y columna separados por coma. Entonces, en el primer ejemplo estamos viendo el elemento de la matriz, el número que está guardado en la fila 2 y columna 3. En el segundo ejemplo estamos usando el 2 puntos, pero como un comodín. Cuando usamos el 2 puntos así, nos estamos refiriendo a todas las filas o columnas. Entonces, en el primer ejemplo estamos viendo el elemento de la matriz, el número que está guardado en la fila 2 y columna 3. En el segundo ejemplo estamos usando el 2 puntos, pero como un comodín. Cuando usamos el 2 puntos así, nos estamos refiriendo a todas las filas o columnas. Entonces, si el 2 puntos está en el lugar del índice de filas, nos estamos refiriendo a todas las filas. Y si está del lado del índice de columnas, nos estamos refiriendo a todas las columnas. Entonces, el segundo ejemplo nos da toda la columna 3. Queremos todos los índices de fila y la columna 3. Entonces, si el 2 puntos está en el lugar del índice de filas, nos estamos refiriendo a todas las filas. Y si está del lado del índice de columnas, nos estamos refiriendo a todas las columnas. Entonces, el segundo ejemplo nos da toda la columna 3. Queremos todos los índices de fila y la columna 3. El tercer ejemplo es al revés. Fijamos la fila 4 y queremos todos los índices de columna. Entonces, eso nos va a devolver un vector con la fila 4 de la matriz. De la misma forma podemos aplicar rangos. El tercer ejemplo es al revés. Fijamos la fila 4 y queremos todos los índices de columna. Entonces, eso nos va a devolver un vector con la fila 4 de la matriz. De la misma forma podemos aplicar rangos. Como habíamos visto antes, en la parte de los índices de fila y de columna, para delimitar sumatrices dentro de una matriz más grande. Entonces, por ejemplo, ahí tenemos el rango de enteros entre 1 y 2 y el rango de enteros entre 2 y 5. Como habíamos visto antes, en la parte de los índices de fila y de columna, para delimitar sumatrices dentro de una matriz más grande. Entonces, por ejemplo, ahí tenemos el rango de enteros entre 1 y 2 y el rango de enteros entre 2 y 5. Quiere decir que queremos la sumatriz que corresponde a las primeras dos filas de la matriz A y a las columnas entre la 2 y la 5, inclusive. Como les decía, sobre las matrices están definidas ciertas operaciones. Quiere decir que queremos la sumatriz que corresponde a las primeras dos filas de la matriz A y a las columnas entre la 2 y la 5, inclusive. Como les decía, sobre las matrices están definidas ciertas operaciones. Puedo sumar matrices siempre y cuando las dimensiones lo permitan. Puedo restarlas, puedo multiplicarlas con el operador del asterisco, que es la multiplicación. Tengo la potencia, tengo la transpuesta. Si tengo una matriz con números complejos, eso me da la transpuesta conjugada de la matriz. Puedo sumar matrices siempre y cuando las dimensiones lo permitan. Puedo restarlas, puedo multiplicarlas con el operador del asterisco, que es la multiplicación. Tengo la potencia, tengo la transpuesta. Si tengo una matriz con números complejos, eso me da la transpuesta conjugada de la matriz. Pero qué pasa si en lugar de... Imaginen, yo pongo C igual a por b. Ahí lo que estoy queriendo decir es, quiero asignarle a C el resultado de multiplicar las matrices a y b. Pero qué pasa si en lugar de... Imaginen, yo pongo C igual a por b. Ahí lo que estoy queriendo decir es, quiero asignarle a C el resultado de multiplicar las matrices a y b. Pero eso es, con la multiplicación de matrices, usual. La multiplicación de álgebra lineal, que sabemos. ¿Qué pasa si yo lo que quiero hacer es multiplicar cada elemento de la matriz a por el elemento que está en la misma posición de la matriz b? Ahí Octave nos da la posibilidad de poner un puntito antes del operador de multiplicación o de potenciación. Pero eso es, con la multiplicación de matrices, usual. La multiplicación de álgebra lineal, que sabemos. ¿Qué pasa si yo lo que quiero hacer es multiplicar cada elemento de la matriz a por el elemento que está en la misma posición de la matriz b? Ahí Octave nos da la posibilidad de poner un puntito antes del operador de multiplicación o de potenciación. Para que tenga ese comportamiento. En lugar de hacer la potencia o el producto usando el producto de matrices. Poniendo el puntito, lo que estamos haciendo es el producto de elemento a elemento. O elevando cada elemento de la matriz a el número que está en la misma posición de la otra matriz. Para que tenga ese comportamiento. En lugar de hacer la potencia o el producto usando el producto de matrices. Poniendo el puntito, lo que estamos haciendo es el producto de elemento a elemento. O elevando cada elemento de la matriz a el número que está en la misma posición de la otra matriz. Con la transpuesta no tiene el mismo comportamiento de este operador. El comportamiento con la transpuesta es que simplemente no nos da la transpuesta conjugada, sino que nos da la transpuesta conjugada. ¿Pero que no existe una operación para solo conjugar la matriz? Seguramente sí, y sea una función predefinida de Octave. Con la transpuesta no tiene el mismo comportamiento de este operador. El comportamiento con la transpuesta es que simplemente no nos da la transpuesta conjugada, sino que nos da la transpuesta conjugada. ¿Pero que no existe una operación para solo conjugar la matriz? Seguramente sí, y sea una función predefinida de Octave. Bueno, también tienen esas operaciones. No me quiero detener mucho. Sirve para resolver sistemas de ecuaciones lineales, donde los coeficientes del sistema son las entradas de la matriz. Los números que están en la matriz representan un sistema de ecuaciones. Bueno, también tienen esas operaciones. No me quiero detener mucho. Sirve para resolver sistemas de ecuaciones lineales, donde los coeficientes del sistema son las entradas de la matriz. Los números que están en la matriz representan un sistema de ecuaciones. Bueno, tienen eso. Esa función existe en Octave. Inv les da la inversa de una matriz para que eso funcione. La matriz tiene que ser invertible. El tema es, justamente, si quieren usar eso para dividir los números elemento a elemento, también van a tener que usar el puntito antes del operador. Bueno, tienen eso. Esa función existe en Octave. Inv les da la inversa de una matriz para que eso funcione. La matriz tiene que ser invertible. El tema es, justamente, si quieren usar eso para dividir los números elemento a elemento, también van a tener que usar el puntito antes del operador. Y después, bueno, tenemos operadores que sirven para comparar elementos entre sí, que son esos que llamamos operadores relacionales. Tenemos el menor, el mayor, el... Y ahí apareció el que yo les había mencionado, que es el operador de igualdad. Son dos iguales juntos. Y después, bueno, tenemos operadores que sirven para comparar elementos entre sí, que son esos que llamamos operadores relacionales. Tenemos el menor, el mayor, el... Y ahí apareció el que yo les había mencionado, que es el operador de igualdad. Son dos iguales juntos. O sea que si ponemos un solo igual, lo que estamos haciendo es asignar un valor a una variable. Y si ponemos dos iguales así, lo que estamos haciendo es comparar lo que está del lado izquierdo con lo que está del lado derecho. Eso nos va a dar resultado un valor lógico, o verdadero o falso. Después, los operadores lógicos son estos. O sea que si ponemos un solo igual, lo que estamos haciendo es asignar un valor a una variable. Y si ponemos dos iguales así, lo que estamos haciendo es comparar lo que está del lado izquierdo con lo que está del lado derecho. Eso nos va a dar resultado un valor lógico, o verdadero o falso. Después, los operadores lógicos son estos. El AND, el OR y el NOT. Que eso lo vamos a profundizar un poco más adelante. Hay dos versiones de estos operadores. En general, para no complicarse, pueden usar esta y listo. Tienen un comportamiento ligeramente distinto. El AND, el OR y el NOT. Que eso lo vamos a profundizar un poco más adelante. Hay dos versiones de estos operadores. En general, para no complicarse, pueden usar esta y listo. Tienen un comportamiento ligeramente distinto. Pero si usan esta versión, siempre van a andar bien. Lo que les quería mostrar ahora, un poquito, repasar usando el Octave. Acá tenemos la consola de Octave. La ven ahí, no se ve mucho. Pero si usan esta versión, siempre van a andar bien. Lo que les quería mostrar ahora, un poquito, repasar usando el Octave. Acá tenemos la consola de Octave. La ven ahí, no se ve mucho. Pero bueno, para limpiar la pantalla, alguien se acuerda cómo era? CLC y se limpiaba la pantalla. Entonces vamos a definir alguna variable. Podemos poner variable, variable o lo que sea, igual 23. Pero bueno, para limpiar la pantalla, alguien se acuerda cómo era? CLC y se limpiaba la pantalla. Entonces vamos a definir alguna variable. Podemos poner variable, variable o lo que sea, igual 23. Y esto me va a crear, apareció ahí abajo, el nombre variable con el valor 23. Otra forma de saber qué variables tengo definidas es usando el comando who. No se ve nada, ¿no? Voy a aumentar el tamaño de letra un poquito. Con who, ahí aparecen las variables que tengo definidas. Y esto me va a crear, apareció ahí abajo, el nombre variable con el valor 23. Otra forma de saber qué variables tengo definidas es usando el comando who. No se ve nada, ¿no? Voy a aumentar el tamaño de letra un poquito. Con who, ahí aparecen las variables que tengo definidas. Es lo mismo que está ahí abajo en la ventanita con los nombres de variable. En el medio, en realidad, no abajo. Si pongo who, me va un poquito más de información sobre las variables. Pero bueno, ahora estoy usando Octave como calculadora. Entonces puedo hacer cosas como 2 por variable. Es lo mismo que está ahí abajo en la ventanita con los nombres de variable. En el medio, en realidad, no abajo. Si pongo who, me va un poquito más de información sobre las variables. Pero bueno, ahora estoy usando Octave como calculadora. Entonces puedo hacer cosas como 2 por variable. Y esto me va a dar el resultado de multiplicar lo que hay en esa variable por 2. Fíjense que variable no cambió para nada. Si yo quiero que variable cambie, tengo que asignarle otro valor. Puedo poner variable igual 2. No, o 1. Y esto me va a dar el resultado de multiplicar lo que hay en esa variable por 2. Fíjense que variable no cambió para nada. Si yo quiero que variable cambie, tengo que asignarle otro valor. Puedo poner variable igual 2. No, o 1. Y entonces ahora, si yo escribo el nombre variable y le doy enter, me va a decir cuánto vale esa variable. Vale 1. Si yo quiero usar Octave como un editor, puedo abrir el editor con la hojita. Y entonces ahora, si yo escribo el nombre variable y le doy enter, me va a decir cuánto vale esa variable. Vale 1. Si yo quiero usar Octave como un editor, puedo abrir el editor con la hojita. Y puedo escribir cosas acá como otra variable. Vamos a ponerle un guión bajo. Otra variable igual 2. Yo qué sé, una matriz. Sí. Y puedo escribir cosas acá como otra variable. Vamos a ponerle un guión bajo. Otra variable igual 2. Yo qué sé, una matriz. Sí. ¿Cómo vamos a hacer de la calculadora a la matriz? Puedes poner archivo nuevo y ahí está nuevo script. O bueno, tenés la hojita esta en el borde de la pantalla, en la esquina. ¿Cómo vamos a hacer de la calculadora a la matriz? Puedes poner archivo nuevo y ahí está nuevo script. O bueno, tenés la hojita esta en el borde de la pantalla, en la esquina. ¿Todas las variables son fijas o puedo asignar una variable que varíe? Puedo poner otra... ¿La variable es igual a X? Puedo poner una matriz igual, por ejemplo, paréntesis recto, para comenzar una matriz. ¿Todas las variables son fijas o puedo asignar una variable que varíe? Puedo poner otra... ¿La variable es igual a X? Puedo poner una matriz igual, por ejemplo, paréntesis recto, para comenzar una matriz. Y puedo poner otra variable y otra variable. Puedo poner otra variable por dos y otra variable más uno. Entonces, luego, no sé, podemos multiplicar una matriz. Y puedo poner otra variable y otra variable. Puedo poner otra variable por dos y otra variable más uno. Entonces, luego, no sé, podemos multiplicar una matriz. Podemos poner otra matriz. Igual una matriz por una matriz de unos. A ver, de tamaño dos por dos. A ver qué pasa. Podemos poner otra matriz. Igual una matriz por una matriz de unos. A ver, de tamaño dos por dos. A ver qué pasa. A ver qué pasa. Entonces, lo que tengo que acordarme es de guardar esto en algún lado. Vamos a guardarlo, no sé, en documentos acá. Vamos a poner clase uno. A ver qué pasa. Entonces, lo que tengo que acordarme es de guardar esto en algún lado. Vamos a guardarlo, no sé, en documentos acá. Vamos a poner clase uno. Entonces, lo guardamos. Y nos vamos de vuelta a la ventana de comandos. Entonces, primero para poder ejecutar ese script, tengo que ir a la carpeta en donde está guardado, que eran documentos. Entonces, voy acá en el editor de archivos. Le hago doble clic a documentos y ya estoy en el directorio en donde tendría que estar el script. Entonces, lo guardamos. Y nos vamos de vuelta a la ventana de comandos. Entonces, primero para poder ejecutar ese script, tengo que ir a la carpeta en donde está guardado, que eran documentos. Entonces, voy acá en el editor de archivos. Le hago doble clic a documentos y ya estoy en el directorio en donde tendría que estar el script. Si hago ls para listar lo que hay en ese directorio, ahí aparece el que yo guardé recién, que es clase1.m. Entonces, si yo... ¿Se acuerdan más o menos que hacía el script? Si yo escribo clase1 y le doy enter, ¿qué es lo que va a pasar? Si hago ls para listar lo que hay en ese directorio, ahí aparece el que yo guardé recién, que es clase1.m. Entonces, si yo... ¿Se acuerdan más o menos que hacía el script? Si yo escribo clase1 y le doy enter, ¿qué es lo que va a pasar? Claro, va a ir ejecutando línea por línea todos los comandos que yo guardé en ese archivo. Entonces, primero va a declarar una variable, después le va a poner otro valor, iba a crear una matriz con distintas versiones. Me dió un error. Claro, va a ir ejecutando línea por línea todos los comandos que yo guardé en ese archivo. Entonces, primero va a declarar una variable, después le va a poner otro valor, iba a crear una matriz con distintas versiones. Me dió un error. Me quedó un carácter raro ahí por poner aquí un bajo o algo. Porque acá me está pareciendo una cosa rara en el nombre. Pero bueno, créanme que... Me quedó un carácter raro ahí por poner aquí un bajo o algo. Porque acá me está pareciendo una cosa rara en el nombre. Pero bueno, créanme que... Que si ustedes guardan los comandos así, los escritos así, eventualmente lo van a poder ejecutar. No pongan cosas raras, caracteres raros en los nombres de los archivos, por la duda. Porque está. Esto es porque en general uso de Linux y no sé cómo funciona en Windows estas cosas. Que si ustedes guardan los comandos así, los escritos así, eventualmente lo van a poder ejecutar. No pongan cosas raras, caracteres raros en los nombres de los archivos, por la duda. Porque está. Esto es porque en general uso de Linux y no sé cómo funciona en Windows estas cosas. Pero bueno, vamos a hacer algunos ejemplos más con matrices. Pongo crear una matriz poniendo los elementos. Para separar las filas de la matriz pongo el punto y coma. Si pongo espacios es lo mismo que poner comas entre los números. Y ahí puedo crear una matriz. Pero bueno, vamos a hacer algunos ejemplos más con matrices. Pongo crear una matriz poniendo los elementos. Para separar las filas de la matriz pongo el punto y coma. Si pongo espacios es lo mismo que poner comas entre los números. Y ahí puedo crear una matriz. Y ahí puedo crear una matriz. Puedo crear otra matriz a partir de esta. Si yo pongo esto, ¿qué era lo que hacía? ¿Se acordan? ¿Qué es lo que me va a dar? Me va a dar una matriz que tiene las dos versiones de la matriz A pegaditas. Y ahí puedo crear una matriz. Puedo crear otra matriz a partir de esta. Si yo pongo esto, ¿qué era lo que hacía? ¿Se acordan? ¿Qué es lo que me va a dar? Me va a dar una matriz que tiene las dos versiones de la matriz A pegaditas. Una matriz B que es así. Y si yo pongo una matriz C que tiene esto, B, punto y coma y A. ¿Qué pasaría? Claro, pero tienen distinto tamaño. Entonces si yo pongo esto, ¿qué pasaría? Una matriz B que es así. Y si yo pongo una matriz C que tiene esto, B, punto y coma y A. ¿Qué pasaría? Claro, pero tienen distinto tamaño. Entonces si yo pongo esto, ¿qué pasaría? Claro, pero tienen distinto tamaño. Entonces seguramente no es lo que yo quiero que pase. Si yo pusiera esto así, lo puedo hacer porque la fila de abajo tiene dos matrices que su cantidad de columnas suma lo mismo que la de la matriz B. En ese caso sí lo puedo hacer. Claro, pero tienen distinto tamaño. Entonces seguramente no es lo que yo quiero que pase. Si yo pusiera esto así, lo puedo hacer porque la fila de abajo tiene dos matrices que su cantidad de columnas suma lo mismo que la de la matriz B. En ese caso sí lo puedo hacer. También podría poner B y... Bueno, en fin. También puedo... ¿cómo era que accedía a una posición particular de la matriz? Por ejemplo, quiero saber qué número hay en la posición en la fila 3 y la columna 2. También podría poner B y... Bueno, en fin. También puedo... ¿cómo era que accedía a una posición particular de la matriz? Por ejemplo, quiero saber qué número hay en la posición en la fila 3 y la columna 2. Columna 2. Hay un 3, pero si pongo C, 3, 2... Pero hoy no me están dando nada. Está, bien. No sé qué pasó recién. Pero el elemento que está en la posición de fila 3 y columna 2 era un 3. Columna 2. Hay un 3, pero si pongo C, 3, 2... Pero hoy no me están dando nada. Está, bien. No sé qué pasó recién. Pero el elemento que está en la posición de fila 3 y columna 2 era un 3. Así que está bien. Y ahí lo que hice fue asignárselo a una variable que se llama A. Bien. ¿Qué otras cosas vimos? Por ejemplo, con la matriz C debería poder tener otra matriz. Así que está bien. Y ahí lo que hice fue asignárselo a una variable que se llama A. Bien. ¿Qué otras cosas vimos? Por ejemplo, con la matriz C debería poder tener otra matriz. Y también con el submat, vamos a ponerle, para no ponerle el nombre siempre en monosílabos, submat que sea el resultado de la submatriz de C que está entre las filas 2 y 3 y entre las columnas 1 y 4. Y también con el submat, vamos a ponerle, para no ponerle el nombre siempre en monosílabos, submat que sea el resultado de la submatriz de C que está entre las filas 2 y 3 y entre las columnas 1 y 4. Y 3. Entonces ahí lo que se va a crear es otra matriz que se llama submat que tiene ese rectángulito que yo elegí de la matriz C que está entre las filas 2 y 3 y entre las columnas 1 y 4. Y 3. Entonces ahí lo que se va a crear es otra matriz que se llama submat que tiene ese rectángulito que yo elegí de la matriz C que está entre las filas 2 y 3 y entre las columnas 1 y 4. Bueno, si yo quiero cambiar lo que hay en la matriz C, puedo simplemente asignarle otra cosa. No tiene ni siquiera que ser una matriz. Bueno, si yo quiero cambiar lo que hay en la matriz C, puedo simplemente asignarle otra cosa. No tiene ni siquiera que ser una matriz. Por ejemplo, puede ser un texto. Ahí lo que pasó fue que la variable C dejó de contener una matriz. Ya si vuelvo atrás con la flecha para arriba puedo volver a poner los comandos que puse en el pasado. Por ejemplo, puede ser un texto. Ahí lo que pasó fue que la variable C dejó de contener una matriz. Ya si vuelvo atrás con la flecha para arriba puedo volver a poner los comandos que puse en el pasado. Si intento hacer lo mismo que hice hace un rato, que es acceder al elemento que estaba en la fila 3 y columna 2 de esa matriz C, ahora ¿qué va a pasar? Me va a dar un error porque C ya no contiene una matriz. C contiene un texto. Si intento hacer lo mismo que hice hace un rato, que es acceder al elemento que estaba en la fila 3 y columna 2 de esa matriz C, ahora ¿qué va a pasar? Me va a dar un error porque C ya no contiene una matriz. C contiene un texto. Si yo hiciera esto, casualmente debería funcionar, porque el texto le dije que era como un vector de letras. Si yo pongo eso, me da la X que es el que está en la tercera posición del nombre. Si yo hiciera esto, casualmente debería funcionar, porque el texto le dije que era como un vector de letras. Si yo pongo eso, me da la X que es el que está en la tercera posición del nombre. Para repasar asignaciones, nombres de variable, podían ser cualquier cosa, pero no podían empezar con un número. Para repasar asignaciones, nombres de variable, podían ser cualquier cosa, pero no podían empezar con un número. Por ejemplo, a Octave no le va a gustar. Quiero hacer la prueba de vuelta de ejecutar un script. No puede ser que no se pueda ejecutar un script. Vamos a poner una variable cualquiera. Por ejemplo, a Octave no le va a gustar. Quiero hacer la prueba de vuelta de ejecutar un script. No puede ser que no se pueda ejecutar un script. Vamos a poner una variable cualquiera. Vamos a guardar con un nombre mi script. Yo supuestamente estoy ahí. Si escribo mi script, que fue el nombre del archivo que guardé recién, ¿qué es lo que pasa? Voy a limpiar todo. Ahora no tengo ninguna variable definida. Si yo pongo who, para ver qué variables hay, no aparece nada. Yo supuestamente estoy ahí. Si escribo mi script, que fue el nombre del archivo que guardé recién, ¿qué es lo que pasa? Voy a limpiar todo. Ahora no tengo ninguna variable definida. Si yo pongo who, para ver qué variables hay, no aparece nada. Vamos a ejecutar mi script, que es la listita de comandos que acabo de guardar. Ahí aparece algo en la pantalla, porque fue lo que yo dejé que apareciera. Pero ahora si pongo who, aparecen las variables que yo definí dentro del script. Definí una variable algo y una variable var. Vamos a ejecutar mi script, que es la listita de comandos que acabo de guardar. Ahí aparece algo en la pantalla, porque fue lo que yo dejé que apareciera. Pero ahora si pongo who, aparecen las variables que yo definí dentro del script. Definí una variable algo y una variable var. Una vez que ejecutamos el script, esas variables quedan cargadas en el entorno de Octave y las puedo usar. Ahora puedo crear otra variable C que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. Una vez que ejecutamos el script, esas variables quedan cargadas en el entorno de Octave y las puedo usar. Ahora puedo crear otra variable C que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. ¿Qué más? Crear matrices de unos, de dos por dos o de dos por cuatro, por ejemplo. ¿Qué más? Crear matrices de unos, de dos por dos o de dos por cuatro, por ejemplo. Es así con la función ones. Los redondeos, que es algo que usamos pila. Por ejemplo, vamos a crear una variable que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. Es así con la función ones. Los redondeos, que es algo que usamos pila. Por ejemplo, vamos a crear una variable que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. Los redondeos, que es algo que usamos pila. Por ejemplo, vamos a crear una variable. Bueno, la variable var contiene ahora el número 32, pero vamos a asignarlo. Los redondeos, que es algo que usamos pila. Por ejemplo, vamos a crear una variable. Bueno, la variable var contiene ahora el número 32, pero vamos a asignarlo. Bueno, la variable var contiene ahora el número 32, pero vamos a asignarlo. Por ejemplo, vamos a crear una variable que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. Por ejemplo, vamos a crear una variable que sea algo por 23. Bueno, la variable var contiene ahora el número 32, pero vamos a asignarlo. Por ejemplo, vamos a crear una variable que sea algo por 23. Y la variable C se va a crear con lo que estaba en esa variable algo, multiplicado por 23. Por ejemplo, vamos a crear una variable que sea algo por 23. Voy a estar rebelde el octave. Ahí funcionó, no hice nada distinto. Si ponemos round de la variable var que valía 34,3 nos da un 34. Si nosotros queremos el redondeo para arriba, no importa el número de redondeo que tengamos. Ahí funcionó, no hice nada distinto. Si ponemos round de la variable var que valía 34,3 nos da un 34. Si nosotros queremos el redondeo para arriba, no importa el número de redondeo que tengamos. Por ejemplo, si ponemos round de la variable var que valía 34. Si nosotros queremos el redondeo para arriba, no importa el número de redondeo que tengamos. Por ejemplo, si ponemos round de la variable var que valía 35. Por ejemplo, si ponemos round de la variable var que valía 34. Si nosotros queremos el redondeo para arriba, no importa el número de redondeo que tengamos. Por ejemplo, si ponemos round de la variable var que valía 35. Después, todos los demás para 34,3 nos van a dar lo mismo. Si ponemos fix nos da la parte entera que es 34. Si ponemos floor nos da el redondeo hacia menos infinito que es 34 también. Después, todos los demás para 34,3 nos van a dar lo mismo. Si ponemos fix nos da la parte entera que es 34. Si ponemos floor nos da el redondeo hacia menos infinito que es 34 también. Por ejemplo, si ponemos mod de var y2, ¿qué es lo que nos debería devolver? ¿Qué era mod? Por ejemplo, si ponemos mod de var y2, ¿qué es lo que nos debería devolver? ¿Qué era mod? El que no vimos todavía. El resto de la división entera nos va a dar el resto de dividir el contenido de var entre 2. Esto no sé qué nos va a dar porque var en realidad es un número con coma. Nos da esto, 0,03. El que no vimos todavía. El resto de la división entera nos va a dar el resto de dividir el contenido de var entre 2. Esto no sé qué nos va a dar porque var en realidad es un número con coma. Nos da esto, 0,03. Vamos a reemplazar. En lugar de var vamos a poner a que era la que tenía el redondeo de var. Esta nos debería dar 0 porque 34 es par. A tiene un 34. Pero, qué cosa. Vamos a reemplazar. En lugar de var vamos a poner a que era la que tenía el redondeo de var. Esta nos debería dar 0 porque 34 es par. A tiene un 34. Pero, qué cosa. Eso es porque recién cambié el valor de A. Entonces, de vuelta. Si ahora A pasa a valor 34 de vuelta. Tengo a valor 34 de vuelta. A pasa a valor 34 de vuelta. Entonces, A pasa a valor 34 de vuelta. A pasa a valor 34 de vuelta. Eso es porque recién cambié el valor de A. Entonces, de vuelta. Si ahora A pasa a valor 34 de vuelta. Tengo a valor 34 de vuelta. A pasa a valor 34 de vuelta. Entonces, A pasa a valor 34 de vuelta. A pasa a valor 34 de vuelta. Tengo que acá A. A vale 34. Entonces, si yo quiero el resto de la división entre el valor de A y 2. Tengo que acá A. A vale 34. Entonces, si yo quiero el resto de la división entre el valor de A y 2. Entonces, si yo quiero el resto de la división entre el valor de A y 2. Me da 0 porque el número que hay adentro de A es par. Entonces, para saber si un número es par o impar. Que es algo que van a usar pila en el curso. Es así, usando la función mod o rem. Entonces, si yo quiero el resto de la división entre el valor de A y 2. Me da 0 porque el número que hay adentro de A es par. Entonces, para saber si un número es par o impar. Que es algo que van a usar pila en el curso. Es así, usando la función mod o rem. Van a dar lo mismo porque el valor de la variable es positivo. Por ejemplo, quiero corroborar si en lugar de ser par si es múltiplo de 3. Cambia simplemente el divisor. Y ahí lo que me está diciendo, ¿por qué el valor de D me devolvió 1? Van a dar lo mismo porque el valor de la variable es positivo. Por ejemplo, quiero corroborar si en lugar de ser par si es múltiplo de 3. Cambia simplemente el divisor. Y ahí lo que me está diciendo, ¿por qué el valor de D me devolvió 1? Porque el resto de dividir el contenido de A que era 34 dividido 3 es 1. 34 dividido 3 es 10, 33, 11, 33 y el resto es 1. Porque el resto de dividir el contenido de A que era 34 dividido 3 es 1. 34 dividido 3 es 10, 33, 11, 33 y el resto es 1. Bueno, ¿preguntas sobre todo esto? El práctico que viene va a ser en la sala de máquinas. Entonces van a tener bastante tiempo para usar Octave, probar comandos. Es la semana que viene. Bueno, ¿preguntas sobre todo esto? El práctico que viene va a ser en la sala de máquinas. Entonces van a tener bastante tiempo para usar Octave, probar comandos. Es la semana que viene. Gracias.