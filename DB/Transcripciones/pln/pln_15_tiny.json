{"text": " Bueno, bienvenidos en la clase de hoy, vamos a ver el tema de redes neuronales que, bueno, es como digamos el estado del arte, lo que son las cosas de procesamiento de lenguaje natural en general hoy en d\u00eda se resolven con redes neuronales. Entonces, es un poco para continuar con lo que deb\u00edamos ya vez pasado, \u00bfno? Hab\u00edamos visto metos de clasificaci\u00f3n, hab\u00edamos visto que hab\u00eda algunos para clasificar cosas en categor\u00eda, sab\u00eda algunos secuenciales, sab\u00eda algunos que llam\u00e1bamos los modelos de lenguaje? Y de los m\u00e9todos de clasificaci\u00f3n en realidad vimos en profundidad nadie vayes, pero vimos que hab\u00eda otro, por ejemplo, a la decisi\u00f3n, regresi\u00f3n log\u00edstica, su perfecto machines y redes neuronales. Y para los m\u00e9todos secuenciales tambi\u00e9n aparec\u00eda las reuniones neuronales para los modelos de lenguaje tambi\u00e9n aparec\u00eda las reuniones neuronales. Entonces, como que las redes neuronales son un m\u00e9todo muy importante que es muy versatile y se usa para muchas cosas. Entonces, nos vamos a concentrar un poco, vamos a dar clas una introducci\u00f3n a lo que son las redes y adem\u00e1s ver c\u00f3mo se usan particularmente para el lenguaje. O sea, vamos a ver las t\u00e9cnicas de hevectores de palabras y, bueno, c\u00f3mo aplicar eso a precisamente el lenguaje natural. Entonces, \u00bfc\u00f3mo empieza esto? Esto empieza inspirado en esto de ac\u00e1, que es una neurona biol\u00f3gica, \u00bfno? Esto lo habr\u00e1n visto en el deseo, en biolog\u00eda. Una neurona es un tipo de c\u00e9lula del sistema nervioso de los animales, que tiene distintas partes, como se puede ver ah\u00ed, bueno, s\u00ed, voy a apuntar, voy a apuntar. Abo que era con esto. Hay, tiene distintas partes, tiene como uno es un nos pelitos que entran dentro del cuerpo de neurona que se llama tendridas y despu\u00e9s tiene como una especie de cola que sale de la neurona que se llama Axon y, bueno, atacan el centro, tenemos lo que ser\u00eda el cuerpo de la neurona, el soma. Entonces, en esas por esas de enritas vienen impulsos el\u00e9ctricos, las de enritas act\u00faan como inhibidores o activadores, pero vienen impulsos el\u00e9ctricos, esos se condensan a dentro del soma que se el cuerpo y, si se supera, cierta un braal y actividad el\u00e9ctrica, entonces ya le urona dispara un solo punto, pues el Axon, un solo impulso el\u00e9ctrico, pues el Axon, lo manda hacia afuera. Y ese Axon est\u00e1 conectado a otras de enritas que est\u00e1n en otras de bronas. Entonces, esto tiene un mont\u00f3n de entradas, se condensan en el cuerpo de la c\u00e9lula de la neurona dispara un solo pulso el\u00e9ctrico para afuera y ese pulso el\u00e9ctrico viaja a otras neuronas. Entonces, como esas neuronas est\u00e1n conectadas en una especie de red, cada ex\u00f3n de una neurona est\u00e1 conectaba las enritas de otras, entonces, la salida de una es la entrada de otras. Esto conforma una red dentro del cerebro, o el sistema nervioso de los animales, y eso es lo que compoen en una reneuronal, en este caso una reneuronal natural, una reneuronal biol\u00f3gica. Entonces, en los a\u00f1os 40 se propuso la primera versi\u00f3n matem\u00e1tica, digamos, de c\u00f3mo funciona una neurona, entonces unos cient\u00edficos que, disjeron, bueno, vamos a tratar de simplificar este m\u00e1s posible, a otra verlo y generar una versi\u00f3n en una ecuaci\u00f3n que trata de representar esto. Entonces, ellos dise\u00f1aron esta ecuaci\u00f3n de ac\u00e1. En la cual yo dice, bueno, vamos a cambiar esta neurona biol\u00f3gica que ten\u00eda todas estas partes y vamos a crear una especie de neurona artificial, en la cual yo tengo un conjunto de entradas, un conjunto de pesos de entrada que est\u00e1n ac\u00e1, que vendr\u00edan a hacer el equivalente a las de enritas. Voy a tener impulso el\u00e9ctrico de entrada que son como X1, X2, X3, hasta XC, que digamos que son los inputs que va a tener esa neurona. Despu\u00e9s, en el centro lo que hago es sumarlos y en realidad lo que estoy sumando es el producto entre cada impulso de entrada y el peso correspondiente. Tambi\u00e9n le voy a agregar un valor de cejo y despu\u00e9s la salida le voy a pasar buena funci\u00f3n de activaci\u00f3n y eso me va a la salida de la neurona. Bien, o sea, esta parte de las vamos a estar viendo en detalle. Pero en definitiva, es como que yo tuviera esta ecuaci\u00f3n de abajo, no? Yo tengo la sumatoria de las entradas multiplicadas por pesos, a eso le sumo un cejo que se llama a ver y todo eso se lo aplico una funci\u00f3n sigma, que podemos saber un poco qu\u00e9 son esas funciones sigma. Entonces, bien que es una, digamos, es como una ecuaci\u00f3n lineal, o sea, la sumatoria ni de XC por WSUI, m\u00e1s B, todo eso es una, digamos, una f\u00f3rmula lineal y a eso le agreg\u00f3 un sigma, digamos, se lo aplico un sigma que esta va a ser una funci\u00f3n lineal. Bien, entonces, m\u00e1s adelante para simplificar esta ecuaci\u00f3n y para que despu\u00e9s que es m\u00e1s f\u00e1cil de calcular las cosas, lo que se hace es decir, bueno, este valor que venimos ac\u00e1 est\u00e1, est\u00e1 bien que est\u00e1 sumando, que digamos se usa para que, como que, ah\u00ed, est\u00e1 bien que est\u00e1 ac\u00e1 que se usa para que tengo para poder completar toda la ecuaci\u00f3n lineal, lo que se hace es agregarle con un peso m\u00e1s, entonces, decimos, bueno, tenemos una entrada m\u00e1s que vale uno y su peso correspondiente es el sejo. De eso en realidad, digamos, despu\u00e9s nos olvidamos, cuando vamos a trabajar con estas cosas como que no utilizamos mucho el sejo y nos concentramos en decir, bueno, vamos a tener un vector que son entradas, que son los x1 hasta quise ne y un mont\u00f3n de peso que son los dole de uno estable de ne y adentro la neurona lo que pasa es que voy a hacer el producto interno tresos entre el vector x y el vector o leve y se lo voy a pasar a la funci\u00f3n sigma, bien, entonces, esas funciones de activaci\u00f3n sigma hay varias, o sea, al principio digamos cuando dise\u00f1aron primero esta neurona, lo que se les hab\u00eda ocurrido primero es decir, bueno, yo lo que hago es sumar todas estas, digamos, todos estos impulsos multiplicados por los pesos, los sumos y si esa suma supera cierto umbral, que el umbral lo pod\u00edan calcular o ocho que se agutilizaba en uno o algunas esas cosas, bueno, si supera cierto umbral, entonces mando uno para afuera y si no mando ser, eso era lo primero que se le ocurri\u00f3, pero bueno, despu\u00e9s empezaron a encontrar otras funciones que las mejores para poder entrenar mejores estas redes y en definitiva como que no hay mucho criterio de qu\u00e9 restricciones tienen que tener esa funci\u00f3n, salvo que tiene que ser derivable, tiene que ser, tiene que ir como de menos a m\u00e1s, digamos, puede ser de 0 a 1 o de 0 m\u00e1s infinito o de menos infinito m\u00e1s infinito y tiene que estar no lineas, tiene que tener alg\u00fan punto de no linealidad, entonces estas son algunas muy usadas, por ejemplo, la funci\u00f3n sigma y de, o funci\u00f3n log\u00edstica que es la misma que se usa, lo que estamos hablando de un rato de, digamos, el m\u00e9todo de regreso en log\u00edstica utiliza tambi\u00e9n esta funci\u00f3n, la tangente y par\u00f3lica, otra, la funci\u00f3n relo, es muy usada y la relo se define como el m\u00e1ximo entre 0 y 7, \u00bfno? relo de 7, el m\u00e1ximo entre 0 y 7, entonces vale 0 para todos los valores, excepto para cuando el, todos los valores menor que 0, pero cuando el m\u00e1so que 0 vale directamente el valor, estas son las funciones un poco extra\u00f1as, voy a decir que ten\u00edan que hacer todas derivables y esta justo no es derivable en el punto 0, pero despu\u00e9s de este derivado en todo el resto de los reales, bueno ya hay otras m\u00e1s, pero estas como son como de las m\u00e1s utilizadas, bien lo importante ac\u00e1 es que estas funciones de activaci\u00f3n proven una no-lilidad, ni la linearidad y vamos a ver, porque, ok, bueno entonces, vimos lo que era una negrona, imag\u00ednense que en general las negronas se, se ponen como en grupos digamos y se, se distribuyen en capas dentro de una red, \u00bfno? entonces este es un ejemplo de una de las redes neuronales m\u00e1s simples, m\u00e1s simples que en realidad son \u00fatiles para algo, que se conoce como parcer trombos de capa o red f\u00edjol guard de capa, que funciona en la siente manera, nosotros tenemos todas las entradas, esa que yo le dec\u00eda que la centrada se quiz\u00f3, una quiz\u00f3, se quiz\u00f3, se quiz\u00f3, se quiz\u00f3, se quiz\u00f3, se quiz\u00f3 y se net, ser\u00eda como una primera capa de entrada y despu\u00e9s yo ubico un mont\u00f3n de neuronas en una segunda capa y las capas que vienen despu\u00e9s de entrar le voy a llamar capas ocultas, o sea, tengo una primera capa de entrada, esa capa lleva a una capa oculta y todas las neuronas en la capa oculta est\u00e1n interconentadas con todas las neuronas en la capa de entrada, o sea, hay este pesos que van de todas todas, despu\u00e9s puedo tener otra segunda capa oculta, otra tercera capa oculta, etc\u00e9tera, hasta que lleva una \u00faltima capa que tambi\u00e9n est\u00e1 interconentada con el anterior, que es la capa de salida, bien, pero no hay en las es que vayan entre la capa inicial y la capa de salida, digamos, la capa de entrada de la capa de salida, sino que siempre los en las esvan entre una capa y la sienta, entonces ac\u00e1 yo digo que tengo un arquitectura en capas donde tengo este segundo esta imagen, capa ocultas, tengo la capa oculta oculta oculta oculta oculta capa y despu\u00e9s son la capa de salida, bien, entonces esta como el arquitectura m\u00e1s en s\u00ed, yo tengo un mont\u00f3n de capas, una tras de otra, y cada capa est\u00e1 completamente incarconentada con la anterior, pero nunca saltan entre capas, bien, entonces analicemos un poco que es lo que pasa dentro de esas capas y para eso vamos a dudar de mirar la capa, bien, yo tengo entonces, en esa imagen es como estamos gino de la frontera entre una capa y la sienta, yo tengo la frontera de la capa dobleve uno, la capa y la capa y m\u00e1s uno, entonces voy a decir que los estados de las neuronas en la capa y que llegan a la capa y son x1 super y x2 super y x3 super y x4 super y, bien, eso va a ser el estado de la capa y quiero calcular cu\u00e1l va a ser la el valor de la capa y m\u00e1s uno dado que el valor de la capa y era eso, entonces la capa y yo ten\u00eda que valiar esto, y x1 super y x2 super y x3 super y y creo que ella va a estar 4, y x4 super, esto es un vector, bien, entonces recorden c\u00f3mo calcul\u00e1bamos el valor de una neurona, dec\u00edamos que por ejemplo para calcular la neurona que est\u00e1 ya arriba que es x1 y m\u00e1s uno, el valor de esta neurona se calculaba como y ten\u00eda que hacer las sumas digamos de los inputs que estaban de la de izquierdo por los pesos que llegaban hasta ah\u00ed, entonces en este caso son todas las neuronas que est\u00e1n en la capa y todos los valores de la neurona multiplicados por todos los valores de las flechitas, entonces ser\u00eda x1, por dobleb y la flechita que est\u00e1 lleno desde la neurona uno de la capa y hasta la neurona uno de la capa y m\u00e1s uno se llama dobleb 1 a 1, entonces x1 por dobleb 1 a 1, m\u00e1s, la segunda capa para la segunda neurona de la capa y la por el segundo peso te era el 2x1, el peso 2x1, esto tambi\u00e9n es de la capa y m\u00e1s x3 por dobleb 3x1, todo esto es de la capa y m\u00e1s x4 por dobleb 4x1, entonces la salida x1 de la capa y m\u00e1s uno es el producto de todas estas ac\u00e1, bien ese producto de la neurona uno de la capa anterior por el peso uno uno, la neurona dos de la capa anterior por el peso 2x1, la neurona tres de la capa anterior por el peso 3x1, lo mismo puedo hacer para la otra puedo decir x2 y ser\u00eda igual solo que tambi\u00e9n ac\u00e1 cambi\u00e1ndolo el lugar es a 2, entonces digo es x1 y por dobleb 1 a 2 y m\u00e1s 2 estos m\u00e1s x4 y por dobleb 4 a 2 y bien s\u00ed, ah\u00ed est\u00e1, cuando estamos en un arquitecto en capa como esta, es as\u00ed, es cada la neurona de la capa siguiente est\u00e1 conectada con todo el anterior pero nunca saltan de capas, nunca cruzan hacia otra y nunca vuelen hacia atr\u00e1s, que es otra cosa que puede pasar en otras arquitecturas de redes, pero esta que es la m\u00e1s simple es cada capa con la siguiente, bueno entonces x3 ser\u00eda lo mismo, x1 y ac\u00e1 el peso 1 o 3, tan data, x4 el peso 4 o 3 s\u00ed, s\u00ed, o sea, no, ac\u00e1 son todas reales, x, todos los requisitos, le dole, son todas las reales, entonces a eso quer\u00eda llegar, yo tengo x1 y x2 y x3 y x4 son 4 variables reales que componen un vector y si yo agarr\u00f3 todos los dole 1, 1, 2, 1, 2, 1, 3, 1, 4, 1, 2, 1, 2, etc, todo esto compone una matriz en realidad, yo puedo construirme la matriz de la capa y es igual, esta matriz que tiene dole 1, 1, hasta dole B, 4 o 3, bien, esto es una matriz, entonces al tener eso en realidad yo puedo expresar la salida de esta capa, puedo expresar los estados en los cuales lo valores, en los que quedan las neuronas de la capa siguiente, los puedo expresar como un producto de matriz, yo digo, el vector en la capa era esto, entonces el vector en la capa y m\u00e1s uno va a ser el producto de xy por dole B, digamos esto termine haciendo un producto de matrices, si hace el producto de matrices, es medaria, x1 por dole 1, y x2 por dole B, y x3 por dole B, y x4 por dole B, 4, que es lo mismo que estedera, y si vamos con la segunda columna, me al mismo daca, si vamos con la segunda columna, me al mismo daca, pero es un definitio la salida de esta capa, digamos si yo tengo esta neuron ah\u00ed, la salida de la capa, a ver d\u00f3nde les creo, los pido ac\u00e1 porque esto nos va a tener que quedar para despu\u00e9s para cobrar este, mirarlo, pero bueno, tengo x su bra\u00ed, este es el vector de entrada, y voy a poner ac\u00e1, copiar la matriz esta, dole B1 1, hasta dole B4 1, dole B4 3, dole B1 3, y vamos a hacer tres, entonces, digo que el valor de x1 va a ser el valor en y por la matriz que representa los pesos de la capa y, y a esto lo que me falta agregarle es el sigma, que es la funci\u00f3n de activaci\u00f3n y las el sigma tambi\u00e9n pues pertenece a la capa y d\u00eda, mucho por tener distintas funciones de activaci\u00f3n por capa, bien, entonces, concentremos en esto, \u00bfno? Decimos que si yo tengo una arquitectura en capas donde cada capa est\u00e1 conectada con la anterior, digamos todas las neuronas una capa est\u00e1n conectadas con todas las neuronas de anterior, entonces puedo calcular la activaci\u00f3n o los valores que va a tener la capa y m\u00e1s uno en funci\u00f3n de la capa y con esta formulada ac\u00e1. As\u00ed que supongamos que tengo, eso creo que es, es altamente lo mismo que dice ac\u00e1, ah\u00ed est\u00e1, tengo esa entrada, la salida va a ser ese vector, digamos, de tres neuronas y tengo esos pesos por lo tanto puedo calcularlo de esta manera, bien, entonces supongamos que tengo una arquitectura que tiene tres capas, \u00bfno? Tiene o m\u00e1s, digamos, tiene dos capas ocultas, entonces eso significa que si tengo dos capas ocultas voy a tener una matriz de pesos, \u00bfd\u00f3nde le voy a llamar dole 1 y una matriz de pesos, que le voy a llamar dole 2, entonces luego va a venir un vector X que va a ser un vector que tiene un mont\u00f3n detr\u00e1s, \u00bfno? X1 hasta XL, esta es un vector, quiero ver cu\u00e1l va a ser la salida de la red suponiendo que tengo una capa de pesos dole 1 con una funci\u00f3n de activaci\u00f3n sigma 1 y una capa de pesos, le dedo con una funci\u00f3n de activaci\u00f3n sigma 2. \u00bfC\u00f3mo me quedar\u00eda la salida de la red? Vamos, \u00bfcu\u00e1l ser\u00eda la formulada para la salida de la red? Vamos a llamarle RN de X a la salida de esta red, que es una red que tiene, dos capas ocultas y tienes la estructura, \u00bfno? \u00bfQu\u00e9 le parece? S\u00ed, ah\u00ed est\u00e1, aqu\u00ed es por dole 1 y esto le aplicamos sigma 1, ah\u00ed est\u00e1, ah\u00ed est\u00e1, la hacemos dole 2 y le pasamos sigma 2, exacto, entonces eso ser\u00eda, digamos, la ecuaci\u00f3n que te queda de una arquitectura con dos capas, dos capas ocultas y la salida, se calcular\u00eda esta manera, tenemos el vector X, el vector que le multiplicamos por los pesos de la capa 1, despu\u00e9s le pasamos la funci\u00f3n de la derivaci\u00f3n, ah\u00ed se resulta o le multiplicamos por los pesos de la capa 2 y le aplicamos la funci\u00f3n de activaci\u00f3n y est\u00e1 y esa es la salida, si tuvieron m\u00e1s capas, si esto fuera un parcer pero multiplicapa de 30 a cada pasio, entonces tendr\u00edamos como m\u00e1s sanidad viendo esto pero m\u00e1s o menos es lo mismo, bien, entonces \u00bfQu\u00e9 pasar\u00eda si estas funciones de activaci\u00f3n fueran la funci\u00f3n identidad o fueran funciones lineales como este multiplicar por 4, algo del estilo de ambos, \u00bfQu\u00e9 pasar\u00eda en ese caso? A esta, en ese caso, si esto fuera la identidad o si fuera multiplicada por una constante pero supongamos que fuera la funci\u00f3n identidad, entonces ac\u00e1 esto me dar\u00eda lo mismo que hacer X por doble de 1 por doble de 2, que es lo mismo que hacer X por una cosa que es un producto entre dos matrices y un producto entre dos matrices vea otra matriz, entonces si estas funciones fueran una funci\u00f3n identidad o fuera una funci\u00f3n lineal o fuera una funci\u00f3n de esas diamos simples, entonces todo esto ser\u00eda una cuesti\u00f3n lineal o sea yo podr\u00eda rescribirlo siempre como el producto entre un vector y una matriz, que es un sistema lineal, bien, esa es la raz\u00f3n por la cual se necesita que estas cosas ac\u00e1 sean no lineales, que era lo que le dec\u00eda que bueno, casi que el \u00fanico requisito que tienen que tener estas funciones de activaci\u00f3n es que sean no lineales porque si son lineales cuando yo empiezo a arquitecturar estas cosas en capas me queda simplemente un producto de matrices, porque me interesa que sean no lineales y porque o sea me molesta que esto sean un sistema lineal, porque si yo tengo un sistema lineal digamos si yo tengo que el resultado de mi red lo puedes presar como X por una matriz, entonces bueno, hay cierta clase de problemas, que voy a poder resolver, pero todos los problemas que son no lineales, todos los problemas que no se pueden capturar por una estructura lineal, entonces no lo puedo resolver, bien, hay, s\u00ed, incluso sin la activaci\u00f3n, o sea, es una renebrona que no tiene activaci\u00f3n ninguna, o sea simplemente es multiplicar un vector por un conjunto de pesos, bien, entonces si yo tengo solamente una funci\u00f3n lineal hay un conjunto de problemas que puedo modilar, es verdad, pero no son todos y de hecho no lo vamos a ver pero hay una demostraci\u00f3n que dice que teniendo funciones activaciones no lineales, alcanza incluso a tener una sola capa oculta y alguna cocina m\u00e1s para modilar cualquier tipo de funci\u00f3n que hab\u00edamos interesa, digamos, con ciertas propiedades, por lo menos que sea cont\u00ednua, en centro intervalo, etc\u00e9tera, pero a sumiendo ciertas propiedades bastante normales, es posible incluso con una sola capa, con una cantidad arbitraria de neuronas, modilar cualquier funci\u00f3n posible, y es un poco el poder que tiene las renevernales en realidad, son como suficientemente flexibles como para modilar cualquier cosa, cosa que cuando ve\u00edamos bueno, hay valles, era un ejemplo que modilar a ciertos tipos de problemas, si miran regresi\u00f3n log\u00edstica, podemos delarse a dos tipos de problemas, pero algunos no, bueno, las renevernales en calidad son super flexibles y podemos modilar cualquier cosa, entonces, sabemos que para cual casi cualquier funci\u00f3n que a una linteresa modilar existe una renebrona que podr\u00eda llegar a cumplir la composici\u00f3n de nivel de precisi\u00f3n, digamos ah\u00ed, teor\u00eda m\u00e1s que vemos est\u00e1n, sin embargo, encontrar en la pr\u00e1ctica no es tan f\u00e1cil, o sea, sabemos que existe la familia de las renevernales hay alguna funci\u00f3n que me va a permitir a hacer todo lo que quiera, pero bueno, de all\u00e1 encontrarla no est\u00e1 en sencillo, pero bueno, por lo menos sabemos que existe, igual con estas cosas que tenemos, o sea, sabiendo no m\u00e1s que arquitecturando en capas y teniendo la funci\u00f3n de activaci\u00f3n, no l\u00ednial en cada una, ya ten\u00e9s un mont\u00f3n de funciones interesantes que poden salir para modilar muchas cosas, bien, preguntas hasta ac\u00e1, bueno, esta es otra funci\u00f3n de activaci\u00f3n interesante que se conoce como la funci\u00f3n softmax, si utiliza para los problemas de clasificaci\u00f3n discritos, por ejemplo y que van a tener en el segundo oligatorio, que bueno, es el problema de clasificaci\u00f3n aruntuit y lo quiero clasificar en si es positivo, negativo, neutro o nada, no, tengo esas cuatro classes, entonces, la funci\u00f3n de activaci\u00f3n softmax es como una generalizaci\u00f3n de la funci\u00f3n de la funci\u00f3n log\u00edstica, de la sigmoide, que se calcula esta manera dice bueno, eso asumo que los pesos de salida que son n\u00fameros reales van a formar una probabilidad, digamos, lo quiero transformar de una probabilidad, entonces lo que alguna esta manera, digo que el valor para isub y es a la asub y sobre la sumatoria de a la el resto, bien, esto solamente para que lo tengan en cuenta es muy probable que si van a usar redes sociales en la segunda tarea, tengas que utilizar al final una capa que se llama capas softmax, que es una capa que tiene una funci\u00f3n de activaci\u00f3n especial, que es serio para transformar las alidas en distribuci\u00f3n de probabilidades, s\u00ed, y la mayor, si tiene una distribuci\u00f3n de probabilidades y bueno, la sociedad que tiene probabilidad mayor, ah\u00ed tienes que tener una, ser\u00eda como una log\u00edstica independiente por cada una, entonces, si es mayor que esero, digo que es valido y no, o sea, si puedo tener m\u00e1s de un ley vela a la vez, ah\u00ed tendr\u00edas que hacer otra cosa, en softmax va a intentar que sea una distribuci\u00f3n de probabilidades, entonces probablemente te queda una clase que gane y las dem\u00e1s sea mucho m\u00e1s bajitas, bien, bueno, entonces, recuerden que estamos, siempre utilizando en un n\u00famero, por ahora no hemos visto nada del lenguaje, eso lo vamos a ver un poco m\u00e1s adelante ahora, son todos n\u00fameros, en la entrada, me viene en n\u00fameros reales, en los pesos tengo n\u00fameros reales, a multiplicaci\u00f3n, el caso, funciona activaci\u00f3n, etc\u00e9tera y me da otro vector de n\u00fameros reales, o sea, la salida esto va a ser un vector en n\u00fameros reales, tener en cuenta que cada una de estas cosas van a tener sus dimensiones, no, yo voy a tener ac\u00e1 ten\u00eda una entrada que ten\u00eda cuatro vectores, para un cuatro valores, una matriz que ten\u00eda cuatro por tres, entonces al multiplicarlo me devuelve tres, si la siguiente capa es de tres por ocho, entonces me va a volver ocho, y as\u00ed, o sea, los tama\u00f1os de las matrices o sea, los tama\u00f1os de las capas tienen que coincidir, pero en definitiva son todos vectores, no, por ahora esto es una c\u00e1lculo utilizando c\u00e1lculo en un m\u00e9dico vectorial, entonces vamos a hablar un poco de c\u00f3mo se entrenan estas redes, y vamos a pensarlo de la siguiente manera, como estos son m\u00e9todos de aprendizaje autom\u00e1tico, se voy a tener, como vimos en las clasi\u00f3nteriores, voy a tener un conjunto entrenamiento, un conjunto de desarrollo, un conjunto de test, entonces supongo que yo tengo un conjunto de entrenamiento que tiene en ejemplos, o sea, en ejemplos significa que voy a tener en estos sectores y enezalidas distintas, que les voy a llamar s\u00ed, entonces los vectores entre las onestos, los vectores de salida son estos de ac\u00e1, y yo tengo que tratar de ver si la salida se parece al entrar, entonces supongamos que la salida es solamente un valor, o sea para simplificar, vamos a asumir que la entrada de la red son es un vector de, de cualquier dimension, y la salida solamente es un valor real, es posible, o sea lo que est\u00e1 haciendo es tener una red que tiene muchas capas, lo que sea, pero al final todo se reduce a una sola salida un valor real, obviamente esto despu\u00e9s se extiende a m\u00e1s valor real, pero bueno, supongamos que tenemos una sola, entonces digo que tengo en instancias, o sea, en evaluores de aqu\u00ed sub\u00ed, este es mi conjunto entre el aviento, supongamos o el conjunto en el que estoy tratando de medir cosas, aqu\u00ed sub\u00ed y me dice que esto se que sub\u00ed deber\u00edan corresponderse con diferentes valores de y sub\u00ed, no, este es el conjunto de valores esperados, yo digo que para aqu\u00ed subuno tengo un y subuno, para que subuno tengo un y subdos, bien, por ahora son todos n\u00fameros reales, y adem\u00e1s tengo que yo tengo una red neuronal con ciertos pesos que se le ha podido aplicar a x sub\u00ed y con sus matrices de pesos, entonces mi red neuronal me va a dar cierto valor y le voy a llamar y sub\u00ed techo, como puedo saber si est\u00e1 bien lo que me da la red neuronal para que s\u00ed, o no, digamos que de qu\u00e9 manera yo puedo llegar a medir si est\u00e1 bien o no, este valor que me dio, a esta, o sea, a mi salida, mi conjunto yo dec\u00eda bueno, la salida ten\u00eda haber sido y sub\u00ed, y la salida me dio la red, es, es sub\u00ed techo, como puedo saber si ese, ese est\u00e1 bien o mal, o sea que, que me dio, me d\u00ede, me d\u00ede, me d\u00ede, me d\u00ede, est\u00e1 bien o mal, ah\u00ed est\u00e1, yo puedo restar y digo bueno, qu\u00e9 tanto se parece en estos dos, si esto est\u00e1 cerca de cero, es un valor muy chiquito, entonces yo puedo decir que estas dos cosas son iguales, por lo tanto la red me est\u00e1 dando un resultado parecido al que yo esperaba y si estos dos son muy diferentes, entonces esto me va a dar un valor bastante alto, entonces yo tengo muchos de estos, no, tengo n ejemplos de este estilo, as\u00ed que lo que voy a hacer es sumar todos estos, de igual uno hasta n, sumo todos los valores, tengo un problema que es que a veces yo puedo le poder arpor mucho, es el poder arpor poco, pero a veces esto me va a dar negativo, esto me va a dar positivo, entonces si yo no sumo todo, capaz que me da cero por casualidad, entonces lo que hago es ponerlos al cuadrado, para decir bueno, yo siempre voy a sumar a los dispositivos, entonces si mi salida es distinta, el valor esperado siempre esto me va a dar un resultado positivo, bien entonces como estoy comparando en ejemplos, esto lo voy a dividir entre n, esto de ac\u00e1 me da una metrica condensada que me dice qu\u00e9 tanto se equivoc\u00f3 mi red, respecto a los valores, a todo lo que lo esperamos, y de hecho, esta es una de las metricas posibles para medir eso, est\u00e1n muy usadas, se llama mc, min squared error, error cuadr\u00e1tico medio, y es una de las metricas m\u00e1s conocidas, entonces esto es una metrica que me permite medir la discrepancia que hay entre los valores esperados de una red ac\u00e1 era y su y, entre los valores esperados de una red y los valores que la red dio con todos los pesos que tienen hasta el momento, recuerden que este hizo dice calculaba como el resultado de la red para equisubir y los pesos de la red, entonces, este tipo de funciones que miden la diferencia entre los valores esperados y los valores que me da la red de verdad, se llaman funciones de perdida, bien, o sea, el nombre de perdida no se moviende, donde sale, pero se le suele llamar funciones de perdida, los functions y bueno, son de los conceptos que no tienen que aprender cuando aprende de redes sociales, porque para entrenarlas, yo lo que tengo que hacer es elegir una de los funciones apropiada para problemas, entonces, estas de las m\u00e1s comunes, el arro cuadr\u00e1tico medio, sirve mucho para problemas donde los valores resultados son valores reales, no sirve tanto para cuando los valores esperados resultantes, son por ejemplo una distribuci\u00f3n de probabilidades o una categor\u00eda en muchas como ese problema que tienen en el laboratorio, para esos utilizan otras, por ejemplo, la entrop\u00eda cruzada o en particular, una versi\u00f3n de entrop\u00eda cruzada que sirve para decir, yo tengo un solo valor correcto de entre muchos que en el laboratorio les pasa a eso, digamos, que tengo un tweet y es positivo, o en negativo o en neutrono, no, no puede ser m\u00e1s de una, entonces, para eso se usa la \u00faltima, es una versi\u00f3n de la entrop\u00eda cruzada para valores categoricos, bien, y existen unas contas m\u00e1s digamos, o sea, pero en definitiva siempre tengo que tener funciones de estilo, como pasaba con la funci\u00f3n de activaci\u00f3n, lo que se espera es una funci\u00f3n de perdiada, es que se ha derribable y en el caso de la funci\u00f3n de perdiada, lo que se espera es que cuando la salida de la red se parece much\u00edsimo a los valores esperados, tiene que estar cercana a cero o tener que ser un valor m\u00ednimo y cuando la salida de la red es muy diferente, tiene que ser un valor m\u00e1s grande, bien, entonces, porque es que yo quiero que todo esto sea derribable, o que les parece, s\u00ed, la exacto para minimizar, el hecho de que yo puedo hacer que esto sea derribable, digamos que lo que est\u00e1 dentro, o sea, este es y su techo y su b techo, menos y su b, y esto lo calcule con esto que est\u00e1 ac\u00e1, entonces esto es una sobre ne por la sumatoria de una est\u00e1 ene de una cosa que ten\u00eda la forma sigma de sigma de sigma de x por dobleve a la 1 por dobleve 2, no s\u00e9 qu\u00e9, menos y sub\u00ed, al cuadrado, bien, entonces ac\u00e1 dentro se ha tenido una cosa que era todo derribable, y ac\u00e1 fuera tengo otra funci\u00f3n que tambi\u00e9n es derribable, tanto las funciones de activaci\u00f3n como todos los resultados de la red no en el \u00e1lcool, como la funci\u00f3n de p\u00e9rdida, como todas estas cosas, son todas derribables, para que quiero eso porque efectivamente voy a derribar, la t\u00e9cnica se utiliza para entrenar estas cosas se basa mucho en encontrar adribas, y vamos a dar de ver por qu\u00e9, bien, entonces, para entrenar una de estas red, recordemos que, digamos, para entrenar estas red, recordemos que tengo un conjunto de entrenamiento, un punto de desarrollo, un punto de test, y me interesa tratar de minimizar esto, o sea, yo tengo que la red se calcula como, dependiendo del valor de entrada y el conjunto de pesos que tengo, yo voy a multiplicar ese valor entrada por una matriz y por otra con la funci\u00f3n de activaci\u00f3n, etc\u00e9tera, hasta obtener un resultado, pero entonces, no tal que este valor est\u00e1 en funci\u00f3n de la entrada que es quiso y el conjunto de pesos de leve, no, ac\u00e1 yo tengo una funci\u00f3n que es que est\u00e1 en funci\u00f3n de dos cosas, estas son las entradas de conjunto de entrenamiento, o del conjunto que estoy mediendo, y estos son los pesos que yo le puedo dar ac\u00e1 una de las capas, entonces, una cosa interesante es que yo puedo mirar este problema del punto de vista de que estos valores, los dejo fijos, digo, mi conjunto de entrenamiento de lo conozco, entonces, los valores est\u00e1n fijos, y yo puedo ir cambiando los pesos hasta encontrar el conjunto de pesos ideales que permita que el valor de entrenamiento, multiplicado por esos pesos, me den la sal\u00eda que yo quiero. Entonces, ah\u00ed, eso se transforma en un problema, como dec\u00eda, por ah\u00ed, un problema de administraci\u00f3n, un problema de optimizaci\u00f3n en el cual lo que voy a hacer es tomar esto como variable, entonces, yo lo que quiero encontrar es el argument para la familia posible de pesos de las distintas matrices de leve de esta funci\u00f3n ac\u00e1, que es uno sobreviene por sumatoria en N, de y subitecho menos y sub\u00ed al cuadrado, bien, y voy a encontrar el armin en dobleb, o sea, lo que est\u00e1 ac\u00e1 dentro que es rn de xy dobleb, le voy a ir variando estos dobleb hasta que hacen contra el ideal, bien, entonces, supongamos que tengo unas funciones, vamos a ver una funci\u00f3n bastante simple como para ver c\u00f3mo funciona esto, el entrenamiento de una red se da utilizando una t\u00e9cnica llama de senso polgradiente, hay otras t\u00e9cnicas, pero estas por lejos la m\u00e1s utilizada de todas, y la t\u00e9cnica de senso polgradiente funciona la siente manera, no, si yo tuviera una funci\u00f3n que va solamente en una dimensi\u00f3n y quiero minimizarla y arranco con un punto por ac\u00e1, digo, bueno, mi peso inicial me dice que voy a terminar en este lado, entonces, yo puedo calcular la derivada en ese lado y decir, bueno, para que lado voy a bajando mi funci\u00f3n de cost\u00f3n, o sea, suponiendo que esta es la funci\u00f3n de p\u00e9rdida, funciona de cost\u00f3n, puedo decir, para que el lado voy bajando mi funci\u00f3n de p\u00e9rdida y dice, bueno, lo voy bajando si bajo por esta dimensi\u00f3n, si bajo por esta direcci\u00f3n, entonces, ah\u00ed le digo, bueno, baja un poquito por ah\u00ed y cae culame otro valor que va a estar ac\u00e1 y ah\u00ed le vuelto a ver a la derivada y bueno, en qu\u00e9 sentido voy bajando y dice, voy bajando si me parallas, entonces, ah\u00ed me encuentro a tu valor que est\u00e9n en esa direcci\u00f3n, calculo de vuelta de la derivada y as\u00ed, o sea, yo puedo ir y tirando esta manera hasta llegar a un m\u00ednimo, bien, eso de ya m\u00e1s de cento por alguien, luego yo tengo, quiero encontrar el m\u00ednimo de una funci\u00f3n, supongamos que esta es mi funci\u00f3n de p\u00e9rdida y empec\u00e9 teniendo este valor calculo donde est\u00e1 en la direcci\u00f3n en la cual le puedo bajar m\u00e1s y voy moviendo me por ah\u00ed hasta llegar al punto bajo, esta, esto es un caso ideal en el cual yo tengo una sola variable que estoy tratando de encontrar, en el caso real, yo estoy minimizando, digamos, minimizando esta funci\u00f3n respecto a doleb\u00e9, que es una cosa que son muchas matrices con muchos pesos, con muchas cosas y pod\u00e9is llegar a hacer miles de millones de pesos, pero vuelta, en un caso ideal si yo estuviera solamente minimizando una severidad de esta manera, cuando yo estoy minimizando, misiones de variables a la vez, lo que pasa es que esta superficie, lo que tengo ac\u00e1 no va a hacer una curva tan linda, sino que va a hacer una superficie rusa que tiene un mont\u00f3n de \u00f3ptimos locales que no me van a servir, pero cuando yo hago este algoritmo lo que va a hacer es caerse un \u00f3ptimo local, imag\u00ednense que si esta curva tuviera esta forma, entonces este algoritmo llegar\u00eda a un \u00f3ptimo local por ac\u00e1, pero se perder\u00eda el \u00f3ptimo global que est\u00e1 por ac\u00e1, bien, eso es algo que puede pasar, entonces bueno, no se asusten que cuando uno entre una reneoronal, nunca va a estar seguro de que encontr\u00e9 el \u00f3ptimo posible de toda la red, de todas las posibles, sino que bueno, tengo que conformarme con encontrar una bastante buena probando varias veces, bueno entonces, dec\u00edamos esto sobre entrenamiento, ok, el entrenamiento intentan encontrar los pesos que minimizan esta funci\u00f3n de p\u00e9rdida, o sea la combinaci\u00f3n de matrices doleb\u00e9 que hace que esta funci\u00f3n sea lo menor posible, la t\u00e9cnica que se utiliza es en su pobre adiente, pero lo que est\u00e1 convencionando ac\u00e1, se usa una cosa de llamas de cienso por antes esto castico que se trata de agarrar cada punto, se agarr\u00f3 cada punto de entrada y trata de hacer el cienso por pobre adiente, considerando solamente ese punto y es pues agarr\u00f3 otro punto de entrada y luego varias veces, luego que tiene eso es que es s\u00faper lento, o sea es como que tiene buena probidad de convergencia, pero s\u00faper lento, todo lo que hace es hacer de cienso por adiente en lote o en batches que significa bueno, en vez de tomar todo el conjunto de entrenamiento que puede tener 100 millones de ejemplos, todo modea 120 una cosa de cieno, no s\u00e9, 200, o el hijo un batch que digo bueno, tomo este conjunto de ejemplos y hago de cienso por dentro de ah\u00ed, pues tomo otro conjunto de cienso por adiente por ah\u00ed y hasta llegar a llegar a un \u00f3ptimo, bien, los siguientes vachos para ello, entonces yo les dije hasta ahora que todas las cosas ten\u00edan que ser derivables y el hecho es que sean derivables implica que lo vamos a derivar en el momento, lo vamos a hacer ac\u00e1 ni una derivada deamos porque en realidad los paquetes que se utilizan para trabajar con estas cosas en realidad son paquetes que permiten hacer derivaciones autom\u00e1ticas, o sea toda la gracia de construir redes neuronales, utilizando ciertas librer\u00edas, es que las librer\u00edas permiten definir todas estas cosas como vectors y despu\u00e9s ellos hacen las derivadas autom\u00e1ticamente calculando autom\u00e1ticamente, pero en definitiva, la tenia que se usa para que acular, se llama propaedition que implica que cuando yo voy calculando, los peces de una red, los valores de una red, yo digo, el momento en trav\u00e9s de x, lo multiplico por del eb, pues le pasa la funci\u00f3n de activaci\u00f3n, lo multiplico por otrable ver, le pasa la funci\u00f3n de activaci\u00f3n, a medida que voy calculando eso voy dejando como todos los valores sin termedios, esos valores se usan de atr\u00e1s para adelante, por eso se llama propaedition para que acular las derivadas, porque en realidad todos los valores de sumas multiplicaciones, etc\u00e9tera que yo fui llegando en el medio, si utilizan como que se precalculan para despu\u00e9s que acular la derivada, y el va a curar propaedition es una t\u00e9cnica que me ayuda a ser eso r\u00e1pidamente. Bien, entonces, esta la pregunta que le dec\u00eda hoy, yo puedo encontrar la mejor funci\u00f3n posible, puedo encontrar la mejor red neuronal que explique mi problema, 100% bien, la verdad es que no, porque en general este proceso se cae en optimos locales, y este tipo de funciones que tienen miles de millones de par\u00e1metros, lo que pasa que tienen much\u00edsimos optimos locales, y bueno, el entrenamiento se va a caer siempre en un optimo local, lo que no hace para evitar eso de alguna manera es, por ejemplo, entrenar varias veces, una misma red, diciendo bueno, tengo una misma red con los mismos par\u00e1metros, el entreno muchas veces, y veo cu\u00e1l, cu\u00e1l le fue mejor, de todos los entrenamientos, esa es una de las formas, y el otro problema de tiene es el sobre ajuste, creo que no lo mencionamos en la clase anterior, sobre ajuste significa que las renevernales tienen un problema que lo tienen otro m\u00e9todo de classificaci\u00f3n, pero las renevernales en particular, porque como que son muy vers\u00e1tiles, y es que se pueden aprender muy f\u00e1cil todo el conjunto de entrenamiento, yo puedo entrenar una red que se aprenda muy bien en conjunto de entrenamiento y me diga, s\u00ed, parece que X le corresponde este ah\u00ed y anda barbaro y la funci\u00f3n de los me da casi cero, y sin embargo, lo prueba el conjunto de test y le va horrible, y eso es muy f\u00e1cil porque como les dec\u00eda, como la renevernales, puede modelar cualquier tipo de funci\u00f3n, entonces es muy f\u00e1cil que se aprendan todo el conjunto de entrenamiento y despu\u00e9s, para el punto de telebasa, espantoso, esa es ese fen\u00f3meno de llamas sobre ajuste, entonces bueno, hay como distintas t\u00e9cnicas para tratar de evitarlo y que la red no, digamos, no se ajustes a los datos, sino que se va a generalizar m\u00e1s, etc\u00e9tera, bien, entonces, s\u00ed, dale. Es una pregunta interesante, en realidad hay un conjunto de t\u00e9cnicas que sirven para decir si yo puedo entrenar una red con un conjunto de datos m\u00e1s amplio que capaz que no est\u00e1 el todo correcto y despu\u00e9s una vez que tengo una red de entrenada, la entrena de vuelta con un conjunto m\u00e1s chico pero que tiene mejor calidad y eso da mejor resultado que entrenarla directamente con un conjunto m\u00e1s chico o con otro tipo de datos, entonces, de ah\u00ed hay variantes, es decir, si yo tengo una red de una vez que ya consegu\u00ed los pesos de la red, lo puedo seguir entrenando usando otros conjuntos y eso es valido, s\u00ed, o sea, se usa, es una t\u00e9cnica que se usa y est\u00e1 buena porque da buenos resultados, igual, en la tarea usted es, no s\u00e9, no s\u00e9 si va a la pena hacerlo, pero obviamente, si van a tener una red de una red de una red, lo han con los datos que tienen, no creo que sean de salios a muchas cosas m\u00e1s, pero s\u00ed, tratar de ver un poco lo vamos a ver ahora, que hasta ahora vieron que ya est\u00e1n moviendo n\u00famero real, no, se ha entrado un vector de n\u00famero reales, sal\u00edan n\u00famero reales, vector de n\u00fameros reales, s\u00ed, vale, s\u00ed, se usan a veces, en la pr\u00e1ctica, da mejor resultado, probar varias veces y ya o hacer una prueba, digamos, tipo grid search, en el cual digo, tengo tantos par\u00e1metros y probar con todos, o aleatoriamente probar, anas ampliando y tinto par\u00e1metros y entrenar, es cierto que tambi\u00e9n se usan m\u00e9tabriticas, evolutivos y algunas otras, para adaptar a utilizar la red, pero no s\u00e9 en la pr\u00e1ctica, si es que dan tan buenos resultados o simplemente ir probando con distintas combinaciones, dando mejor, o general, en contas buenos resultados, s\u00ed, s\u00ed, s\u00ed, tengo la funci\u00f3n de arriba, claro, pero el problema es que la funci\u00f3n de verde ya no va a tener un optimo global, normalmente, no va a tener porque la funci\u00f3n de verde ya tiene esta cosa en el medio, estoy minimizando una cosa que es algo no el inial y que tiene millones de par\u00e1metros, y yo puedo ir en la direcci\u00f3n de cualquiera de los millones de par\u00e1metros, entonces por eso normalmente digamos, eso de generar su superficie, su perroboza que tiene un mont\u00f3n de su d\u00eda, si bajaba por todos lados y justo a mocar la el optimo global es muy dif\u00edcil, entonces nada te garantiza que puedas tener un nuevo global, claro, s\u00ed, pero ac\u00e1 queremos esplicitamente que la funci\u00f3n de activaci\u00f3n sea algo que me deje la funci\u00f3n complicada, si vos, claro, si vos hace que la funci\u00f3n de activaci\u00f3n sea tan simple, que esto queda como la funci\u00f3n con bexa, entonces pierde capacidad de generalizaci\u00f3n la red, por eso se dice tambi\u00e9n que esto es un problema de optimizaci\u00f3n no con bexa, no en optimizaci\u00f3n con bexa, uno pueda asegurar que siempre tenemos un optimo global y lo podr\u00edamos llegar a encontrar con alguna t\u00e9cnica, pero esto es optimizaci\u00f3n no con bexa, la forma de la gr\u00e1fica siempre va a tener su vida si bajaba, se no hay un lado, bien, m\u00e1s preguntas, \u00bftac\u00e1? Entonces pasemos a la parte del lenguaje, bien, dec\u00edamos, hasta el momento, ten\u00edamos una reneoronal que a la cual le entraban valores reales y sal\u00edan valores reales, pero nosotros en realidad nos interesa trabajar con texto, nos interesa trabajar con palabras, oraciones, documentos, tweets, en el caso del ol\u00edadorio, y el problema es que tenemos una red que le entraban valores reales, no es un problema raro, digamos, es un problema que le pasa a la mayor\u00eda de los m\u00e9todores de prensa autom\u00e1ticos, si estuvieron mirando algo de reacci\u00f3n log\u00edstica, etc\u00e9tera, siempre yo tengo que mandarle valores reales a las cosas, salvo en una iglesia que m\u00e1s o menos uno puede decir, bueno, trabajo con palabras, como en la abstracci\u00f3n, esto trabaja en un nivel de palabras, en el resto siempre est\u00e1 esperando que yo le mande valores num\u00e9ricos, entonces, yo necesito poder tener una buena representaci\u00f3n num\u00e9rica de los textos, y de paso voy a pedir una propiedad m\u00e1s que es que esa representaci\u00f3n num\u00e9rica tenga algunas propiedades interesantes, como por ejemplo, una metrica distancia que haga que las palabras m\u00e1s cercan, las palabras m\u00e1s similares, y b\u00e1sicamente este m\u00e1s cerca, y la m\u00e1s diferente de este m\u00e1s lejos, por ejemplo, puedo pedir eso en una representaci\u00f3n, entonces, vamos a ver una t\u00e9cnica de llamar Warden Medings, o vectores de palabras que su utiliza para representar las palabras y despu\u00e9s de lo pudilizar como entrada una red, y la t\u00e9cnica se basa en la hip\u00f3tesis distribucional que son de hip\u00f3tesis que surgi\u00f3 en los 50 con, con este firf que era un lista l\u00f3gico, etc\u00e9tera, y dec\u00edan lo siguiente, bueno, las palabras que aparecen en contextos similares tenden a tener significados similares, y ac\u00e1 tenemos un ejemplo que dice que este ejemplo tiene como algunas palabras y algunas ideas de contexto, la milanesa, aunque eso m\u00e1s rica, el Uruguaya, s\u00ed es rica, la muruesa con queso, la milanesa, aunque eso musalelas le decimos una politana, no s\u00e9 qu\u00e9, est\u00e1, eso como que est\u00e1 hablando de milanesa, muruesa comida, y despu\u00e9s el otro dice, los do\u00f1os, una de las distaciones del a\u00f1o, el verano de mis estaciones favoritas, el invierno, en invierno se pide de fr\u00edo, en verano nunca se fr\u00edo y est\u00e1 hablando como de otra cosa, claramente las palabras rojas se parecen m\u00e1s entre s\u00ed, las palabras azules, se parecen m\u00e1s entre s\u00ed, entonces, idealmente yo querr\u00eda tener una representaci\u00f3n que a las rojas, las dejemos o menos cerca y a las azules violetas, las dejemos o menos en otro lado, bueno, una primera idea que surg\u00eda es lo que se conoce como matriz termin\u00f3, termino, que se realiza contando palabras, contando cu\u00e1ndo una palabra parecen, \u00bfcu\u00e1nta vez aparece una palabra en el contexto de otra? Entonces, por ejemplo, en este caso yo digo, yo tomo alrededor de una palabra en palabras de contexto alrededor y cuento, \u00bfcu\u00e1nta vez aparece otra en ese contexto? Entonces, como es ejemplo, tenemos, bueno, estos son los ejemplos anteriores, no, la milanesa con queso m\u00e1s rica, la hamburguesa no s\u00e9 qu\u00e9, el ot\u00f3\u00f1o, tal cosa y pregunta, \u00bfc\u00f3mo quedar\u00eda la matriz utilizando un contexto de cuatro palabras? Y ac\u00e1 no s\u00e9 si lo llevan a ver todos, pero me aparece que, por ejemplo, la palabra milanesa tiene las palabras ricas y queso en su contexto, la palabra hamburguesa tambi\u00e9n, pero la palabra ot\u00f3\u00f1o, no, la palabra ot\u00f3\u00f1o tiene en su contexto, bueno, ac\u00e1 justo, como esto tomando en igual a cuatro no pasa, pero las palabras ver\u00e1n o invierno tienen en su contexto, la palabra fr\u00edo y no tienen ni rica ni queso, entonces eso es con en igual a cuatro, \u00bfno? contando cuatro palabras alrededor, si yo considerar\u00e1 en igual sin go, entonces ah\u00ed s\u00ed, aparecer\u00eda, ot\u00f3\u00f1o tiene la palabra estaciones en su contexto y ver\u00e1 no tambi\u00e9n tiene detaciones en su contexto, entonces es como que me van quedando zonas de la matriz que est\u00e1n como m\u00e1s acopladas entre s\u00ed, no, como que tienen mayor nivel de proximida y otras zonas que no, entonces ah\u00ed ya tendr\u00eda como una especie de primera aproximaci\u00f3n a lo que ser\u00eda mi doctor de palabras, que es decir, bueno, yo puedo representar cada palabra con una fila de esta matriz y esa fila de la matriz va a tener ciertas propiedades cosa de que palabras que est\u00e1n cerca, se manticamente similares van a estar cerca en esas filas, un problema que tiene esta representaci\u00f3n que dice abajo es que son sectores muy grandes, yo tengo sectores de tama\u00f1o b\u00e1sicamente el tama\u00f1o del vocabulario, si yo tengo consigueros 10.000 para el vocabulario, o tener sectores de tama\u00f1o 10.000, donde la mayor\u00eda de los n\u00fameros van a ser cero y algunos van a ser valores distintos de cero, entonces me va a pasar que los sectores son dispersos o sparse, bien, entonces, ah\u00ed como refinaciones est\u00e1 t\u00e9cnico que se utiliza bastante, o sea, est\u00e1 t\u00e9cnica de construir matriz y hasta el menos t\u00e9rmino, se puede usar como va a ser para calcular ciertos tipos del problema de palabra, el algoritmo globo, se va a hacer en comentarios comenzar en esta matriz, los algoritmos de PCR, principal componentan\u00e1lisis se puede usar para reducir la dimensionalidad de esta matriz, en talidad este tipo de matriz es tiene sus usos, pero la que vamos a ver es una t\u00e9cnica un poco posterior a las matriz est\u00e1 el menos t\u00e9rmino que digamos que est\u00e1 como en el inicio de lo que fue la la revoluci\u00f3n que se han dado en pelea en los \u00faltimos a\u00f1os, este es un trabajo de 2013, un trabajo de un investigador de San Francisco Log, un que propuso en 2013, una t\u00e9cnica que en realidad son dos algoritmos distintos, que se llama hortubec, o sea, el algoritmo para ir de palabras a los aspectores, y que su idea era construir vectores de enzos, o sea, a vectores que tuviera una dimensi\u00f3n, mucho m\u00e1s chica del vocabulario, un vector de tama\u00f1o 10.000, un vector de tama\u00f1o 100 o 150 o 300, y por el hecho de comprimir todo el vocabulario en esos vectores m\u00e1s densos, entonces gan\u00f3 esas propiedades de que palabras m\u00e1s cercanas son sim\u00e1ticamente similares, entonces bueno obviamente no lo van solo por comprimir sino por c\u00f3mo se entra en esto, entonces la idea de los algoritmos de hortubec es decir bueno en vez de contar como la matriz de t\u00e9rmino termin\u00f3 las palabras, dentro de un contexto yo lo voy a ver con un problema de clasificaci\u00f3n, un problema de provabil\u00edstico en el cual voy a predecir qu\u00e9 tan probable es que la palabra C aparezca el en contexto de la palabra WB, voy a tener una producci\u00f3n, la producci\u00f3n de que es cierto que aparece la palabra WB en el contexto de la palabra C, en el contexto de la palabra WB, eso ser\u00eda P de m\u00e1s WB, pero a su vez tengo que tener una producci\u00f3n negativa, o sea yo tengo que saber cu\u00e1les son los ejemplos positivos y cu\u00e1les son los ejemplos negativos, entonces lo que se hace para esto decir bueno yo tengo un gran corbus, una gran colecci\u00f3n de palabras y yo puedo medir, puedo llegar a medir cu\u00e1les son los contextos donde aparece la palabra C en el contexto de la palabra WB, pero adem\u00e1s puedo llegar a medir los casos en los cuales no pasa, o sea yo puedo soltearte a la palabra celebratorias, y decir bueno una palabra aleatoria no siempre est\u00e1 en el contexto de una palabra WB, entonces con eso me invento ejemplos negativos, tengo ejemplos positivos que son la palabra queso, aparece en el contexto de la palabra muruesa, ejemplos negativos son de una palabra cualquiera, y sali\u00f3 yo que se \u00e1rbol, bueno la palabra \u00c1rbol no aparece en el contexto de la palabra muruesa, bien, entonces el algoritmoschip, gran que es uno de los algoritmos de WB m\u00e1s utilizados, utiliza este ese principio y lo ve como una red neuronal, intenta modelar esto como una red neuronal, en la cual yo tengo una capa de entrada y la capa de entrada va a ser una representaci\u00f3n Juanjote, esto lo mencionamos la de pasar, la representaci\u00f3n Juanjote y es as\u00ed, no, en la representaci\u00f3n Juanjote, yo voy a tener un vector para la palabra queso y un vector para la palabra hamburguesa, donde voy a tener una columna para c\u00e1unas las palabras posibles, entonces voy a tener la capa de arbol y ac\u00e1 va a estar que son agulado y ac\u00e1 va a estar hamburguesa en otro lado y ac\u00e1 va a armas cosas, y entonces la representaci\u00f3n de la palabra queso es cero en todos lados y un uno ac\u00e1 y cero en todo resto, la palabra muruesa es cero en todos lados, cero ac\u00e1 y un uno en hamburguesa y cero en todo resto, eso es la representaci\u00f3n Juanjote, entonces esta red neuronal en realidad digamos, es una red neuronal que intenta predecir este problema pero a el\u00edstico toma como entrada ese vector de cero cibunos, ese vector Juanjote donde la entrada es todo el vocabulario posible, tiene una capa oculta en el medio, es una red que tiene una sola capa oculta y como salida tiene una distribuci\u00f3n de probabilidades de todas las palabras en contexto, entonces la entrada es supongamos que esto tiene tama\u00f1o 10 mil, no, tengo 10 mil palabras posibles y esp\u00edn palabras en el vocabulario, entonces la entrada de la red va a ser una cosa de tama\u00f1o 10 mil, entrada tiene tama\u00f1o 10 mil y la salida va a tener c por 10 mil, c es cu\u00e1nta que para la verdad es el contexto estoy contando, o sea si yo estoy contando, no s\u00e9, 10 palabras al rededor de la que estoy mirando, entonces va a ser una salida hace por 10 mil, esto se por 10 mil representan, cu\u00e1l es la probabilidad de que una palabra cualquiera por ejemplo hamburguesa est\u00e9 en un contexto de tres palabras para atr\u00e1s de la palabra queso, cu\u00e1l es la probabilidad que la palabra perro est\u00e9 en un contexto de dos palabras para adelante y la palabra queso y as\u00ed eso es las se por 10 mil sal\u00edas y en el medio tiene una capa que ah\u00ed se enedim la capa oculta que tiene tama\u00f1o 10 mil por dime y dime es la dimensi\u00f3n de los sectores que eso es lo que le dec\u00eda que pod\u00eda ser dimensi\u00f3n 100 o dimensi\u00f3n 300 o dimensi\u00f3n 150, es un n\u00famero mucho m\u00e1s chico que vocabulario, entonces pensemoslo como esto la tano mientras es un vector o anjote que tiene uno y un mont\u00f3n de seros y despu\u00e9s lo paso por una matriz de pesos que tiene este tama\u00f1o 10 mil por por ejemplo 300, 10 mil por 300, entonces al multiplicar eso por mi vector ac\u00e1 esto me devuelve una sola fila de esa matriz que tiene dimensi\u00f3n 300 y eso se lo voy a pasar a la funci\u00f3n de activaci\u00f3n, a su vez eso tiene como una especie de segunda capa en la cual aparece en m\u00e1s pesos para poder calcular estas alidas pero en realidad al m\u00e9todo despu\u00e9s de que se entra en la columna un mont\u00f3n de valores positivos, un mont\u00f3n de valores negativos dice bueno que eso aparece en contexto de amor y esa pero perro no parece en el contexto de amor y esa etc\u00e9tera tengo un mont\u00f3n de valores de este estilo, cuando termina entrenar y se bueno llegue al mejor c\u00e1rculo de probabilidades en realidad yo tiro todo el resto de las capas y me quedo solamente con esta ac\u00e1 con la capa oculta, la capa oculta es una tabla que me dice para cada una de las palabras hay 300 valores reales que lo representan, entonces me dice bueno para la palabra que eso esto es 300 valores vamos a hacer menos uno, 3 con 4 o 8 con 6 y no se quede tanto as\u00ed 300 valores y para la palabra la moreza, menos 2, 3 con 1 etc\u00e9tera, o sea voy a tener un mont\u00f3n de valores reales que lo representan, que representan esos n\u00fameros no lo s\u00e9 y nadie lo sabe pero sabemos que ah\u00ed est\u00e1n codificadas la informaci\u00f3n importante para poder despu\u00e9s trabajar con esos n\u00fameros, con esas palabras, bien, a eso se le llama Urdembeddings esta capa oculta que est\u00e1 ac\u00e1 en esta t\u00e9cnica de Urdembeddings, a la capa oculta que entrenan despu\u00e9s de esto, bien, preguntas, est\u00e1 ac\u00e1, s\u00ed, es por el producto, porque la matriz dole beso, la matriz de 10 mil por dimensiones y mi doctor Juan Jot, es un vector que tiene tama\u00f1o de 10 mil pero hay un solo uno, son todos zeros y uno, entonces a la C-block tome queda exclusivamente la fila que representa la palabra que eso, bien entonces, con esto se le obra con, con esa t\u00e9cnica Urdembeddings, no, el resultado de la copa oculta, se lo pasas en esta t\u00e9cnica por lo menos, le pasas, a la copa oculta a otros pesos que van a ir a la salida y esos pesos son lo que calculan la probabilidad de salida pero en realidad despu\u00e9s estos pesos que aparecen despu\u00e9s no me importa, o sea despu\u00e9s de que yo termino entrenar todo, la \u00fanica capa con la que voy a quedar con la del medio que es la que me interesaba entrenar, el resto es como una especie de escusa que se usa para la estataria para poder encontrar la capa del medio, la salida tiene C por 10 mil que significa yo estoy prediciendo cu\u00e1l es la probabilidad en todas las C palabras de contexto de capa parece alguna palabra, bien entonces le hicimos, logramos nuestro objetivo que era decir que hago que puedo asociar a una palabra a un string un vector de valores reales, no, entonces tengo la palabra perro y me va a dar un vector de valores reales, la palabra comer y me va a dar otro vector de valores reales, etc\u00e9tera, adem\u00e1s se cumple que los vectores cuanto m\u00e1s cercanos est\u00e1n en ese espacio de dimension 300, entonces significa las palabras son m\u00e1s similares en alg\u00fan sentido, o si est\u00e1n m\u00e1s lejanos, entonces son m\u00e1s dec\u00edmiles, puedo utilizar, por ejemplo, la similidad, similaridad coseno, para eso si yo cariculen el coseno del \u00e1ngulo del doctor de doctor es eso es una buena medida para saber qu\u00e9 tan parecidos son o incluso usa la distancia utilidad tambi\u00e9n para calcular eso, pero la similaridad coseno es la que m\u00e1s se usa y adem\u00e1s de que tiene esa propiedad de que las palabras m\u00e1s cercanas son m\u00e1s parecidas, ya alguna manera estas t\u00e9cnicas descubren cosas interesantes que uno no es la centreno para que las descubran digamos sino que aparecen como de japa y aparecen cosas como que por ejemplo yo puedo hacer operaciones entre los sectores, entonces si yo tengo el lector de rey y le resto el lector de hombre y le sumo el lector de mujer me queda el lector de rey y eso es una propiedad que aparece despu\u00e9s de que yo entre los sectores suele ser a la idea de estas colecciones del lector es que haga el lector de mujer le resto de hombre y le sumo rey y me queda rey, o haga el lector de uruguay, le arrega un TV, le sumo Francia me da paris, entonces ah\u00ed en un caso estoy haciendo una transformaci\u00f3n en un poco morphol\u00f3gica decir bueno este hombre es a mujer como rey esa reina y no estoy haciendo una transformaci\u00f3n m\u00e1s sem\u00e1ntica como decir en la capital de uruguay en un TV, la capital de Francia Par\u00eds y a alguna forma yo nunca le dije al sistema que tiene que aprender eso pero por la forma que aqu\u00ed han creado los sectores suelen tener propiedad de este estilo, bien eso fue como lo primero sorprendente que encontraba una cerca de estos metos que se pueden como que derreg\u00f3 de aprender esas cosas pero no est\u00e1n acceptos de problemas, como por ejemplo si yo tengo una palabra la palabra vela voy a tener un solo vector que representa la palabra vela y vela es una palabra que es a m\u00ed bueno o sea es polic\u00e9mica yo puedo tener una vela para aprender una vela de la velita de cumplea a\u00f1os o sea una pag\u00f3n o puedo tener un barco a vela y bueno en los dos casos tengo la misma representaci\u00f3n o el gato hidr\u00e1ulico y el gato animal tambi\u00e9n tengo la misma representaci\u00f3n el banco de sentarse y el banco de financiero tambi\u00e9n con la misma representaci\u00f3n etc\u00e9tera entonces eso es un problema y bien estos estas t\u00e9cnicas y es que yo no tengo digamos no estoy usando por ejemplo guarnet que vienen guarnet a su una acci\u00f3n es clase no no tengo un repositorio significado de guarnet que me ayud\u00e9 a decir cu\u00e1les cual sino que ac\u00e1 solamente tengo un representante para cada palabra bien y bueno esta t\u00e9cnica tiene ese problema despu\u00e9s hay otras t\u00e9cnicas me permiten crear vectores contextuales que bueno es la palabra gato en esta oraci\u00f3n donde probablemente sea un gato animal y no un gato hidr\u00e1ulico cosas as\u00ed bien entonces una vez que construimos esta colecci\u00f3n de vectores como los evaluamos c\u00f3mo sabemos si est\u00e1n bien bueno hay como dos formas de evaluarlos bastante comunes se habla de test intr\u00ednsecos y test en extr\u00ednsecos que significan cosas distintas intr\u00ednsecos significa yo mido propiedad es del conjunto de vectores que constru\u00ed entonces una de las que se mide en es exactamente lo que dec\u00eda no reci\u00e9n med\u00edamos que aparece una propia que es que yo puedo hacer dibujar como una especie para el logramos en el cual digo que hombres a mujer como rey esa y espero que en mi colecci\u00f3n de vectores haya quedado reina digamos como resultado de la operaci\u00f3n o uruguay esa montevideo como Francia y espero que haya quedado paris en ese lugar entonces bueno una forma de evaluar estos estos sistemas es construir una colecci\u00f3n grande de estos test se llaman test de analog\u00edas entonces me puedo hacer una colecci\u00f3n de grandes estos test y ver a cu\u00e1ntos le moca mi colecci\u00f3n entonces tengo varias colecciones en ve distinta veo que este le invoco m\u00e1s veces y de lo invoco menos veces otros son los tests de similitud o similiaridad que estos se hacen con intervenci\u00f3n humana un poco m\u00e1s fuerte que es preguntarlo un mont\u00f3n de personas por ejemplo que es m\u00e1s parecido a Honduras no una silla o una mesa o una manzana o una bestruso o cosas de estilo entonces dale dice en la gente trata de arranquear esta cuatro cinco palabras de cu\u00e1l es m\u00e1s parecida menos parecida entonces le preguntaron un mont\u00f3n de personas las personas hacen sus listas y despu\u00e9s miras dentro de tu colecci\u00f3n de vectores si las distancias regrativas entre esas palabras son similares o no a la que esperaban los humanos entonces cuanto m\u00e1s similares se hacen el test de espirman para eso el test de correlaci\u00f3n de espirman se puede sacar una medida de qu\u00e9 tanto se parece a la intuici\u00f3n humana lo que el sistema dice eso es la mont\u00e9s intr\u00ednsecos pues yo estoy abarrando en la colecci\u00f3n de vectores que constru\u00ed y la estoy testiando sola los testes extr\u00ednsecos se refieren a agarro mi colecci\u00f3n de vectores y la meto en una tarea de peleen en un poco m\u00e1s grande y veo que tal le va entonces ac\u00e1 significa bueno yo supongo que tengo un sistema de peleen que hace traducci\u00f3n autom\u00e1tica o analisis de sentimiento o recuperaci\u00f3n de informaci\u00f3n o un chat bot o lo que sea si yo tengo un sistema que ya funciona y le cambio su capa de medings su colecci\u00f3n de vectores por la m\u00eda que yo entren\u00e9 y el sistema mejora en superformas entonces digo que puedo decir que mi colecci\u00f3n de vectores mejoro la performance esto es puedo decir que la colecci\u00f3n de vectores buena eso de llamas test extr\u00ednsecos se ha no estoy probando directamente las propiedades de los en vectores y no que estoy probando c\u00f3mo se comportan en un sistema m\u00e1s grande bien entonces otra forma de evaluar esto m\u00e1s bien no creo que lleguen a ver nada porque est\u00e1 muy chiquito pero bueno vamos a mencionarlo es visualizar los en vectores recuerden que esto ten\u00eda de dimensi\u00f3n 100, 350 que era una dimensi\u00f3n mucho m\u00e1s chica que el vocabulario pero igual es una dimensi\u00f3n muy grande o sea los humanos podemos visualizar dos 3 dimensiones a los humos m\u00e1s de eso ya nos mariamos y estos son vectores de 300 dimensiones pero una forma de visualizar los es usar las t\u00e9cnicas de reducciones dimensionalidad por ejemplo PCR y TSNS son de las m\u00e1s comunes son t\u00e9cnicas que me permiten agarrar 300 dimensiones y bajar las 2 para poder dibujarlo en un plano entonces ac\u00e1 no llegan a ver, estos son dos trabajos que hicimos en el grupo para distintos colecciones de en veintis en distintos idiomas voy a arreglar esto as\u00ed s\u00ed queda bien entonces en este tenemos un trabajo hecho para el espa\u00f1ol son vectores de palabras en espa\u00f1ol y tal y no van a llegar a verlo lo que est\u00e1n ac\u00e1 porque se es muy chiquito pero por ejemplo ac\u00e1 aparece un claster de a\u00f1os que est\u00e1n todos juntos ac\u00e1 aparecen nombres de personas que est\u00e1n todos juntos abajo aparece en lugares pero Uruguay, Bolivia que aparecen como clasterizados todos juntos entonces es una espera que una colecci\u00f3n de vectores que haya quedado bien entrenada aparecen como clasters con cosas que son semanficamente similares y el trabajo de la derecha es un trabajo similares pero que est\u00e1 yo para igual a ni y bueno ya que se ve tambi\u00e9n m\u00e1s claro que aparecen cosas como relacionadas con fechas est\u00e1n enero las relacionadas con colores est\u00e1n en encian las relacionadas con no se bien que hay a animales est\u00e1n en verde etc\u00e9tera pa\u00edses est\u00e1n en azul etc\u00e9tera como que no puede estar en esas regiones obviamente esto no es perfecto en a que algunas cosas por fuera etc\u00e9tera pero si uno logra ver que m\u00e1s o menos se clasterizan entonces tiene como cierta cidadan tuici\u00f3n de que andan mejor y sus efectores bien preguntas entonces los g\u00f3rden veings fueron en definitiva una de las primeras revoluciones que ocurrieron los \u00faltimos a\u00f1os lo cual es peleene y posible que despu\u00e9s siempre empezaron a utilizar arquitecturas arredas m\u00e1s complejas o sea gracias a que tenemos en medings y decimos puedo representar una palabra como un vector de 300 dimensiones ese vector de 300 dimensiones que son numeros reales se lo puedo enchufar como entrada a una red neuronal y puedo obtener cosas m\u00e1s complicadas a m\u00ed me interesaba de hace un rato dijimos tener representaciones de palabras pero adem\u00e1s de oraciones o de tweets o de documentos enteros y bueno por lo menos yo tengo representaci\u00f3n de palabras no usando bora en medings como que eso est\u00e1 bastante bien resuelto y gracias a que ahora tengo bora en medings puede usar arquitecturas m\u00e1s complejas como las redes como lusionales las redes LCDM y las redes tipo transformers que los transformers son lo que m\u00e1s utiliza bien d\u00eda pero adem\u00e1s puedo hacer una cosa en los embedings algo un poco m\u00e1s simple pero que a su vez me sirve para resolver estos problemas y es usar la t\u00e9cnica de Centroide que es as\u00ed est\u00e1 les va a servir en la tarea salvo y quieren entrenar una red m\u00e1s compleja que tambi\u00e9n son bienvenidos y quieren entrenar una LCDM en un transformer pero el Centroide es una t\u00e9cnica es muy sencilla supongo que yo tengo mi capa de embedings que tiene bueno dice que eso se lo presenta as\u00ed a hamburguesa de representaci\u00f3n pero es as\u00ed el gato es as\u00ed etc\u00e9tera tengo vectors para cada palabra y tengo ahora un tweet que quiere representar utilizando la colecci\u00f3n de embedings yo simplemente puedo agarrar todas las palabras del tweet buscar todos los vectors correspondientes y hacer el promedio a eso de llamar a ser un Centroide de todos los embedings del tweet y no dice esta apreciado el promedio de perro o gato no se al tweet dice no me gust\u00f3 la pel\u00edcula se va el promedio no me gust\u00f3 la pel\u00edcula de un promedio todo el embeding me dear papapafrita pero sin embargo funcionos bastante bien es es como un poco antintuitivo pero hacer el promedio todas esas 300 dimensiones de las distintas palabras despu\u00e9s yo utiliz\u00f3 eso como entrada para otro otro sistema de clasificaci\u00f3n no s\u00f3lo arrenornal sino que hay que utilizar otro otro tipo de cosas como su proyecto no haciens o relaci\u00f3n log\u00edstica y anda bastante bien o sea es como extra\u00f1o pero sobre todo el problema de an\u00e1lisis sentimiento anda bastante bien bueno esa la t\u00e9cnica del Centroide es una t\u00e9cnica f\u00e1cil decir si yo tengo una colecci\u00f3n de embedings puedo hacerme embedings de oraciones o embedings de textos un poco m\u00e1s grandes simplemente promediendo los embedings que tengo bien entonces ahora lo que vamos a ver en el resto de la clase en unos minutos son ejemplos de c\u00f3mo funcionan estas arquitecturas m\u00e1s complejas que puedo utilizar gracias a que tengo embedings no les vamos a ver en profundidad sino que simplemente vamos a pasar por arriba pero es una idea para ver qu\u00e9 clase de cosas se pueden hacer y empezamos por las como lutivas las redes tipos en N se llaman redes como lutivas o como lusionales y originalmente se utilizaban como para procesar im\u00e1genes o sea tambi\u00e9n se utilizan estoy en d\u00eda para procesar im\u00e1genes y lo que hacen es ir recorriendo como que segmenta una imagen en cuadraditos y lo van recorriendo digamos y despu\u00e9s obtienen como informaci\u00f3n de cada uno de los cuadraditos bueno pero tambi\u00e9n se han aplicado al lenguaje y la forma que se aplican lenguaje es como decir batomando de enegramas y va viendo yo que es por ejemplo tres palabras a la vez y va obteniendo datos de cada una de las tres palabras a la vez y despu\u00e9s con eso despu\u00e9s saca un total entonces lo interesante es que digamos puedo pasar a tener cosas de orden m\u00e1s grande que una palabra no o sea ahora en bebrosa una sola palabra estoy produzando toda una oraci\u00f3n entonces tienes una pregunta bien entonces un ejemplo como funciona esto supongamos que estoy tratando de clasificar Twitch y digo la pel\u00edcula fue muy aburrida yo me puedo construir una red neuronal de tipo convolutiva que lo que va a ser es decir bueno a los en beings de la de a tres palabras los voy tomando de tres palabras considero los en beings de la pel\u00edcula fue y a esos tres en beings se los paso a una red a esa esa unidad convolutiva que lo que va a ser es mirar estras tres palabras y tratar de sacar informaci\u00f3n de las tres y devolverme una cosa que tenga ciertos tama\u00f1os fijo y despu\u00e9s se va a mover la ventana y en vez de la pel\u00edcula fue va a considerar las palabras pel\u00edculas fue muy y devuelta lo va a pasar por esa subred y va a tratar de sacar salidas y despu\u00e9s fue muy aburrida lo va a pasar por la misma subred tratar de sacar salidas despu\u00e9s voy a tener una capa que dice bueno de todas estas salidas intermedia que tuve obtengon los m\u00e1ximos y esos m\u00e1ximos los usos para que alcular mi salida que mi salida final ser\u00eda positivo negativo neutro o no no estas redes esta capa como le tiva que que all\u00ed en el medio parece como capa como le tiva entonces a sus redes que estoy viendo ah\u00ed en realidad son los mismos pesos no es como la misma que se va moviendo y me va dando resultados distintos bien entonces lo bueno que tienes que llevar todo una entrada que son muchas palabras y me va a dar una salida \u00fanica digamos condensa todas las palabras se queda como con las digamos las dimensiones m\u00e1ximas de cada una que les quede m\u00e1s la inter\u00e9s en y con eso que va a ir con una salida bien esas la red tipo convolutiva las redes el ctm pertenecen a un grupo m\u00e1s grande de redes que se llama las redes recurrentes que significas son redes con memoria que van mirando a cada palabra a la vez y van recordando lo que viene hasta el momento entonces esto me sirve para obtener una salida final o tambi\u00e9n para obtener salidas por palabra entonces vamos a ver como funciona de estas esto como una especie de diagrama de c\u00f3mo ser\u00eda una recurrente similar a la que ve\u00edamos hace un rato digamos en capas pero ahora yo voy a tener una capa que tiene una lacesa s\u00ed misma digamos todas las neuronas de esa capa van a tener un enlace de vuelta de vuelta hacia s\u00ed misma se llama capa recurrente y bueno despu\u00e9s voy a tener una capa de salida entonces cuando yo voy a ver como funciona eso con un tweet que quiero clasificar como la pel\u00edcula fue muy aburrida funcionar\u00eda esta manera yo digo bueno primero agarr\u00f3 la palabra la el embedding de la palabra la se lo paso a la red y despu\u00e9s voy a agarrar el embedding de la palabra pel\u00edcula de se lo paso de vuelta de la red pero esta vez adem\u00e1s de poner el embedding de la palabra pel\u00edcula voy a poner tambi\u00e9n la salida del paso anterior entonces esto va consumiendo una palabra a la vez y siempre consumiendo la salida de la capa anterior entonces va consumiendo la pel\u00edcula fue muy aburrida cuando lleg\u00f3 aburrida ya consumi\u00f3 las salidas de todas las capas anteriores y la palabra nueva y ah\u00ed es como que la salida ese \u00faltimo paso ya me dio tiene como una especie de versi\u00f3n condensada de todo lo que era la la versi\u00f3n y ah\u00ed con esos \u00faltimos pesos calcule la salida positivo negativo neutro o no adem\u00e1s si yo quisiera podr\u00eda ir sacando para ir sacando los pesos de cada una de las salidas entonces ah\u00ed tendr\u00eda como una salida por palabra entonces esto podr\u00eda ser un ejemplo por ejemplo para los problemas de clasificaci\u00f3n de secuencia que debemos la vez pasada bueno con una red de este estilo se puede hacer la clasificaci\u00f3n de secuencia sacando una salida por palabra si ten\u00edas una pregunta el embedding exact si la entrada en esto caso yo digo bueno a sumo que tengo por remains yo ya puedo utilizar estas redes m\u00e1s complejas bien y la que es la arquitectura del estado del arte hoy en d\u00eda es la arquitectura de tipo transformer que tambi\u00e9n es una arquitectura que utiliza secuencias de entrada pero es una arquitectura bastante m\u00e1s compleja ac\u00e1 vamos a ver solamente una idea muy b\u00e1sica como funciona pero es una arquitectura que tengo muchos pedazos y hace muchas cosas distintas y bueno el se basa en una cosa de llamas tapas autotensionales ahora no vamos a ver qu\u00e9 es el modelo autotensional pero lo vamos a ver la clase que viene no lo emente como bueno un ejemplo de c\u00f3mo funciona el sistema de traducci\u00f3n autom\u00e1tica que utiliza modelos autotensionales bueno una variante de eso es el modelo autotensional que lo que hace construir una matriz entre las palabras de una oraci\u00f3n y s\u00ed misma no se tengo una oraci\u00f3n que tiene ene palabras y va a tratar de cruzar las ene palabras con las propias ene palabras y tratar de establecer conexiones entre cada uno de los pares entonces termina calculando una matriz y lo bueno que tiene es que me permite construir en vez de contextuales por palabra o sea en vez de una palabra vista en contexto y adem\u00e1s una en vez de total de la oraci\u00f3n entonces funcionan m\u00e1s o menos as\u00ed esto es como una especie de representaci\u00f3n muy vaga de lo que es un transformer no se transformen en realidad tiene como muchas partes m\u00e1s complejas pero imag\u00ednense que funciona esta manera no yo digo tengo la oraci\u00f3n la pel\u00edcula fue muy aburrida entonces la voy a pasar por una capa autotensional que significa yo cruzo todas las palabras con todas y calculo la relevancia de cada palabra contra las dem\u00e1s eso me va a dar una serie de salidas y eso de lo que hace es construirme como una colecci\u00f3n de env\u00e9ns de nivel 1, o sea yo empec\u00e9 con los bordes env\u00e9ns de la pel\u00edcula fue muy aburrida y ahora voy a tener una colecci\u00f3n de env\u00e9n de nivel 1 que ya mirando algo de contexto eso es env\u00e9n de nivel 1 a su vez de los paso de vuelta a otra capa autotensional que de vuelta a los cruz a todos con todos y me debo dar una salida que son los env\u00e9ns de nivel 2 y eso lo sigo pasando por varias capas autotensionales que los cruzan todos con todos hasta que al final me terminan dando lo o sea lo voy a pasar en el capas y me terminan dando una salida de nivel 5 digamos entonces al inicio de nida guarden v\u00e9ns que miraban solamente una palabra a la vez y lo que tengo al final ya son como en veis contextuales en los cuales ya considero varias veces cruzar todas las palabras con todas entonces como que eso va ganando informaci\u00f3n en cada paso a su vez a bien despu\u00e9s que yo tengo estos en veis contextuales en general si utiliza otra red m\u00e1s de tipo de coder puede ser un tanforo de puede ser una lctm algo m\u00e1s pero necesito otra cosa que es la que me diga por ejemplo hacia el positivo o negativo en el otro etc\u00e9tera pero es otro tipo de red que despu\u00e9s de codificas en formaci\u00f3n pero bueno por lo menos hasta ac\u00e1 yo ya constru\u00ed en medings de cosas pero bien lo que tengo ac\u00e1 son ten\u00eda la pel\u00edcula fue muy aburrida y eso lo transform\u00e9 en tenia cinco palabras y lo transform\u00e9 en cinco en medings digamos que de distintos niveles pero siempre son cinco en medings entonces yo dir\u00eda que el primero se corresponde con la el segundo con pel\u00edcula tercero con fue es una una versi\u00f3n contextual del en medings porque significa la palabra pel\u00edcula en el contexto de la pel\u00edcula fue muy aburrida no es la palabra pel\u00edcula en general entonces yo tuviera una relaci\u00f3n que tiene gato ser\u00eda gato en el contexto del gato como he pescado que no ser\u00eda lo mismo que cuando estoy hablando en un gato y verablico probablemente o sea los en veintiendes bien pero adem\u00e1s me interesa tener una representaci\u00f3n de la oraci\u00f3n entera y para eso lo que se hace es agregar un toque en extra un toque en llamado CLS se pone al principio de la oraci\u00f3n y se lo hace jugar con todos los las capas atencionales del medio entonces yo tengo una palabra extra que como no es una palabra de la oraci\u00f3n no tiene un en veint contexto al sino lo que hace es capturar la informaci\u00f3n de la oraci\u00f3n en la vez entonces ese en veint que me queda afuera el en veint que corresponde al el toque en CLS ese que despu\u00e9s yo podr\u00e9 utilizar para predecir cosas yo lo utilizo como un en veint que tiene cierto tama\u00f1o y se lo paso una capa de dos max para que me prediga as\u00ed esa oraci\u00f3n es positivo negativo en neutra o no bien bueno y para terminar comentarles los tipo de herramientas que pueden utilizar para trabajar con reneunales obviamente para el segundo laboratorio o una poder utilizar reneunales si quieren de todo tipo si quieren colecciones en veints no sus amigos podemos dar o pueden bajar algunas que est\u00e9n disponibles en la web pero bueno herramientas habitual para trabajar con estos son por ejemplo tensorflow y paitor que son dos y los tecas tensorflow de Google y paitor es de meta o de facebook y bueno queras general trabajar un tercer flow y jagging face es un repositorio que tengo un mont\u00f3n de modelos ya prendrenados para muchos idiomas y para muchas cosas que ya se pueden utilizar autos de box y funcionan muy bien y bueno t\u00e1s son estas herramientas y otras m\u00e1s las van a poder utilizar el laboratorio bueno por hoy eso la pr\u00f3xima a\u00e9jamos a ver traducci\u00f3n autom\u00e1tica", "segments": [{"id": 0, "seek": 0, "start": 0.0, "end": 8.36, "text": " Bueno, bienvenidos en la clase de hoy, vamos a ver el tema de redes neuronales que, bueno, es como", "tokens": [50364, 16046, 11, 3610, 40668, 465, 635, 44578, 368, 13775, 11, 5295, 257, 1306, 806, 15854, 368, 16762, 34090, 4229, 631, 11, 11974, 11, 785, 2617, 50782], "temperature": 0.0, "avg_logprob": -0.3433822691440582, "compression_ratio": 1.789090909090909, "no_speech_prob": 0.18040861189365387}, {"id": 1, "seek": 0, "start": 8.36, "end": 13.200000000000001, "text": " digamos el estado del arte, lo que son las cosas de procesamiento de lenguaje natural en general hoy en", "tokens": [50782, 36430, 806, 18372, 1103, 29159, 11, 450, 631, 1872, 2439, 12218, 368, 17565, 16971, 368, 35044, 84, 11153, 3303, 465, 2674, 13775, 465, 51024], "temperature": 0.0, "avg_logprob": -0.3433822691440582, "compression_ratio": 1.789090909090909, "no_speech_prob": 0.18040861189365387}, {"id": 2, "seek": 0, "start": 13.200000000000001, "end": 19.240000000000002, "text": " d\u00eda se resolven con redes neuronales. Entonces, es un poco para continuar con lo que deb\u00edamos", "tokens": [51024, 12271, 369, 7923, 553, 416, 16762, 34090, 4229, 13, 15097, 11, 785, 517, 10639, 1690, 29980, 416, 450, 631, 3001, 16275, 51326], "temperature": 0.0, "avg_logprob": -0.3433822691440582, "compression_ratio": 1.789090909090909, "no_speech_prob": 0.18040861189365387}, {"id": 3, "seek": 0, "start": 19.240000000000002, "end": 23.8, "text": " ya vez pasado, \u00bfno? Hab\u00edamos visto metos de clasificaci\u00f3n, hab\u00edamos visto que hab\u00eda algunos para", "tokens": [51326, 2478, 5715, 24794, 11, 3841, 1771, 30, 14225, 16275, 17558, 1131, 329, 368, 596, 296, 40802, 11, 3025, 16275, 17558, 631, 16395, 21078, 1690, 51554], "temperature": 0.0, "avg_logprob": -0.3433822691440582, "compression_ratio": 1.789090909090909, "no_speech_prob": 0.18040861189365387}, {"id": 4, "seek": 0, "start": 23.8, "end": 28.080000000000002, "text": " clasificar cosas en categor\u00eda, sab\u00eda algunos secuenciales, sab\u00eda algunos que llam\u00e1bamos", "tokens": [51554, 596, 296, 25625, 12218, 465, 19250, 2686, 11, 5560, 2686, 21078, 907, 7801, 1013, 279, 11, 5560, 2686, 21078, 631, 16848, 27879, 2151, 51768], "temperature": 0.0, "avg_logprob": -0.3433822691440582, "compression_ratio": 1.789090909090909, "no_speech_prob": 0.18040861189365387}, {"id": 5, "seek": 2808, "start": 28.08, "end": 33.6, "text": " los modelos de lenguaje? Y de los m\u00e9todos de clasificaci\u00f3n en realidad vimos en profundidad", "tokens": [50364, 1750, 2316, 329, 368, 35044, 84, 11153, 30, 398, 368, 1750, 20275, 378, 329, 368, 596, 296, 40802, 465, 25635, 49266, 465, 40958, 4580, 50640], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 6, "seek": 2808, "start": 33.6, "end": 37.56, "text": " nadie vayes, pero vimos que hab\u00eda otro, por ejemplo, a la decisi\u00f3n, regresi\u00f3n log\u00edstica,", "tokens": [50640, 28060, 371, 320, 279, 11, 4768, 49266, 631, 16395, 11921, 11, 1515, 13358, 11, 257, 635, 18206, 2560, 11, 47108, 2560, 3565, 19512, 2262, 11, 50838], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 7, "seek": 2808, "start": 37.56, "end": 44.72, "text": " su perfecto machines y redes neuronales. Y para los m\u00e9todos secuenciales tambi\u00e9n aparec\u00eda las", "tokens": [50838, 459, 2176, 78, 8379, 288, 16762, 34090, 4229, 13, 398, 1690, 1750, 20275, 378, 329, 907, 7801, 1013, 279, 6407, 15004, 31298, 2439, 51196], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 8, "seek": 2808, "start": 44.72, "end": 47.68, "text": " reuniones neuronales para los modelos de lenguaje tambi\u00e9n aparec\u00eda las reuniones neuronales.", "tokens": [51196, 14480, 5411, 34090, 4229, 1690, 1750, 2316, 329, 368, 35044, 84, 11153, 6407, 15004, 31298, 2439, 14480, 5411, 34090, 4229, 13, 51344], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 9, "seek": 2808, "start": 47.68, "end": 50.28, "text": " Entonces, como que las redes neuronales son un m\u00e9todo muy importante que es muy", "tokens": [51344, 15097, 11, 2617, 631, 2439, 16762, 34090, 4229, 1872, 517, 20275, 17423, 5323, 9416, 631, 785, 5323, 51474], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 10, "seek": 2808, "start": 50.28, "end": 54.12, "text": " versatile y se usa para muchas cosas. Entonces, nos vamos a concentrar un poco, vamos a dar", "tokens": [51474, 25057, 288, 369, 29909, 1690, 16072, 12218, 13, 15097, 11, 3269, 5295, 257, 5512, 5352, 517, 10639, 11, 5295, 257, 4072, 51666], "temperature": 0.0, "avg_logprob": -0.34432578251279633, "compression_ratio": 1.9265734265734267, "no_speech_prob": 0.08710426837205887}, {"id": 11, "seek": 5412, "start": 54.12, "end": 58.68, "text": " clas una introducci\u00f3n a lo que son las redes y adem\u00e1s ver c\u00f3mo se usan particularmente", "tokens": [50364, 596, 296, 2002, 2814, 14735, 257, 450, 631, 1872, 2439, 16762, 288, 21251, 1306, 12826, 369, 505, 282, 1729, 4082, 50592], "temperature": 0.0, "avg_logprob": -0.32993441772460935, "compression_ratio": 1.5992779783393503, "no_speech_prob": 0.08985099196434021}, {"id": 12, "seek": 5412, "start": 58.68, "end": 62.879999999999995, "text": " para el lenguaje. O sea, vamos a ver las t\u00e9cnicas de hevectores de palabras y, bueno,", "tokens": [50592, 1690, 806, 35044, 84, 11153, 13, 422, 4158, 11, 5295, 257, 1306, 2439, 25564, 40672, 368, 415, 303, 1672, 279, 368, 35240, 288, 11, 11974, 11, 50802], "temperature": 0.0, "avg_logprob": -0.32993441772460935, "compression_ratio": 1.5992779783393503, "no_speech_prob": 0.08985099196434021}, {"id": 13, "seek": 5412, "start": 62.879999999999995, "end": 67.47999999999999, "text": " c\u00f3mo aplicar eso a precisamente el lenguaje natural. Entonces, \u00bfc\u00f3mo empieza esto?", "tokens": [50802, 12826, 18221, 289, 7287, 257, 44901, 806, 35044, 84, 11153, 3303, 13, 15097, 11, 3841, 46614, 44577, 7433, 30, 51032], "temperature": 0.0, "avg_logprob": -0.32993441772460935, "compression_ratio": 1.5992779783393503, "no_speech_prob": 0.08985099196434021}, {"id": 14, "seek": 5412, "start": 67.47999999999999, "end": 72.32, "text": " Esto empieza inspirado en esto de ac\u00e1, que es una neurona biol\u00f3gica, \u00bfno? Esto lo habr\u00e1n", "tokens": [51032, 20880, 44577, 17432, 1573, 465, 7433, 368, 23496, 11, 631, 785, 2002, 12087, 4037, 3228, 27629, 2262, 11, 3841, 1771, 30, 20880, 450, 32794, 7200, 51274], "temperature": 0.0, "avg_logprob": -0.32993441772460935, "compression_ratio": 1.5992779783393503, "no_speech_prob": 0.08985099196434021}, {"id": 15, "seek": 5412, "start": 72.32, "end": 80.12, "text": " visto en el deseo, en biolog\u00eda. Una neurona es un tipo de c\u00e9lula del sistema nervioso", "tokens": [51274, 17558, 465, 806, 27118, 78, 11, 465, 3228, 29987, 13, 15491, 12087, 4037, 785, 517, 9746, 368, 29064, 3780, 1103, 13245, 5724, 23540, 51664], "temperature": 0.0, "avg_logprob": -0.32993441772460935, "compression_ratio": 1.5992779783393503, "no_speech_prob": 0.08985099196434021}, {"id": 16, "seek": 8012, "start": 80.12, "end": 86.88000000000001, "text": " de los animales, que tiene distintas partes, como se puede ver ah\u00ed, bueno, s\u00ed, voy a", "tokens": [50364, 368, 1750, 45102, 11, 631, 7066, 31489, 296, 31210, 11, 2617, 369, 8919, 1306, 12571, 11, 11974, 11, 8600, 11, 7552, 257, 50702], "temperature": 0.0, "avg_logprob": -0.49506321131626024, "compression_ratio": 1.8217821782178218, "no_speech_prob": 0.13221997022628784}, {"id": 17, "seek": 8012, "start": 86.88000000000001, "end": 94.32000000000001, "text": " apuntar, voy a apuntar. Abo que era con esto. Hay, tiene distintas partes, tiene como", "tokens": [50702, 1882, 2760, 289, 11, 7552, 257, 1882, 2760, 289, 13, 316, 1763, 631, 4249, 416, 7433, 13, 8721, 11, 7066, 31489, 296, 31210, 11, 7066, 2617, 51074], "temperature": 0.0, "avg_logprob": -0.49506321131626024, "compression_ratio": 1.8217821782178218, "no_speech_prob": 0.13221997022628784}, {"id": 18, "seek": 8012, "start": 94.32000000000001, "end": 98.88000000000001, "text": " uno es un nos pelitos que entran dentro del cuerpo de neurona que se llama tendridas y despu\u00e9s tiene", "tokens": [51074, 8526, 785, 517, 3269, 6178, 11343, 631, 948, 4257, 10856, 1103, 20264, 368, 12087, 4037, 631, 369, 23272, 3928, 81, 11382, 288, 15283, 7066, 51302], "temperature": 0.0, "avg_logprob": -0.49506321131626024, "compression_ratio": 1.8217821782178218, "no_speech_prob": 0.13221997022628784}, {"id": 19, "seek": 8012, "start": 98.88000000000001, "end": 104.72, "text": " como una especie de cola que sale de la neurona que se llama Axon y, bueno, atacan el centro,", "tokens": [51302, 2617, 2002, 49368, 368, 40495, 631, 8680, 368, 635, 12087, 4037, 631, 369, 23272, 20118, 266, 288, 11, 11974, 11, 41015, 282, 806, 24607, 11, 51594], "temperature": 0.0, "avg_logprob": -0.49506321131626024, "compression_ratio": 1.8217821782178218, "no_speech_prob": 0.13221997022628784}, {"id": 20, "seek": 10472, "start": 104.72, "end": 111.36, "text": " tenemos lo que ser\u00eda el cuerpo de la neurona, el soma. Entonces, en esas por esas", "tokens": [50364, 9914, 450, 631, 23679, 806, 20264, 368, 635, 12087, 4037, 11, 806, 3307, 64, 13, 15097, 11, 465, 23388, 1515, 23388, 50696], "temperature": 0.0, "avg_logprob": -0.36662658485206395, "compression_ratio": 1.8442622950819672, "no_speech_prob": 0.06403525918722153}, {"id": 21, "seek": 10472, "start": 111.36, "end": 117.36, "text": " de enritas vienen impulsos el\u00e9ctricos, las de enritas act\u00faan como inhibidores o activadores,", "tokens": [50696, 368, 465, 3210, 296, 49298, 704, 9468, 329, 806, 526, 349, 1341, 329, 11, 2439, 368, 465, 3210, 296, 605, 2481, 282, 2617, 20406, 38835, 277, 2430, 11856, 11, 50996], "temperature": 0.0, "avg_logprob": -0.36662658485206395, "compression_ratio": 1.8442622950819672, "no_speech_prob": 0.06403525918722153}, {"id": 22, "seek": 10472, "start": 117.36, "end": 122.75999999999999, "text": " pero vienen impulsos el\u00e9ctricos, esos se condensan a dentro del soma que se el cuerpo y,", "tokens": [50996, 4768, 49298, 704, 9468, 329, 806, 526, 349, 1341, 329, 11, 22411, 369, 2224, 694, 282, 257, 10856, 1103, 3307, 64, 631, 369, 806, 20264, 288, 11, 51266], "temperature": 0.0, "avg_logprob": -0.36662658485206395, "compression_ratio": 1.8442622950819672, "no_speech_prob": 0.06403525918722153}, {"id": 23, "seek": 10472, "start": 122.75999999999999, "end": 126.32, "text": " si se supera, cierta un braal y actividad el\u00e9ctrica, entonces ya le urona dispara un solo", "tokens": [51266, 1511, 369, 1687, 64, 11, 39769, 1328, 517, 1548, 304, 288, 605, 33490, 806, 526, 349, 15192, 11, 13003, 2478, 476, 4038, 4037, 14548, 64, 517, 6944, 51444], "temperature": 0.0, "avg_logprob": -0.36662658485206395, "compression_ratio": 1.8442622950819672, "no_speech_prob": 0.06403525918722153}, {"id": 24, "seek": 10472, "start": 126.32, "end": 132.07999999999998, "text": " punto, pues el Axon, un solo impulso el\u00e9ctrico, pues el Axon, lo manda hacia afuera. Y ese", "tokens": [51444, 14326, 11, 11059, 806, 20118, 266, 11, 517, 6944, 704, 9468, 78, 806, 526, 349, 23776, 11, 11059, 806, 20118, 266, 11, 450, 7411, 64, 21365, 3238, 84, 1663, 13, 398, 10167, 51732], "temperature": 0.0, "avg_logprob": -0.36662658485206395, "compression_ratio": 1.8442622950819672, "no_speech_prob": 0.06403525918722153}, {"id": 25, "seek": 13208, "start": 132.08, "end": 138.72000000000003, "text": " Axon est\u00e1 conectado a otras de enritas que est\u00e1n en otras de bronas. Entonces, esto tiene", "tokens": [50364, 20118, 266, 3192, 30458, 1573, 257, 20244, 368, 465, 3210, 296, 631, 10368, 465, 20244, 368, 16586, 296, 13, 15097, 11, 7433, 7066, 50696], "temperature": 0.0, "avg_logprob": -0.2997014943291159, "compression_ratio": 1.9467213114754098, "no_speech_prob": 0.06727731972932816}, {"id": 26, "seek": 13208, "start": 138.72000000000003, "end": 144.44, "text": " un mont\u00f3n de entradas, se condensan en el cuerpo de la c\u00e9lula de la neurona dispara un solo", "tokens": [50696, 517, 45259, 368, 948, 48906, 11, 369, 2224, 694, 282, 465, 806, 20264, 368, 635, 29064, 3780, 368, 635, 12087, 4037, 14548, 64, 517, 6944, 50982], "temperature": 0.0, "avg_logprob": -0.2997014943291159, "compression_ratio": 1.9467213114754098, "no_speech_prob": 0.06727731972932816}, {"id": 27, "seek": 13208, "start": 144.44, "end": 148.08, "text": " pulso el\u00e9ctrico para afuera y ese pulso el\u00e9ctrico viaja a otras neuronas. Entonces, como", "tokens": [50982, 8331, 539, 806, 526, 349, 23776, 1690, 3238, 84, 1663, 288, 10167, 8331, 539, 806, 526, 349, 23776, 5766, 2938, 257, 20244, 34090, 296, 13, 15097, 11, 2617, 51164], "temperature": 0.0, "avg_logprob": -0.2997014943291159, "compression_ratio": 1.9467213114754098, "no_speech_prob": 0.06727731972932816}, {"id": 28, "seek": 13208, "start": 148.08, "end": 152.92000000000002, "text": " esas neuronas est\u00e1n conectadas en una especie de red, cada ex\u00f3n de una neurona est\u00e1 conectaba", "tokens": [51164, 23388, 34090, 296, 10368, 30458, 6872, 465, 2002, 49368, 368, 2182, 11, 8411, 454, 1801, 368, 2002, 12087, 4037, 3192, 30458, 5509, 51406], "temperature": 0.0, "avg_logprob": -0.2997014943291159, "compression_ratio": 1.9467213114754098, "no_speech_prob": 0.06727731972932816}, {"id": 29, "seek": 13208, "start": 152.92000000000002, "end": 158.32000000000002, "text": " las enritas de otras, entonces, la salida de una es la entrada de otras. Esto conforma una red dentro", "tokens": [51406, 2439, 465, 3210, 296, 368, 20244, 11, 13003, 11, 635, 1845, 2887, 368, 2002, 785, 635, 37119, 368, 20244, 13, 20880, 18975, 64, 2002, 2182, 10856, 51676], "temperature": 0.0, "avg_logprob": -0.2997014943291159, "compression_ratio": 1.9467213114754098, "no_speech_prob": 0.06727731972932816}, {"id": 30, "seek": 15832, "start": 158.32, "end": 162.68, "text": " del cerebro, o el sistema nervioso de los animales, y eso es lo que compoen en una", "tokens": [50364, 1103, 11643, 9120, 11, 277, 806, 13245, 5724, 23540, 368, 1750, 45102, 11, 288, 7287, 785, 450, 631, 715, 78, 268, 465, 2002, 50582], "temperature": 0.0, "avg_logprob": -0.4145440685656644, "compression_ratio": 1.7100371747211895, "no_speech_prob": 0.062442030757665634}, {"id": 31, "seek": 15832, "start": 162.68, "end": 167.35999999999999, "text": " reneuronal, en este caso una reneuronal natural, una reneuronal biol\u00f3gica. Entonces, en los", "tokens": [50582, 319, 716, 374, 21523, 11, 465, 4065, 9666, 2002, 319, 716, 374, 21523, 3303, 11, 2002, 319, 716, 374, 21523, 3228, 27629, 2262, 13, 15097, 11, 465, 1750, 50816], "temperature": 0.0, "avg_logprob": -0.4145440685656644, "compression_ratio": 1.7100371747211895, "no_speech_prob": 0.062442030757665634}, {"id": 32, "seek": 15832, "start": 167.35999999999999, "end": 174.28, "text": " a\u00f1os 40 se propuso la primera versi\u00f3n matem\u00e1tica, digamos, de c\u00f3mo funciona una neurona,", "tokens": [50816, 11424, 3356, 369, 2365, 24431, 635, 17382, 47248, 3803, 443, 23432, 11, 36430, 11, 368, 12826, 26210, 2002, 12087, 4037, 11, 51162], "temperature": 0.0, "avg_logprob": -0.4145440685656644, "compression_ratio": 1.7100371747211895, "no_speech_prob": 0.062442030757665634}, {"id": 33, "seek": 15832, "start": 174.28, "end": 178.84, "text": " entonces unos cient\u00edficos que, disjeron, bueno, vamos a tratar de simplificar este m\u00e1s posible,", "tokens": [51162, 13003, 17780, 37053, 329, 631, 11, 717, 14219, 266, 11, 11974, 11, 5295, 257, 42549, 368, 6883, 25625, 4065, 3573, 26644, 11, 51390], "temperature": 0.0, "avg_logprob": -0.4145440685656644, "compression_ratio": 1.7100371747211895, "no_speech_prob": 0.062442030757665634}, {"id": 34, "seek": 15832, "start": 178.84, "end": 183.88, "text": " a otra verlo y generar una versi\u00f3n en una ecuaci\u00f3n que trata de representar esto. Entonces,", "tokens": [51390, 257, 13623, 1306, 752, 288, 1337, 289, 2002, 47248, 465, 2002, 11437, 84, 3482, 631, 31920, 368, 2906, 289, 7433, 13, 15097, 11, 51642], "temperature": 0.0, "avg_logprob": -0.4145440685656644, "compression_ratio": 1.7100371747211895, "no_speech_prob": 0.062442030757665634}, {"id": 35, "seek": 18388, "start": 183.88, "end": 189.28, "text": " ellos dise\u00f1aron esta ecuaci\u00f3n de ac\u00e1. En la cual yo dice, bueno, vamos a cambiar esta neurona", "tokens": [50364, 16353, 3814, 2791, 6372, 5283, 11437, 84, 3482, 368, 23496, 13, 2193, 635, 10911, 5290, 10313, 11, 11974, 11, 5295, 257, 37738, 5283, 12087, 4037, 50634], "temperature": 0.0, "avg_logprob": -0.28541647104116585, "compression_ratio": 1.684981684981685, "no_speech_prob": 0.04407736659049988}, {"id": 36, "seek": 18388, "start": 189.28, "end": 194.32, "text": " biol\u00f3gica que ten\u00eda todas estas partes y vamos a crear una especie de neurona artificial,", "tokens": [50634, 3228, 27629, 2262, 631, 23718, 10906, 13897, 31210, 288, 5295, 257, 31984, 2002, 49368, 368, 12087, 4037, 11677, 11, 50886], "temperature": 0.0, "avg_logprob": -0.28541647104116585, "compression_ratio": 1.684981684981685, "no_speech_prob": 0.04407736659049988}, {"id": 37, "seek": 18388, "start": 194.32, "end": 200.28, "text": " en la cual yo tengo un conjunto de entradas, un conjunto de pesos de entrada que est\u00e1n ac\u00e1,", "tokens": [50886, 465, 635, 10911, 5290, 13989, 517, 37776, 368, 948, 48906, 11, 517, 37776, 368, 33204, 368, 37119, 631, 10368, 23496, 11, 51184], "temperature": 0.0, "avg_logprob": -0.28541647104116585, "compression_ratio": 1.684981684981685, "no_speech_prob": 0.04407736659049988}, {"id": 38, "seek": 18388, "start": 200.28, "end": 204.72, "text": " que vendr\u00edan a hacer el equivalente a las de enritas. Voy a tener impulso el\u00e9ctrico de", "tokens": [51184, 631, 10169, 81, 11084, 257, 6720, 806, 9052, 1576, 257, 2439, 368, 465, 3210, 296, 13, 25563, 257, 11640, 41767, 539, 806, 526, 349, 23776, 368, 51406], "temperature": 0.0, "avg_logprob": -0.28541647104116585, "compression_ratio": 1.684981684981685, "no_speech_prob": 0.04407736659049988}, {"id": 39, "seek": 18388, "start": 204.72, "end": 210.28, "text": " entrada que son como X1, X2, X3, hasta XC, que digamos que son los inputs que va a tener", "tokens": [51406, 37119, 631, 1872, 2617, 1783, 16, 11, 1783, 17, 11, 1783, 18, 11, 10764, 1783, 34, 11, 631, 36430, 631, 1872, 1750, 15743, 631, 2773, 257, 11640, 51684], "temperature": 0.0, "avg_logprob": -0.28541647104116585, "compression_ratio": 1.684981684981685, "no_speech_prob": 0.04407736659049988}, {"id": 40, "seek": 21028, "start": 210.28, "end": 215.64000000000001, "text": " esa neurona. Despu\u00e9s, en el centro lo que hago es sumarlos y en realidad lo que estoy sumando", "tokens": [50364, 11342, 12087, 4037, 13, 40995, 11, 465, 806, 24607, 450, 631, 38721, 785, 2408, 39734, 288, 465, 25635, 450, 631, 15796, 2408, 1806, 50632], "temperature": 0.0, "avg_logprob": -0.26730131192971734, "compression_ratio": 1.703971119133574, "no_speech_prob": 0.09888423979282379}, {"id": 41, "seek": 21028, "start": 215.64000000000001, "end": 222.2, "text": " es el producto entre cada impulso de entrada y el peso correspondiente. Tambi\u00e9n le voy a agregar", "tokens": [50632, 785, 806, 47583, 3962, 8411, 41767, 539, 368, 37119, 288, 806, 28149, 6805, 8413, 13, 25682, 476, 7552, 257, 4554, 2976, 50960], "temperature": 0.0, "avg_logprob": -0.26730131192971734, "compression_ratio": 1.703971119133574, "no_speech_prob": 0.09888423979282379}, {"id": 42, "seek": 21028, "start": 222.2, "end": 228.36, "text": " un valor de cejo y despu\u00e9s la salida le voy a pasar buena funci\u00f3n de activaci\u00f3n y eso me", "tokens": [50960, 517, 15367, 368, 1769, 5134, 288, 15283, 635, 1845, 2887, 476, 7552, 257, 25344, 25710, 43735, 368, 2430, 3482, 288, 7287, 385, 51268], "temperature": 0.0, "avg_logprob": -0.26730131192971734, "compression_ratio": 1.703971119133574, "no_speech_prob": 0.09888423979282379}, {"id": 43, "seek": 21028, "start": 228.36, "end": 232.96, "text": " va a la salida de la neurona. Bien, o sea, esta parte de las vamos a estar viendo en detalle.", "tokens": [51268, 2773, 257, 635, 1845, 2887, 368, 635, 12087, 4037, 13, 16956, 11, 277, 4158, 11, 5283, 6975, 368, 2439, 5295, 257, 8755, 34506, 465, 1141, 11780, 13, 51498], "temperature": 0.0, "avg_logprob": -0.26730131192971734, "compression_ratio": 1.703971119133574, "no_speech_prob": 0.09888423979282379}, {"id": 44, "seek": 21028, "start": 232.96, "end": 237.6, "text": " Pero en definitiva, es como que yo tuviera esta ecuaci\u00f3n de abajo, no? Yo tengo la sumatoria", "tokens": [51498, 9377, 465, 28781, 5931, 11, 785, 2617, 631, 5290, 38177, 10609, 5283, 11437, 84, 3482, 368, 30613, 11, 572, 30, 7616, 13989, 635, 2408, 1639, 654, 51730], "temperature": 0.0, "avg_logprob": -0.26730131192971734, "compression_ratio": 1.703971119133574, "no_speech_prob": 0.09888423979282379}, {"id": 45, "seek": 23760, "start": 237.6, "end": 245.4, "text": " de las entradas multiplicadas por pesos, a eso le sumo un cejo que se llama a ver y todo eso", "tokens": [50364, 368, 2439, 948, 48906, 17596, 6872, 1515, 33204, 11, 257, 7287, 476, 2408, 78, 517, 1769, 5134, 631, 369, 23272, 257, 1306, 288, 5149, 7287, 50754], "temperature": 0.0, "avg_logprob": -0.4132158016336375, "compression_ratio": 1.6299559471365639, "no_speech_prob": 0.0659053772687912}, {"id": 46, "seek": 23760, "start": 245.4, "end": 251.28, "text": " se lo aplico una funci\u00f3n sigma, que podemos saber un poco qu\u00e9 son esas funciones sigma. Entonces,", "tokens": [50754, 369, 450, 25522, 2789, 2002, 43735, 12771, 11, 631, 12234, 12489, 517, 10639, 8057, 1872, 23388, 1019, 23469, 12771, 13, 15097, 11, 51048], "temperature": 0.0, "avg_logprob": -0.4132158016336375, "compression_ratio": 1.6299559471365639, "no_speech_prob": 0.0659053772687912}, {"id": 47, "seek": 23760, "start": 251.28, "end": 257.4, "text": " bien que es una, digamos, es como una ecuaci\u00f3n lineal, o sea, la sumatoria ni de XC", "tokens": [51048, 3610, 631, 785, 2002, 11, 36430, 11, 785, 2617, 2002, 11437, 84, 3482, 1622, 304, 11, 277, 4158, 11, 635, 2408, 1639, 654, 3867, 368, 1783, 34, 51354], "temperature": 0.0, "avg_logprob": -0.4132158016336375, "compression_ratio": 1.6299559471365639, "no_speech_prob": 0.0659053772687912}, {"id": 48, "seek": 23760, "start": 257.4, "end": 264.52, "text": " por WSUI, m\u00e1s B, todo eso es una, digamos, una f\u00f3rmula lineal y a eso le agreg\u00f3 un sigma,", "tokens": [51354, 1515, 343, 20214, 40, 11, 3573, 363, 11, 5149, 7287, 785, 2002, 11, 36430, 11, 2002, 283, 15614, 76, 3780, 1622, 304, 288, 257, 7287, 476, 623, 3375, 812, 517, 12771, 11, 51710], "temperature": 0.0, "avg_logprob": -0.4132158016336375, "compression_ratio": 1.6299559471365639, "no_speech_prob": 0.0659053772687912}, {"id": 49, "seek": 26452, "start": 264.52, "end": 270.59999999999997, "text": " digamos, se lo aplico un sigma que esta va a ser una funci\u00f3n lineal. Bien, entonces, m\u00e1s adelante", "tokens": [50364, 36430, 11, 369, 450, 25522, 2789, 517, 12771, 631, 5283, 2773, 257, 816, 2002, 43735, 1622, 304, 13, 16956, 11, 13003, 11, 3573, 40214, 50668], "temperature": 0.0, "avg_logprob": -0.33791041937400035, "compression_ratio": 1.8372093023255813, "no_speech_prob": 0.02135511487722397}, {"id": 50, "seek": 26452, "start": 270.59999999999997, "end": 274.71999999999997, "text": " para simplificar esta ecuaci\u00f3n y para que despu\u00e9s que es m\u00e1s f\u00e1cil de calcular las cosas,", "tokens": [50668, 1690, 6883, 25625, 5283, 11437, 84, 3482, 288, 1690, 631, 15283, 631, 785, 3573, 17474, 368, 2104, 17792, 2439, 12218, 11, 50874], "temperature": 0.0, "avg_logprob": -0.33791041937400035, "compression_ratio": 1.8372093023255813, "no_speech_prob": 0.02135511487722397}, {"id": 51, "seek": 26452, "start": 274.71999999999997, "end": 279.88, "text": " lo que se hace es decir, bueno, este valor que venimos ac\u00e1 est\u00e1, est\u00e1 bien que est\u00e1 sumando,", "tokens": [50874, 450, 631, 369, 10032, 785, 10235, 11, 11974, 11, 4065, 15367, 631, 6138, 8372, 23496, 3192, 11, 3192, 3610, 631, 3192, 2408, 1806, 11, 51132], "temperature": 0.0, "avg_logprob": -0.33791041937400035, "compression_ratio": 1.8372093023255813, "no_speech_prob": 0.02135511487722397}, {"id": 52, "seek": 26452, "start": 279.88, "end": 287.08, "text": " que digamos se usa para que, como que, ah\u00ed, est\u00e1 bien que est\u00e1 ac\u00e1 que se usa para que", "tokens": [51132, 631, 36430, 369, 29909, 1690, 631, 11, 2617, 631, 11, 12571, 11, 3192, 3610, 631, 3192, 23496, 631, 369, 29909, 1690, 631, 51492], "temperature": 0.0, "avg_logprob": -0.33791041937400035, "compression_ratio": 1.8372093023255813, "no_speech_prob": 0.02135511487722397}, {"id": 53, "seek": 26452, "start": 287.08, "end": 292.44, "text": " tengo para poder completar toda la ecuaci\u00f3n lineal, lo que se hace es agregarle con un peso", "tokens": [51492, 13989, 1690, 8152, 1557, 289, 11687, 635, 11437, 84, 3482, 1622, 304, 11, 450, 631, 369, 10032, 785, 4554, 2976, 306, 416, 517, 28149, 51760], "temperature": 0.0, "avg_logprob": -0.33791041937400035, "compression_ratio": 1.8372093023255813, "no_speech_prob": 0.02135511487722397}, {"id": 54, "seek": 29244, "start": 292.44, "end": 296.88, "text": " m\u00e1s, entonces, decimos, bueno, tenemos una entrada m\u00e1s que vale uno y su peso correspondiente", "tokens": [50364, 3573, 11, 13003, 11, 979, 8372, 11, 11974, 11, 9914, 2002, 37119, 3573, 631, 15474, 8526, 288, 459, 28149, 6805, 8413, 50586], "temperature": 0.0, "avg_logprob": -0.36727818846702576, "compression_ratio": 1.7564575645756457, "no_speech_prob": 0.06189953163266182}, {"id": 55, "seek": 29244, "start": 296.88, "end": 301.71999999999997, "text": " es el sejo. De eso en realidad, digamos, despu\u00e9s nos olvidamos, cuando vamos a trabajar con", "tokens": [50586, 785, 806, 369, 5134, 13, 1346, 7287, 465, 25635, 11, 36430, 11, 15283, 3269, 43194, 2151, 11, 7767, 5295, 257, 30793, 416, 50828], "temperature": 0.0, "avg_logprob": -0.36727818846702576, "compression_ratio": 1.7564575645756457, "no_speech_prob": 0.06189953163266182}, {"id": 56, "seek": 29244, "start": 301.71999999999997, "end": 305.6, "text": " estas cosas como que no utilizamos mucho el sejo y nos concentramos en decir, bueno, vamos a", "tokens": [50828, 13897, 12218, 2617, 631, 572, 19906, 2151, 9824, 806, 369, 5134, 288, 3269, 5512, 30227, 465, 10235, 11, 11974, 11, 5295, 257, 51022], "temperature": 0.0, "avg_logprob": -0.36727818846702576, "compression_ratio": 1.7564575645756457, "no_speech_prob": 0.06189953163266182}, {"id": 57, "seek": 29244, "start": 305.6, "end": 311.08, "text": " tener un vector que son entradas, que son los x1 hasta quise ne y un mont\u00f3n de peso que son los", "tokens": [51022, 11640, 517, 8062, 631, 1872, 948, 48906, 11, 631, 1872, 1750, 2031, 16, 10764, 421, 908, 408, 288, 517, 45259, 368, 28149, 631, 1872, 1750, 51296], "temperature": 0.0, "avg_logprob": -0.36727818846702576, "compression_ratio": 1.7564575645756457, "no_speech_prob": 0.06189953163266182}, {"id": 58, "seek": 29244, "start": 311.08, "end": 315.28, "text": " dole de uno estable de ne y adentro la neurona lo que pasa es que voy a hacer el producto interno", "tokens": [51296, 360, 306, 368, 8526, 37444, 368, 408, 288, 614, 317, 340, 635, 12087, 4037, 450, 631, 20260, 785, 631, 7552, 257, 6720, 806, 47583, 728, 1771, 51506], "temperature": 0.0, "avg_logprob": -0.36727818846702576, "compression_ratio": 1.7564575645756457, "no_speech_prob": 0.06189953163266182}, {"id": 59, "seek": 31528, "start": 315.28, "end": 324.52, "text": " tresos entre el vector x y el vector o leve y se lo voy a pasar a la funci\u00f3n sigma, bien, entonces,", "tokens": [50364, 15890, 329, 3962, 806, 8062, 2031, 288, 806, 8062, 277, 33076, 288, 369, 450, 7552, 257, 25344, 257, 635, 43735, 12771, 11, 3610, 11, 13003, 11, 50826], "temperature": 0.0, "avg_logprob": -0.34484985639464183, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.2049626260995865}, {"id": 60, "seek": 31528, "start": 324.52, "end": 330.71999999999997, "text": " esas funciones de activaci\u00f3n sigma hay varias, o sea, al principio digamos cuando dise\u00f1aron", "tokens": [50826, 23388, 1019, 23469, 368, 2430, 3482, 12771, 4842, 37496, 11, 277, 4158, 11, 419, 34308, 36430, 7767, 3814, 2791, 6372, 51136], "temperature": 0.0, "avg_logprob": -0.34484985639464183, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.2049626260995865}, {"id": 61, "seek": 31528, "start": 330.71999999999997, "end": 336.2, "text": " primero esta neurona, lo que se les hab\u00eda ocurrido primero es decir, bueno, yo lo que hago es sumar", "tokens": [51136, 21289, 5283, 12087, 4037, 11, 450, 631, 369, 1512, 16395, 26430, 81, 2925, 21289, 785, 10235, 11, 11974, 11, 5290, 450, 631, 38721, 785, 2408, 289, 51410], "temperature": 0.0, "avg_logprob": -0.34484985639464183, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.2049626260995865}, {"id": 62, "seek": 31528, "start": 336.2, "end": 343.91999999999996, "text": " todas estas, digamos, todos estos impulsos multiplicados por los pesos, los sumos y si esa suma", "tokens": [51410, 10906, 13897, 11, 36430, 11, 6321, 12585, 704, 9468, 329, 17596, 4181, 1515, 1750, 33204, 11, 1750, 2408, 329, 288, 1511, 11342, 2408, 64, 51796], "temperature": 0.0, "avg_logprob": -0.34484985639464183, "compression_ratio": 1.6853448275862069, "no_speech_prob": 0.2049626260995865}, {"id": 63, "seek": 34392, "start": 343.92, "end": 348.32, "text": " supera cierto umbral, que el umbral lo pod\u00edan calcular o ocho que se agutilizaba en uno o algunas", "tokens": [50364, 1687, 64, 28558, 1105, 32728, 11, 631, 806, 1105, 32728, 450, 2497, 11084, 2104, 17792, 277, 277, 5738, 631, 369, 623, 20835, 590, 5509, 465, 8526, 277, 27316, 50584], "temperature": 0.0, "avg_logprob": -0.3589213091627996, "compression_ratio": 1.7841726618705036, "no_speech_prob": 0.0963333398103714}, {"id": 64, "seek": 34392, "start": 348.32, "end": 353.76, "text": " esas cosas, bueno, si supera cierto umbral, entonces mando uno para afuera y si no mando ser, eso era", "tokens": [50584, 23388, 12218, 11, 11974, 11, 1511, 1687, 64, 28558, 1105, 32728, 11, 13003, 7411, 78, 8526, 1690, 3238, 84, 1663, 288, 1511, 572, 7411, 78, 816, 11, 7287, 4249, 50856], "temperature": 0.0, "avg_logprob": -0.3589213091627996, "compression_ratio": 1.7841726618705036, "no_speech_prob": 0.0963333398103714}, {"id": 65, "seek": 34392, "start": 353.76, "end": 359.20000000000005, "text": " lo primero que se le ocurri\u00f3, pero bueno, despu\u00e9s empezaron a encontrar otras funciones que", "tokens": [50856, 450, 21289, 631, 369, 476, 26430, 44802, 11, 4768, 11974, 11, 15283, 18730, 6372, 257, 17525, 20244, 1019, 23469, 631, 51128], "temperature": 0.0, "avg_logprob": -0.3589213091627996, "compression_ratio": 1.7841726618705036, "no_speech_prob": 0.0963333398103714}, {"id": 66, "seek": 34392, "start": 359.20000000000005, "end": 364.24, "text": " las mejores para poder entrenar mejores estas redes y en definitiva como que no hay mucho criterio", "tokens": [51128, 2439, 42284, 1690, 8152, 45069, 289, 42284, 13897, 16762, 288, 465, 28781, 5931, 2617, 631, 572, 4842, 9824, 9912, 1004, 51380], "temperature": 0.0, "avg_logprob": -0.3589213091627996, "compression_ratio": 1.7841726618705036, "no_speech_prob": 0.0963333398103714}, {"id": 67, "seek": 34392, "start": 364.24, "end": 369.76, "text": " de qu\u00e9 restricciones tienen que tener esa funci\u00f3n, salvo que tiene que ser derivable, tiene que ser,", "tokens": [51380, 368, 8057, 1472, 1341, 23469, 12536, 631, 11640, 11342, 43735, 11, 1845, 3080, 631, 7066, 631, 816, 10151, 712, 11, 7066, 631, 816, 11, 51656], "temperature": 0.0, "avg_logprob": -0.3589213091627996, "compression_ratio": 1.7841726618705036, "no_speech_prob": 0.0963333398103714}, {"id": 68, "seek": 36976, "start": 369.76, "end": 375.32, "text": " tiene que ir como de menos a m\u00e1s, digamos, puede ser de 0 a 1 o de 0 m\u00e1s infinito o de menos infinito", "tokens": [50364, 7066, 631, 3418, 2617, 368, 8902, 257, 3573, 11, 36430, 11, 8919, 816, 368, 1958, 257, 502, 277, 368, 1958, 3573, 7193, 3528, 277, 368, 8902, 7193, 3528, 50642], "temperature": 0.0, "avg_logprob": -0.34141896046748776, "compression_ratio": 1.9230769230769231, "no_speech_prob": 0.11619938164949417}, {"id": 69, "seek": 36976, "start": 375.32, "end": 380.56, "text": " m\u00e1s infinito y tiene que estar no lineas, tiene que tener alg\u00fan punto de no linealidad, entonces estas son algunas", "tokens": [50642, 3573, 7193, 3528, 288, 7066, 631, 8755, 572, 1622, 296, 11, 7066, 631, 11640, 26300, 14326, 368, 572, 1622, 304, 4580, 11, 13003, 13897, 1872, 27316, 50904], "temperature": 0.0, "avg_logprob": -0.34141896046748776, "compression_ratio": 1.9230769230769231, "no_speech_prob": 0.11619938164949417}, {"id": 70, "seek": 36976, "start": 380.56, "end": 385.08, "text": " muy usadas, por ejemplo, la funci\u00f3n sigma y de, o funci\u00f3n log\u00edstica que es la misma que se usa,", "tokens": [50904, 5323, 505, 6872, 11, 1515, 13358, 11, 635, 43735, 12771, 288, 368, 11, 277, 43735, 3565, 19512, 2262, 631, 785, 635, 24946, 631, 369, 29909, 11, 51130], "temperature": 0.0, "avg_logprob": -0.34141896046748776, "compression_ratio": 1.9230769230769231, "no_speech_prob": 0.11619938164949417}, {"id": 71, "seek": 36976, "start": 385.08, "end": 391.12, "text": " lo que estamos hablando de un rato de, digamos, el m\u00e9todo de regreso en log\u00edstica utiliza tambi\u00e9n esta", "tokens": [51130, 450, 631, 10382, 29369, 368, 517, 367, 2513, 368, 11, 36430, 11, 806, 20275, 17423, 368, 1121, 38021, 465, 3565, 19512, 2262, 4976, 13427, 6407, 5283, 51432], "temperature": 0.0, "avg_logprob": -0.34141896046748776, "compression_ratio": 1.9230769230769231, "no_speech_prob": 0.11619938164949417}, {"id": 72, "seek": 36976, "start": 391.12, "end": 398.44, "text": " funci\u00f3n, la tangente y par\u00f3lica, otra, la funci\u00f3n relo, es muy usada y la relo se define como el", "tokens": [51432, 43735, 11, 635, 10266, 1576, 288, 971, 812, 44266, 11, 13623, 11, 635, 43735, 319, 752, 11, 785, 5323, 505, 1538, 288, 635, 319, 752, 369, 6964, 2617, 806, 51798], "temperature": 0.0, "avg_logprob": -0.34141896046748776, "compression_ratio": 1.9230769230769231, "no_speech_prob": 0.11619938164949417}, {"id": 73, "seek": 39844, "start": 398.44, "end": 402.84, "text": " m\u00e1ximo entre 0 y 7, \u00bfno? relo de 7, el m\u00e1ximo entre 0 y 7, entonces vale 0 para todos los", "tokens": [50364, 38876, 3962, 1958, 288, 1614, 11, 3841, 1771, 30, 319, 752, 368, 1614, 11, 806, 38876, 3962, 1958, 288, 1614, 11, 13003, 15474, 1958, 1690, 6321, 1750, 50584], "temperature": 0.0, "avg_logprob": -0.3843291649451623, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.044794924557209015}, {"id": 74, "seek": 39844, "start": 402.84, "end": 409.04, "text": " valores, excepto para cuando el, todos los valores menor que 0, pero cuando el m\u00e1so que 0 vale directamente", "tokens": [50584, 38790, 11, 3993, 78, 1690, 7767, 806, 11, 6321, 1750, 38790, 26343, 631, 1958, 11, 4768, 7767, 806, 3573, 78, 631, 1958, 15474, 46230, 50894], "temperature": 0.0, "avg_logprob": -0.3843291649451623, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.044794924557209015}, {"id": 75, "seek": 39844, "start": 409.04, "end": 412.88, "text": " el valor, estas son las funciones un poco extra\u00f1as, voy a decir que ten\u00edan que hacer todas", "tokens": [50894, 806, 15367, 11, 13897, 1872, 2439, 1019, 23469, 517, 10639, 2857, 32448, 11, 7552, 257, 10235, 631, 47596, 631, 6720, 10906, 51086], "temperature": 0.0, "avg_logprob": -0.3843291649451623, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.044794924557209015}, {"id": 76, "seek": 39844, "start": 412.88, "end": 417.64, "text": " derivables y esta justo no es derivable en el punto 0, pero despu\u00e9s de este derivado en todo el", "tokens": [51086, 10151, 2965, 288, 5283, 40534, 572, 785, 10151, 712, 465, 806, 14326, 1958, 11, 4768, 15283, 368, 4065, 10151, 1573, 465, 5149, 806, 51324], "temperature": 0.0, "avg_logprob": -0.3843291649451623, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.044794924557209015}, {"id": 77, "seek": 39844, "start": 417.64, "end": 423.12, "text": " resto de los reales, bueno ya hay otras m\u00e1s, pero estas como son como de las m\u00e1s utilizadas,", "tokens": [51324, 28247, 368, 1750, 957, 279, 11, 11974, 2478, 4842, 20244, 3573, 11, 4768, 13897, 2617, 1872, 2617, 368, 2439, 3573, 19906, 6872, 11, 51598], "temperature": 0.0, "avg_logprob": -0.3843291649451623, "compression_ratio": 1.7933579335793357, "no_speech_prob": 0.044794924557209015}, {"id": 78, "seek": 42312, "start": 423.12, "end": 429.84000000000003, "text": " bien lo importante ac\u00e1 es que estas funciones de activaci\u00f3n proven una no-lilidad, ni", "tokens": [50364, 3610, 450, 9416, 23496, 785, 631, 13897, 1019, 23469, 368, 2430, 3482, 12785, 2002, 572, 12, 75, 388, 4580, 11, 3867, 50700], "temperature": 0.0, "avg_logprob": -0.4251885458687756, "compression_ratio": 1.6085106382978724, "no_speech_prob": 0.022688401862978935}, {"id": 79, "seek": 42312, "start": 429.84000000000003, "end": 436.96, "text": " la linearidad y vamos a ver, porque, ok, bueno entonces, vimos lo que era una negrona, imag\u00ednense", "tokens": [50700, 635, 8213, 4580, 288, 5295, 257, 1306, 11, 4021, 11, 3133, 11, 11974, 13003, 11, 49266, 450, 631, 4249, 2002, 408, 861, 4037, 11, 2576, 10973, 1288, 51056], "temperature": 0.0, "avg_logprob": -0.4251885458687756, "compression_ratio": 1.6085106382978724, "no_speech_prob": 0.022688401862978935}, {"id": 80, "seek": 42312, "start": 436.96, "end": 447.16, "text": " que en general las negronas se, se ponen como en grupos digamos y se, se distribuyen en capas", "tokens": [51056, 631, 465, 2674, 2439, 408, 861, 38027, 369, 11, 369, 9224, 268, 2617, 465, 33758, 36430, 288, 369, 11, 369, 4400, 84, 16580, 465, 1410, 296, 51566], "temperature": 0.0, "avg_logprob": -0.4251885458687756, "compression_ratio": 1.6085106382978724, "no_speech_prob": 0.022688401862978935}, {"id": 81, "seek": 42312, "start": 447.16, "end": 451.2, "text": " dentro de una red, \u00bfno? entonces este es un ejemplo de una de las redes neuronales m\u00e1s simples,", "tokens": [51566, 10856, 368, 2002, 2182, 11, 3841, 1771, 30, 13003, 4065, 785, 517, 13358, 368, 2002, 368, 2439, 16762, 34090, 4229, 3573, 21730, 11, 51768], "temperature": 0.0, "avg_logprob": -0.4251885458687756, "compression_ratio": 1.6085106382978724, "no_speech_prob": 0.022688401862978935}, {"id": 82, "seek": 45120, "start": 451.2, "end": 456.4, "text": " m\u00e1s simples que en realidad son \u00fatiles para algo, que se conoce como parcer trombos", "tokens": [50364, 3573, 21730, 631, 465, 25635, 1872, 6991, 83, 4680, 1690, 8655, 11, 631, 369, 33029, 384, 2617, 971, 1776, 504, 3548, 329, 50624], "temperature": 0.0, "avg_logprob": -0.47179459552375635, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.017336659133434296}, {"id": 83, "seek": 45120, "start": 456.4, "end": 463.12, "text": " de capa o red f\u00edjol guard de capa, que funciona en la siente manera, nosotros tenemos todas", "tokens": [50624, 368, 1410, 64, 277, 2182, 283, 870, 73, 401, 6290, 368, 1410, 64, 11, 631, 26210, 465, 635, 262, 8413, 13913, 11, 13863, 9914, 10906, 50960], "temperature": 0.0, "avg_logprob": -0.47179459552375635, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.017336659133434296}, {"id": 84, "seek": 45120, "start": 463.12, "end": 466.44, "text": " las entradas, esa que yo le dec\u00eda que la centrada se quiz\u00f3, una quiz\u00f3, se quiz\u00f3, se quiz\u00f3,", "tokens": [50960, 2439, 948, 48906, 11, 11342, 631, 5290, 476, 37599, 631, 635, 1489, 19120, 369, 421, 590, 812, 11, 2002, 421, 590, 812, 11, 369, 421, 590, 812, 11, 369, 421, 590, 812, 11, 51126], "temperature": 0.0, "avg_logprob": -0.47179459552375635, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.017336659133434296}, {"id": 85, "seek": 45120, "start": 466.44, "end": 471.96, "text": " se quiz\u00f3, se quiz\u00f3, se quiz\u00f3 y se net, ser\u00eda como una primera capa de entrada y despu\u00e9s yo ubico", "tokens": [51126, 369, 421, 590, 812, 11, 369, 421, 590, 812, 11, 369, 421, 590, 812, 288, 369, 2533, 11, 23679, 2617, 2002, 17382, 1410, 64, 368, 37119, 288, 15283, 5290, 26709, 2789, 51402], "temperature": 0.0, "avg_logprob": -0.47179459552375635, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.017336659133434296}, {"id": 86, "seek": 45120, "start": 471.96, "end": 477.24, "text": " un mont\u00f3n de neuronas en una segunda capa y las capas que vienen despu\u00e9s de entrar le voy a llamar", "tokens": [51402, 517, 45259, 368, 34090, 296, 465, 2002, 21978, 1410, 64, 288, 2439, 1410, 296, 631, 49298, 15283, 368, 20913, 476, 7552, 257, 16848, 289, 51666], "temperature": 0.0, "avg_logprob": -0.47179459552375635, "compression_ratio": 1.8928571428571428, "no_speech_prob": 0.017336659133434296}, {"id": 87, "seek": 47724, "start": 477.32, "end": 483.48, "text": " capas ocultas, o sea, tengo una primera capa de entrada, esa capa lleva a una capa oculta y todas las neuronas", "tokens": [50368, 1410, 296, 10409, 723, 296, 11, 277, 4158, 11, 13989, 2002, 17382, 1410, 64, 368, 37119, 11, 11342, 1410, 64, 37681, 257, 2002, 1410, 64, 10409, 723, 64, 288, 10906, 2439, 34090, 296, 50676], "temperature": 0.0, "avg_logprob": -0.281610647837321, "compression_ratio": 2.0210084033613445, "no_speech_prob": 0.11581379175186157}, {"id": 88, "seek": 47724, "start": 483.48, "end": 487.8, "text": " en la capa oculta est\u00e1n interconentadas con todas las neuronas en la capa de entrada, o sea, hay", "tokens": [50676, 465, 635, 1410, 64, 10409, 723, 64, 10368, 728, 1671, 317, 6872, 416, 10906, 2439, 34090, 296, 465, 635, 1410, 64, 368, 37119, 11, 277, 4158, 11, 4842, 50892], "temperature": 0.0, "avg_logprob": -0.281610647837321, "compression_ratio": 2.0210084033613445, "no_speech_prob": 0.11581379175186157}, {"id": 89, "seek": 47724, "start": 487.8, "end": 494.6, "text": " este pesos que van de todas todas, despu\u00e9s puedo tener otra segunda capa oculta, otra tercera", "tokens": [50892, 4065, 33204, 631, 3161, 368, 10906, 10906, 11, 15283, 21612, 11640, 13623, 21978, 1410, 64, 10409, 723, 64, 11, 13623, 1796, 41034, 51232], "temperature": 0.0, "avg_logprob": -0.281610647837321, "compression_ratio": 2.0210084033613445, "no_speech_prob": 0.11581379175186157}, {"id": 90, "seek": 47724, "start": 494.6, "end": 498.64, "text": " capa oculta, etc\u00e9tera, hasta que lleva una \u00faltima capa que tambi\u00e9n est\u00e1 interconentada", "tokens": [51232, 1410, 64, 10409, 723, 64, 11, 5183, 526, 23833, 11, 10764, 631, 37681, 2002, 28118, 1410, 64, 631, 6407, 3192, 728, 1671, 317, 1538, 51434], "temperature": 0.0, "avg_logprob": -0.281610647837321, "compression_ratio": 2.0210084033613445, "no_speech_prob": 0.11581379175186157}, {"id": 91, "seek": 47724, "start": 498.64, "end": 504.6, "text": " con el anterior, que es la capa de salida, bien, pero no hay en las es que vayan entre", "tokens": [51434, 416, 806, 22272, 11, 631, 785, 635, 1410, 64, 368, 1845, 2887, 11, 3610, 11, 4768, 572, 4842, 465, 2439, 785, 631, 371, 20506, 3962, 51732], "temperature": 0.0, "avg_logprob": -0.281610647837321, "compression_ratio": 2.0210084033613445, "no_speech_prob": 0.11581379175186157}, {"id": 92, "seek": 50460, "start": 504.6, "end": 509.68, "text": " la capa inicial y la capa de salida, digamos, la capa de entrada de la capa de salida, sino que siempre", "tokens": [50364, 635, 1410, 64, 44076, 288, 635, 1410, 64, 368, 1845, 2887, 11, 36430, 11, 635, 1410, 64, 368, 37119, 368, 635, 1410, 64, 368, 1845, 2887, 11, 18108, 631, 12758, 50618], "temperature": 0.0, "avg_logprob": -0.31312155112242085, "compression_ratio": 2.031496062992126, "no_speech_prob": 0.017520418390631676}, {"id": 93, "seek": 50460, "start": 509.68, "end": 514.84, "text": " los en las esvan entre una capa y la sienta, entonces ac\u00e1 yo digo que tengo un arquitectura en capas", "tokens": [50618, 1750, 465, 2439, 785, 9768, 3962, 2002, 1410, 64, 288, 635, 262, 1196, 64, 11, 13003, 23496, 5290, 22990, 631, 13989, 517, 40258, 5739, 2991, 465, 1410, 296, 50876], "temperature": 0.0, "avg_logprob": -0.31312155112242085, "compression_ratio": 2.031496062992126, "no_speech_prob": 0.017520418390631676}, {"id": 94, "seek": 50460, "start": 514.84, "end": 521.64, "text": " donde tengo este segundo esta imagen, capa ocultas, tengo la capa oculta oculta oculta oculta oculta", "tokens": [50876, 10488, 13989, 4065, 17954, 5283, 40652, 11, 1410, 64, 10409, 723, 296, 11, 13989, 635, 1410, 64, 10409, 723, 64, 10409, 723, 64, 10409, 723, 64, 10409, 723, 64, 10409, 723, 64, 51216], "temperature": 0.0, "avg_logprob": -0.31312155112242085, "compression_ratio": 2.031496062992126, "no_speech_prob": 0.017520418390631676}, {"id": 95, "seek": 50460, "start": 521.64, "end": 527.6800000000001, "text": " capa y despu\u00e9s son la capa de salida, bien, entonces esta como el arquitectura m\u00e1s en s\u00ed, yo tengo", "tokens": [51216, 1410, 64, 288, 15283, 1872, 635, 1410, 64, 368, 1845, 2887, 11, 3610, 11, 13003, 5283, 2617, 806, 40258, 5739, 2991, 3573, 465, 8600, 11, 5290, 13989, 51518], "temperature": 0.0, "avg_logprob": -0.31312155112242085, "compression_ratio": 2.031496062992126, "no_speech_prob": 0.017520418390631676}, {"id": 96, "seek": 50460, "start": 527.6800000000001, "end": 532.48, "text": " un mont\u00f3n de capas, una tras de otra, y cada capa est\u00e1 completamente incarconentada con la anterior, pero", "tokens": [51518, 517, 45259, 368, 1410, 296, 11, 2002, 22507, 368, 13623, 11, 288, 8411, 1410, 64, 3192, 28381, 834, 289, 1671, 317, 1538, 416, 635, 22272, 11, 4768, 51758], "temperature": 0.0, "avg_logprob": -0.31312155112242085, "compression_ratio": 2.031496062992126, "no_speech_prob": 0.017520418390631676}, {"id": 97, "seek": 53248, "start": 532.5600000000001, "end": 540.52, "text": " nunca saltan entre capas, bien, entonces analicemos un poco que es lo que pasa dentro de esas", "tokens": [50368, 13768, 5139, 282, 3962, 1410, 296, 11, 3610, 11, 13003, 2624, 299, 4485, 517, 10639, 631, 785, 450, 631, 20260, 10856, 368, 23388, 50766], "temperature": 0.0, "avg_logprob": -0.3295552231544672, "compression_ratio": 1.7987012987012987, "no_speech_prob": 0.032541971653699875}, {"id": 98, "seek": 53248, "start": 540.52, "end": 548.32, "text": " capas y para eso vamos a dudar de mirar la capa, bien, yo tengo entonces, en esa imagen", "tokens": [50766, 1410, 296, 288, 1690, 7287, 5295, 257, 38512, 289, 368, 3149, 289, 635, 1410, 64, 11, 3610, 11, 5290, 13989, 13003, 11, 465, 11342, 40652, 51156], "temperature": 0.0, "avg_logprob": -0.3295552231544672, "compression_ratio": 1.7987012987012987, "no_speech_prob": 0.032541971653699875}, {"id": 99, "seek": 53248, "start": 548.32, "end": 554.76, "text": " es como estamos gino de la frontera entre una capa y la sienta, yo tengo la frontera de la capa", "tokens": [51156, 785, 2617, 10382, 290, 2982, 368, 635, 431, 266, 23833, 3962, 2002, 1410, 64, 288, 635, 262, 1196, 64, 11, 5290, 13989, 635, 431, 266, 23833, 368, 635, 1410, 64, 51478], "temperature": 0.0, "avg_logprob": -0.3295552231544672, "compression_ratio": 1.7987012987012987, "no_speech_prob": 0.032541971653699875}, {"id": 100, "seek": 55476, "start": 554.76, "end": 563.64, "text": " dobleve uno, la capa y la capa y m\u00e1s uno, entonces voy a decir que los estados de las neuronas", "tokens": [50364, 360, 638, 303, 8526, 11, 635, 1410, 64, 288, 635, 1410, 64, 288, 3573, 8526, 11, 13003, 7552, 257, 10235, 631, 1750, 871, 4181, 368, 2439, 34090, 296, 50808], "temperature": 0.0, "avg_logprob": -0.3229353768484933, "compression_ratio": 1.8481012658227849, "no_speech_prob": 0.2285810261964798}, {"id": 101, "seek": 55476, "start": 563.64, "end": 572.8, "text": " en la capa y que llegan a la capa y son x1 super y x2 super y x3 super y x4 super y, bien, eso", "tokens": [50808, 465, 635, 1410, 64, 288, 631, 11234, 282, 257, 635, 1410, 64, 288, 1872, 2031, 16, 1687, 288, 2031, 17, 1687, 288, 2031, 18, 1687, 288, 2031, 19, 1687, 288, 11, 3610, 11, 7287, 51266], "temperature": 0.0, "avg_logprob": -0.3229353768484933, "compression_ratio": 1.8481012658227849, "no_speech_prob": 0.2285810261964798}, {"id": 102, "seek": 55476, "start": 572.8, "end": 580.2, "text": " va a ser el estado de la capa y quiero calcular cu\u00e1l va a ser la el valor de la capa y m\u00e1s uno dado", "tokens": [51266, 2773, 257, 816, 806, 18372, 368, 635, 1410, 64, 288, 16811, 2104, 17792, 44318, 2773, 257, 816, 635, 806, 15367, 368, 635, 1410, 64, 288, 3573, 8526, 29568, 51636], "temperature": 0.0, "avg_logprob": -0.3229353768484933, "compression_ratio": 1.8481012658227849, "no_speech_prob": 0.2285810261964798}, {"id": 103, "seek": 58020, "start": 580.2, "end": 587.2, "text": " que el valor de la capa y era eso, entonces la capa y yo ten\u00eda que valiar esto, y x1 super", "tokens": [50364, 631, 806, 15367, 368, 635, 1410, 64, 288, 4249, 7287, 11, 13003, 635, 1410, 64, 288, 5290, 23718, 631, 1323, 9448, 7433, 11, 288, 2031, 16, 1687, 50714], "temperature": 0.0, "avg_logprob": -0.36294662952423096, "compression_ratio": 1.5158730158730158, "no_speech_prob": 0.13542519509792328}, {"id": 104, "seek": 58020, "start": 587.2, "end": 603.9200000000001, "text": " y x2 super y x3 super y y creo que ella va a estar 4, y x4 super, esto es un vector, bien, entonces", "tokens": [50714, 288, 2031, 17, 1687, 288, 2031, 18, 1687, 288, 288, 14336, 631, 18823, 2773, 257, 8755, 1017, 11, 288, 2031, 19, 1687, 11, 7433, 785, 517, 8062, 11, 3610, 11, 13003, 51550], "temperature": 0.0, "avg_logprob": -0.36294662952423096, "compression_ratio": 1.5158730158730158, "no_speech_prob": 0.13542519509792328}, {"id": 105, "seek": 60392, "start": 604.4, "end": 611.16, "text": " recorden c\u00f3mo calcul\u00e1bamos el valor de una neurona, dec\u00edamos que por ejemplo para calcular", "tokens": [50388, 2136, 268, 12826, 4322, 27879, 2151, 806, 15367, 368, 2002, 12087, 4037, 11, 979, 16275, 631, 1515, 13358, 1690, 4322, 289, 50726], "temperature": 0.0, "avg_logprob": -0.3180057038652136, "compression_ratio": 1.7183098591549295, "no_speech_prob": 0.10487396270036697}, {"id": 106, "seek": 60392, "start": 611.16, "end": 620.9599999999999, "text": " la neurona que est\u00e1 ya arriba que es x1 y m\u00e1s uno, el valor de esta neurona se calculaba", "tokens": [50726, 635, 12087, 4037, 631, 3192, 2478, 28469, 631, 785, 2031, 16, 288, 3573, 8526, 11, 806, 15367, 368, 5283, 12087, 4037, 369, 4322, 5509, 51216], "temperature": 0.0, "avg_logprob": -0.3180057038652136, "compression_ratio": 1.7183098591549295, "no_speech_prob": 0.10487396270036697}, {"id": 107, "seek": 60392, "start": 620.9599999999999, "end": 628.52, "text": " como y ten\u00eda que hacer las sumas digamos de los inputs que estaban de la de izquierdo por", "tokens": [51216, 2617, 288, 23718, 631, 6720, 2439, 2408, 296, 36430, 368, 1750, 15743, 631, 36713, 368, 635, 368, 46428, 2595, 1515, 51594], "temperature": 0.0, "avg_logprob": -0.3180057038652136, "compression_ratio": 1.7183098591549295, "no_speech_prob": 0.10487396270036697}, {"id": 108, "seek": 60392, "start": 628.52, "end": 632.64, "text": " los pesos que llegaban hasta ah\u00ed, entonces en este caso son todas las neuronas que est\u00e1n", "tokens": [51594, 1750, 33204, 631, 11234, 18165, 10764, 12571, 11, 13003, 465, 4065, 9666, 1872, 10906, 2439, 34090, 296, 631, 10368, 51800], "temperature": 0.0, "avg_logprob": -0.3180057038652136, "compression_ratio": 1.7183098591549295, "no_speech_prob": 0.10487396270036697}, {"id": 109, "seek": 63264, "start": 632.64, "end": 638.08, "text": " en la capa y todos los valores de la neurona multiplicados por todos los valores de las", "tokens": [50364, 465, 635, 1410, 64, 288, 6321, 1750, 38790, 368, 635, 12087, 4037, 17596, 4181, 1515, 6321, 1750, 38790, 368, 2439, 50636], "temperature": 0.0, "avg_logprob": -0.2729262790164432, "compression_ratio": 2.0526315789473686, "no_speech_prob": 0.15817105770111084}, {"id": 110, "seek": 63264, "start": 638.08, "end": 649.04, "text": " flechitas, entonces ser\u00eda x1, por dobleb y la flechita que est\u00e1 lleno desde la neurona", "tokens": [50636, 7025, 339, 14182, 11, 13003, 23679, 2031, 16, 11, 1515, 360, 638, 65, 288, 635, 7025, 339, 2786, 631, 3192, 4849, 5808, 10188, 635, 12087, 4037, 51184], "temperature": 0.0, "avg_logprob": -0.2729262790164432, "compression_ratio": 2.0526315789473686, "no_speech_prob": 0.15817105770111084}, {"id": 111, "seek": 63264, "start": 649.04, "end": 654.96, "text": " uno de la capa y hasta la neurona uno de la capa y m\u00e1s uno se llama dobleb 1 a 1, entonces", "tokens": [51184, 8526, 368, 635, 1410, 64, 288, 10764, 635, 12087, 4037, 8526, 368, 635, 1410, 64, 288, 3573, 8526, 369, 23272, 360, 638, 65, 502, 257, 502, 11, 13003, 51480], "temperature": 0.0, "avg_logprob": -0.2729262790164432, "compression_ratio": 2.0526315789473686, "no_speech_prob": 0.15817105770111084}, {"id": 112, "seek": 63264, "start": 654.96, "end": 662.6, "text": " x1 por dobleb 1 a 1, m\u00e1s, la segunda capa para la segunda neurona de la capa y la", "tokens": [51480, 2031, 16, 1515, 360, 638, 65, 502, 257, 502, 11, 3573, 11, 635, 21978, 1410, 64, 1690, 635, 21978, 12087, 4037, 368, 635, 1410, 64, 288, 635, 51862], "temperature": 0.0, "avg_logprob": -0.2729262790164432, "compression_ratio": 2.0526315789473686, "no_speech_prob": 0.15817105770111084}, {"id": 113, "seek": 66260, "start": 662.84, "end": 680.64, "text": " por el segundo peso te era el 2x1, el peso 2x1, esto tambi\u00e9n es de la capa y m\u00e1s x3 por dobleb 3x1,", "tokens": [50376, 1515, 806, 17954, 28149, 535, 4249, 806, 568, 87, 16, 11, 806, 28149, 568, 87, 16, 11, 7433, 6407, 785, 368, 635, 1410, 64, 288, 3573, 2031, 18, 1515, 360, 638, 65, 805, 87, 16, 11, 51266], "temperature": 0.0, "avg_logprob": -0.4678492546081543, "compression_ratio": 1.10989010989011, "no_speech_prob": 0.01859809085726738}, {"id": 114, "seek": 68064, "start": 681.56, "end": 696.96, "text": " todo esto es de la capa y m\u00e1s x4 por dobleb 4x1, entonces la salida x1 de la capa y m\u00e1s uno es el", "tokens": [50410, 5149, 7433, 785, 368, 635, 1410, 64, 288, 3573, 2031, 19, 1515, 360, 638, 65, 1017, 87, 16, 11, 13003, 635, 1845, 2887, 2031, 16, 368, 635, 1410, 64, 288, 3573, 8526, 785, 806, 51180], "temperature": 0.0, "avg_logprob": -0.2570199966430664, "compression_ratio": 1.9864864864864864, "no_speech_prob": 0.053509678691625595}, {"id": 115, "seek": 68064, "start": 696.96, "end": 704.28, "text": " producto de todas estas ac\u00e1, bien ese producto de la neurona uno de la capa anterior por el peso", "tokens": [51180, 47583, 368, 10906, 13897, 23496, 11, 3610, 10167, 47583, 368, 635, 12087, 4037, 8526, 368, 635, 1410, 64, 22272, 1515, 806, 28149, 51546], "temperature": 0.0, "avg_logprob": -0.2570199966430664, "compression_ratio": 1.9864864864864864, "no_speech_prob": 0.053509678691625595}, {"id": 116, "seek": 68064, "start": 704.28, "end": 707.56, "text": " uno uno, la neurona dos de la capa anterior por el peso 2x1, la neurona tres de la capa anterior", "tokens": [51546, 8526, 8526, 11, 635, 12087, 4037, 4491, 368, 635, 1410, 64, 22272, 1515, 806, 28149, 568, 87, 16, 11, 635, 12087, 4037, 15890, 368, 635, 1410, 64, 22272, 51710], "temperature": 0.0, "avg_logprob": -0.2570199966430664, "compression_ratio": 1.9864864864864864, "no_speech_prob": 0.053509678691625595}, {"id": 117, "seek": 70756, "start": 707.56, "end": 713.8, "text": " por el peso 3x1, lo mismo puedo hacer para la otra puedo decir x2 y ser\u00eda igual solo que", "tokens": [50364, 1515, 806, 28149, 805, 87, 16, 11, 450, 12461, 21612, 6720, 1690, 635, 13623, 21612, 10235, 2031, 17, 288, 23679, 10953, 6944, 631, 50676], "temperature": 0.0, "avg_logprob": -0.4124510174705869, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.053559236228466034}, {"id": 118, "seek": 70756, "start": 713.8, "end": 723.18, "text": " tambi\u00e9n ac\u00e1 cambi\u00e1ndolo el lugar es a 2, entonces digo es x1 y por dobleb 1 a 2 y m\u00e1s 2", "tokens": [50676, 6407, 23496, 19569, 18606, 7902, 806, 11467, 785, 257, 568, 11, 13003, 22990, 785, 2031, 16, 288, 1515, 360, 638, 65, 502, 257, 568, 288, 3573, 568, 51145], "temperature": 0.0, "avg_logprob": -0.4124510174705869, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.053559236228466034}, {"id": 119, "seek": 70756, "start": 723.18, "end": 737.52, "text": " estos m\u00e1s x4 y por dobleb 4 a 2 y bien s\u00ed, ah\u00ed est\u00e1, cuando estamos en un arquitecto", "tokens": [51145, 12585, 3573, 2031, 19, 288, 1515, 360, 638, 65, 1017, 257, 568, 288, 3610, 8600, 11, 12571, 3192, 11, 7767, 10382, 465, 517, 40258, 5739, 78, 51862], "temperature": 0.0, "avg_logprob": -0.4124510174705869, "compression_ratio": 1.4754098360655739, "no_speech_prob": 0.053559236228466034}, {"id": 120, "seek": 73752, "start": 737.52, "end": 741.8, "text": " en capa como esta, es as\u00ed, es cada la neurona de la capa siguiente est\u00e1 conectada con todo", "tokens": [50364, 465, 1410, 64, 2617, 5283, 11, 785, 8582, 11, 785, 8411, 635, 12087, 4037, 368, 635, 1410, 64, 25666, 3192, 30458, 1538, 416, 5149, 50578], "temperature": 0.0, "avg_logprob": -0.3945918449988732, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.11538486927747726}, {"id": 121, "seek": 73752, "start": 741.8, "end": 747.5799999999999, "text": " el anterior pero nunca saltan de capas, nunca cruzan hacia otra y nunca vuelen hacia atr\u00e1s,", "tokens": [50578, 806, 22272, 4768, 13768, 5139, 282, 368, 1410, 296, 11, 13768, 5140, 21238, 21365, 13623, 288, 13768, 20126, 268, 21365, 22906, 11, 50867], "temperature": 0.0, "avg_logprob": -0.3945918449988732, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.11538486927747726}, {"id": 122, "seek": 73752, "start": 747.5799999999999, "end": 750.74, "text": " que es otra cosa que puede pasar en otras arquitecturas de redes, pero esta que es la m\u00e1s", "tokens": [50867, 631, 785, 13623, 10163, 631, 8919, 25344, 465, 20244, 40258, 5739, 12907, 368, 16762, 11, 4768, 5283, 631, 785, 635, 3573, 51025], "temperature": 0.0, "avg_logprob": -0.3945918449988732, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.11538486927747726}, {"id": 123, "seek": 73752, "start": 750.74, "end": 757.3199999999999, "text": " simple es cada capa con la siguiente, bueno entonces x3 ser\u00eda lo mismo, x1 y ac\u00e1 el peso 1 o 3,", "tokens": [51025, 2199, 785, 8411, 1410, 64, 416, 635, 25666, 11, 11974, 13003, 2031, 18, 23679, 450, 12461, 11, 2031, 16, 288, 23496, 806, 28149, 502, 277, 805, 11, 51354], "temperature": 0.0, "avg_logprob": -0.3945918449988732, "compression_ratio": 1.6696428571428572, "no_speech_prob": 0.11538486927747726}, {"id": 124, "seek": 75732, "start": 757.32, "end": 777.4000000000001, "text": " tan data, x4 el peso 4 o 3 s\u00ed, s\u00ed, o sea, no, ac\u00e1 son todas reales, x, todos los", "tokens": [50364, 7603, 1412, 11, 2031, 19, 806, 28149, 1017, 277, 805, 8600, 11, 8600, 11, 277, 4158, 11, 572, 11, 23496, 1872, 10906, 957, 279, 11, 2031, 11, 6321, 1750, 51368], "temperature": 0.0, "avg_logprob": -0.5535057409485774, "compression_ratio": 1.426356589147287, "no_speech_prob": 0.11563464999198914}, {"id": 125, "seek": 75732, "start": 777.4000000000001, "end": 784.6400000000001, "text": " requisitos, le dole, son todas las reales, entonces a eso quer\u00eda llegar, yo tengo x1 y x2 y x3 y x4", "tokens": [51368, 49878, 11343, 11, 476, 360, 306, 11, 1872, 10906, 2439, 957, 279, 11, 13003, 257, 7287, 37869, 24892, 11, 5290, 13989, 2031, 16, 288, 2031, 17, 288, 2031, 18, 288, 2031, 19, 51730], "temperature": 0.0, "avg_logprob": -0.5535057409485774, "compression_ratio": 1.426356589147287, "no_speech_prob": 0.11563464999198914}, {"id": 126, "seek": 78464, "start": 784.72, "end": 790.96, "text": " son 4 variables reales que componen un vector y si yo agarr\u00f3 todos los dole 1, 1, 2, 1, 2, 1, 3, 1,", "tokens": [50368, 1872, 1017, 9102, 957, 279, 631, 715, 32923, 517, 8062, 288, 1511, 5290, 623, 2284, 812, 6321, 1750, 360, 306, 502, 11, 502, 11, 568, 11, 502, 11, 568, 11, 502, 11, 805, 11, 502, 11, 50680], "temperature": 0.0, "avg_logprob": -0.4357504613191179, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.11721668392419815}, {"id": 127, "seek": 78464, "start": 790.96, "end": 796.84, "text": " 4, 1, 2, 1, 2, etc, todo esto compone una matriz en realidad, yo puedo construirme la matriz", "tokens": [50680, 1017, 11, 502, 11, 568, 11, 502, 11, 568, 11, 5183, 11, 5149, 7433, 715, 546, 2002, 3803, 24959, 465, 25635, 11, 5290, 21612, 38445, 1398, 635, 3803, 24959, 50974], "temperature": 0.0, "avg_logprob": -0.4357504613191179, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.11721668392419815}, {"id": 128, "seek": 78464, "start": 796.84, "end": 806.68, "text": " de la capa y es igual, esta matriz que tiene dole 1, 1, hasta dole B, 4 o 3, bien,", "tokens": [50974, 368, 635, 1410, 64, 288, 785, 10953, 11, 5283, 3803, 24959, 631, 7066, 360, 306, 502, 11, 502, 11, 10764, 360, 306, 363, 11, 1017, 277, 805, 11, 3610, 11, 51466], "temperature": 0.0, "avg_logprob": -0.4357504613191179, "compression_ratio": 1.6428571428571428, "no_speech_prob": 0.11721668392419815}, {"id": 129, "seek": 80668, "start": 806.88, "end": 819.12, "text": " esto es una matriz, entonces al tener eso en realidad yo puedo expresar la salida de esta capa,", "tokens": [50374, 7433, 785, 2002, 3803, 24959, 11, 13003, 419, 11640, 7287, 465, 25635, 5290, 21612, 33397, 289, 635, 1845, 2887, 368, 5283, 1410, 64, 11, 50986], "temperature": 0.0, "avg_logprob": -0.33929356442222114, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.010802106000483036}, {"id": 130, "seek": 80668, "start": 819.12, "end": 824.3199999999999, "text": " puedo expresar los estados en los cuales lo valores, en los que quedan las neuronas de", "tokens": [50986, 21612, 33397, 289, 1750, 871, 4181, 465, 1750, 46932, 450, 1323, 2706, 11, 465, 1750, 631, 13617, 282, 2439, 34090, 296, 368, 51246], "temperature": 0.0, "avg_logprob": -0.33929356442222114, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.010802106000483036}, {"id": 131, "seek": 80668, "start": 824.3199999999999, "end": 830.0, "text": " la capa siguiente, los puedo expresar como un producto de matriz, yo digo, el vector en la capa", "tokens": [51246, 635, 1410, 64, 25666, 11, 1750, 21612, 33397, 289, 2617, 517, 47583, 368, 3803, 24959, 11, 5290, 22990, 11, 806, 8062, 465, 635, 1410, 64, 51530], "temperature": 0.0, "avg_logprob": -0.33929356442222114, "compression_ratio": 1.748427672955975, "no_speech_prob": 0.010802106000483036}, {"id": 132, "seek": 83000, "start": 830.08, "end": 836.56, "text": " era esto, entonces el vector en la capa y m\u00e1s uno va a ser el producto de xy por dole B,", "tokens": [50368, 4249, 7433, 11, 13003, 806, 8062, 465, 635, 1410, 64, 288, 3573, 8526, 2773, 257, 816, 806, 47583, 368, 2031, 88, 1515, 360, 306, 363, 11, 50692], "temperature": 0.0, "avg_logprob": -0.3971027505808863, "compression_ratio": 2.013824884792627, "no_speech_prob": 0.09915827959775925}, {"id": 133, "seek": 83000, "start": 836.56, "end": 840.76, "text": " digamos esto termine haciendo un producto de matrices, si hace el producto de matrices, es", "tokens": [50692, 36430, 7433, 1433, 533, 20509, 517, 47583, 368, 3803, 24373, 11, 1511, 10032, 806, 47583, 368, 3803, 24373, 11, 785, 50902], "temperature": 0.0, "avg_logprob": -0.3971027505808863, "compression_ratio": 2.013824884792627, "no_speech_prob": 0.09915827959775925}, {"id": 134, "seek": 83000, "start": 840.76, "end": 846.8, "text": " medaria, x1 por dole 1, y x2 por dole B, y x3 por dole B, y x4 por dole B, 4,", "tokens": [50902, 1205, 9831, 11, 2031, 16, 1515, 360, 306, 502, 11, 288, 2031, 17, 1515, 360, 306, 363, 11, 288, 2031, 18, 1515, 360, 306, 363, 11, 288, 2031, 19, 1515, 360, 306, 363, 11, 1017, 11, 51204], "temperature": 0.0, "avg_logprob": -0.3971027505808863, "compression_ratio": 2.013824884792627, "no_speech_prob": 0.09915827959775925}, {"id": 135, "seek": 83000, "start": 846.8, "end": 850.84, "text": " que es lo mismo que estedera, y si vamos con la segunda columna, me al mismo daca,", "tokens": [51204, 631, 785, 450, 12461, 631, 871, 292, 1663, 11, 288, 1511, 5295, 416, 635, 21978, 5970, 629, 11, 385, 419, 12461, 274, 6628, 11, 51406], "temperature": 0.0, "avg_logprob": -0.3971027505808863, "compression_ratio": 2.013824884792627, "no_speech_prob": 0.09915827959775925}, {"id": 136, "seek": 83000, "start": 850.84, "end": 855.56, "text": " si vamos con la segunda columna, me al mismo daca, pero es un definitio la salida de esta capa,", "tokens": [51406, 1511, 5295, 416, 635, 21978, 5970, 629, 11, 385, 419, 12461, 274, 6628, 11, 4768, 785, 517, 28781, 1004, 635, 1845, 2887, 368, 5283, 1410, 64, 11, 51642], "temperature": 0.0, "avg_logprob": -0.3971027505808863, "compression_ratio": 2.013824884792627, "no_speech_prob": 0.09915827959775925}, {"id": 137, "seek": 85556, "start": 855.56, "end": 862.7199999999999, "text": " digamos si yo tengo esta neuron ah\u00ed, la salida de la capa, a ver d\u00f3nde les creo,", "tokens": [50364, 36430, 1511, 5290, 13989, 5283, 34090, 12571, 11, 635, 1845, 2887, 368, 635, 1410, 64, 11, 257, 1306, 34264, 1512, 14336, 11, 50722], "temperature": 0.0, "avg_logprob": -0.38614188300238717, "compression_ratio": 1.5327102803738317, "no_speech_prob": 0.0793922021985054}, {"id": 138, "seek": 85556, "start": 862.7199999999999, "end": 866.56, "text": " los pido ac\u00e1 porque esto nos va a tener que quedar para despu\u00e9s para cobrar este,", "tokens": [50722, 1750, 280, 2925, 23496, 4021, 7433, 3269, 2773, 257, 11640, 631, 39244, 1690, 15283, 1690, 598, 30280, 4065, 11, 50914], "temperature": 0.0, "avg_logprob": -0.38614188300238717, "compression_ratio": 1.5327102803738317, "no_speech_prob": 0.0793922021985054}, {"id": 139, "seek": 85556, "start": 866.56, "end": 873.28, "text": " mirarlo, pero bueno, tengo x su bra\u00ed, este es el vector de entrada, y voy a poner ac\u00e1,", "tokens": [50914, 3149, 19457, 11, 4768, 11974, 11, 13989, 2031, 459, 1548, 870, 11, 4065, 785, 806, 8062, 368, 37119, 11, 288, 7552, 257, 19149, 23496, 11, 51250], "temperature": 0.0, "avg_logprob": -0.38614188300238717, "compression_ratio": 1.5327102803738317, "no_speech_prob": 0.0793922021985054}, {"id": 140, "seek": 85556, "start": 873.28, "end": 885.52, "text": " copiar la matriz esta, dole B1 1, hasta dole B4 1, dole B4 3, dole B1 3,", "tokens": [51250, 2971, 9448, 635, 3803, 24959, 5283, 11, 360, 306, 363, 16, 502, 11, 10764, 360, 306, 363, 19, 502, 11, 360, 306, 363, 19, 805, 11, 360, 306, 363, 16, 805, 11, 51862], "temperature": 0.0, "avg_logprob": -0.38614188300238717, "compression_ratio": 1.5327102803738317, "no_speech_prob": 0.0793922021985054}, {"id": 141, "seek": 88552, "start": 886.48, "end": 899.64, "text": " y vamos a hacer tres, entonces, digo que el valor de x1 va a ser el valor en y por la", "tokens": [50412, 288, 5295, 257, 6720, 15890, 11, 13003, 11, 22990, 631, 806, 15367, 368, 2031, 16, 2773, 257, 816, 806, 15367, 465, 288, 1515, 635, 51070], "temperature": 0.0, "avg_logprob": -0.4484727537477171, "compression_ratio": 1.5297619047619047, "no_speech_prob": 0.00463181734085083}, {"id": 142, "seek": 88552, "start": 899.64, "end": 906.24, "text": " matriz que representa los pesos de la capa y, y a esto lo que me falta agregarle es el", "tokens": [51070, 3803, 24959, 631, 49823, 1750, 33204, 368, 635, 1410, 64, 288, 11, 288, 257, 7433, 450, 631, 385, 22111, 623, 3375, 36153, 785, 806, 51400], "temperature": 0.0, "avg_logprob": -0.4484727537477171, "compression_ratio": 1.5297619047619047, "no_speech_prob": 0.00463181734085083}, {"id": 143, "seek": 88552, "start": 906.24, "end": 911.24, "text": " sigma, que es la funci\u00f3n de activaci\u00f3n y las el sigma tambi\u00e9n pues pertenece a la", "tokens": [51400, 12771, 11, 631, 785, 635, 43735, 368, 2430, 3482, 288, 2439, 806, 12771, 6407, 11059, 680, 1147, 68, 384, 257, 635, 51650], "temperature": 0.0, "avg_logprob": -0.4484727537477171, "compression_ratio": 1.5297619047619047, "no_speech_prob": 0.00463181734085083}, {"id": 144, "seek": 91124, "start": 911.24, "end": 918.2, "text": " capa y d\u00eda, mucho por tener distintas funciones de activaci\u00f3n por capa, bien, entonces,", "tokens": [50364, 1410, 64, 288, 12271, 11, 9824, 1515, 11640, 31489, 296, 1019, 23469, 368, 2430, 3482, 1515, 1410, 64, 11, 3610, 11, 13003, 11, 50712], "temperature": 0.0, "avg_logprob": -0.31584403474452133, "compression_ratio": 1.7509881422924902, "no_speech_prob": 0.04580989107489586}, {"id": 145, "seek": 91124, "start": 918.2, "end": 922.96, "text": " concentremos en esto, \u00bfno? Decimos que si yo tengo una arquitectura en capas donde cada capa", "tokens": [50712, 5512, 28343, 465, 7433, 11, 3841, 1771, 30, 12427, 8372, 631, 1511, 5290, 13989, 2002, 40258, 5739, 2991, 465, 1410, 296, 10488, 8411, 1410, 64, 50950], "temperature": 0.0, "avg_logprob": -0.31584403474452133, "compression_ratio": 1.7509881422924902, "no_speech_prob": 0.04580989107489586}, {"id": 146, "seek": 91124, "start": 922.96, "end": 926.5600000000001, "text": " est\u00e1 conectada con la anterior, digamos todas las neuronas una capa est\u00e1n conectadas con", "tokens": [50950, 3192, 30458, 1538, 416, 635, 22272, 11, 36430, 10906, 2439, 34090, 296, 2002, 1410, 64, 10368, 30458, 6872, 416, 51130], "temperature": 0.0, "avg_logprob": -0.31584403474452133, "compression_ratio": 1.7509881422924902, "no_speech_prob": 0.04580989107489586}, {"id": 147, "seek": 91124, "start": 926.5600000000001, "end": 933.8, "text": " todas las neuronas de anterior, entonces puedo calcular la activaci\u00f3n o los valores que", "tokens": [51130, 10906, 2439, 34090, 296, 368, 22272, 11, 13003, 21612, 2104, 17792, 635, 2430, 3482, 277, 1750, 38790, 631, 51492], "temperature": 0.0, "avg_logprob": -0.31584403474452133, "compression_ratio": 1.7509881422924902, "no_speech_prob": 0.04580989107489586}, {"id": 148, "seek": 91124, "start": 933.8, "end": 937.8, "text": " va a tener la capa y m\u00e1s uno en funci\u00f3n de la capa y con esta formulada ac\u00e1.", "tokens": [51492, 2773, 257, 11640, 635, 1410, 64, 288, 3573, 8526, 465, 43735, 368, 635, 1410, 64, 288, 416, 5283, 49990, 1538, 23496, 13, 51692], "temperature": 0.0, "avg_logprob": -0.31584403474452133, "compression_ratio": 1.7509881422924902, "no_speech_prob": 0.04580989107489586}, {"id": 149, "seek": 94124, "start": 941.24, "end": 949.8, "text": " As\u00ed que supongamos que tengo, eso creo que es, es altamente lo mismo que dice ac\u00e1, ah\u00ed est\u00e1,", "tokens": [50364, 17419, 631, 9331, 556, 2151, 631, 13989, 11, 7287, 14336, 631, 785, 11, 785, 4955, 3439, 450, 12461, 631, 10313, 23496, 11, 12571, 3192, 11, 50792], "temperature": 0.0, "avg_logprob": -0.2977476403264716, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.020579053089022636}, {"id": 150, "seek": 94124, "start": 949.8, "end": 956.08, "text": " tengo esa entrada, la salida va a ser ese vector, digamos, de tres neuronas y tengo", "tokens": [50792, 13989, 11342, 37119, 11, 635, 1845, 2887, 2773, 257, 816, 10167, 8062, 11, 36430, 11, 368, 15890, 34090, 296, 288, 13989, 51106], "temperature": 0.0, "avg_logprob": -0.2977476403264716, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.020579053089022636}, {"id": 151, "seek": 94124, "start": 956.08, "end": 963.36, "text": " esos pesos por lo tanto puedo calcularlo de esta manera, bien, entonces supongamos que", "tokens": [51106, 22411, 33204, 1515, 450, 10331, 21612, 2104, 17792, 752, 368, 5283, 13913, 11, 3610, 11, 13003, 9331, 556, 2151, 631, 51470], "temperature": 0.0, "avg_logprob": -0.2977476403264716, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.020579053089022636}, {"id": 152, "seek": 94124, "start": 963.36, "end": 970.4, "text": " tengo una arquitectura que tiene tres capas, \u00bfno? Tiene o m\u00e1s, digamos, tiene dos capas", "tokens": [51470, 13989, 2002, 40258, 5739, 2991, 631, 7066, 15890, 1410, 296, 11, 3841, 1771, 30, 314, 10174, 277, 3573, 11, 36430, 11, 7066, 4491, 1410, 296, 51822], "temperature": 0.0, "avg_logprob": -0.2977476403264716, "compression_ratio": 1.6682242990654206, "no_speech_prob": 0.020579053089022636}, {"id": 153, "seek": 97040, "start": 970.4, "end": 975.92, "text": " ocultas, entonces eso significa que si tengo dos capas ocultas voy a tener una", "tokens": [50364, 10409, 723, 296, 11, 13003, 7287, 19957, 631, 1511, 13989, 4491, 1410, 296, 10409, 723, 296, 7552, 257, 11640, 2002, 50640], "temperature": 0.0, "avg_logprob": -0.3549332011829723, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.09900778532028198}, {"id": 154, "seek": 97040, "start": 975.92, "end": 980.28, "text": " matriz de pesos, \u00bfd\u00f3nde le voy a llamar dole 1 y una matriz de pesos, que le voy a llamar", "tokens": [50640, 3803, 24959, 368, 33204, 11, 3841, 67, 812, 16404, 476, 7552, 257, 16848, 289, 360, 306, 502, 288, 2002, 3803, 24959, 368, 33204, 11, 631, 476, 7552, 257, 16848, 289, 50858], "temperature": 0.0, "avg_logprob": -0.3549332011829723, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.09900778532028198}, {"id": 155, "seek": 97040, "start": 980.28, "end": 987.56, "text": " dole 2, entonces luego va a venir un vector X que va a ser un vector que tiene un mont\u00f3n", "tokens": [50858, 360, 306, 568, 11, 13003, 17222, 2773, 257, 20817, 517, 8062, 1783, 631, 2773, 257, 816, 517, 8062, 631, 7066, 517, 45259, 51222], "temperature": 0.0, "avg_logprob": -0.3549332011829723, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.09900778532028198}, {"id": 156, "seek": 97040, "start": 987.56, "end": 996.1999999999999, "text": " detr\u00e1s, \u00bfno? X1 hasta XL, esta es un vector, quiero ver cu\u00e1l va a ser la salida de la", "tokens": [51222, 1141, 17168, 11, 3841, 1771, 30, 1783, 16, 10764, 1783, 43, 11, 5283, 785, 517, 8062, 11, 16811, 1306, 44318, 2773, 257, 816, 635, 1845, 2887, 368, 635, 51654], "temperature": 0.0, "avg_logprob": -0.3549332011829723, "compression_ratio": 1.7192118226600985, "no_speech_prob": 0.09900778532028198}, {"id": 157, "seek": 99620, "start": 996.2, "end": 1003.24, "text": " red suponiendo que tengo una capa de pesos dole 1 con una funci\u00f3n de activaci\u00f3n sigma 1 y una", "tokens": [50364, 2182, 9331, 266, 7304, 631, 13989, 2002, 1410, 64, 368, 33204, 360, 306, 502, 416, 2002, 43735, 368, 2430, 3482, 12771, 502, 288, 2002, 50716], "temperature": 0.0, "avg_logprob": -0.29273182636982686, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.08020277321338654}, {"id": 158, "seek": 99620, "start": 1003.24, "end": 1008.24, "text": " capa de pesos, le dedo con una funci\u00f3n de activaci\u00f3n sigma 2. \u00bfC\u00f3mo me quedar\u00eda la salida", "tokens": [50716, 1410, 64, 368, 33204, 11, 476, 4172, 78, 416, 2002, 43735, 368, 2430, 3482, 12771, 568, 13, 3841, 28342, 385, 13617, 21178, 635, 1845, 2887, 50966], "temperature": 0.0, "avg_logprob": -0.29273182636982686, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.08020277321338654}, {"id": 159, "seek": 99620, "start": 1008.24, "end": 1017.48, "text": " de la red? Vamos, \u00bfcu\u00e1l ser\u00eda la formulada para la salida de la red? Vamos a llamarle", "tokens": [50966, 368, 635, 2182, 30, 10894, 11, 3841, 12032, 11447, 23679, 635, 49990, 1538, 1690, 635, 1845, 2887, 368, 635, 2182, 30, 10894, 257, 16848, 36153, 51428], "temperature": 0.0, "avg_logprob": -0.29273182636982686, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.08020277321338654}, {"id": 160, "seek": 99620, "start": 1017.48, "end": 1025.6000000000001, "text": " RN de X a la salida de esta red, que es una red que tiene, dos capas ocultas y tienes", "tokens": [51428, 497, 45, 368, 1783, 257, 635, 1845, 2887, 368, 5283, 2182, 11, 631, 785, 2002, 2182, 631, 7066, 11, 4491, 1410, 296, 10409, 723, 296, 288, 20716, 51834], "temperature": 0.0, "avg_logprob": -0.29273182636982686, "compression_ratio": 1.806930693069307, "no_speech_prob": 0.08020277321338654}, {"id": 161, "seek": 102560, "start": 1025.6, "end": 1045.1999999999998, "text": " la estructura, \u00bfno? \u00bfQu\u00e9 le parece? S\u00ed, ah\u00ed est\u00e1, aqu\u00ed es por dole 1 y esto le aplicamos", "tokens": [50364, 635, 43935, 2991, 11, 3841, 1771, 30, 3841, 15137, 476, 14120, 30, 12375, 11, 12571, 3192, 11, 6661, 785, 1515, 360, 306, 502, 288, 7433, 476, 18221, 2151, 51344], "temperature": 0.0, "avg_logprob": -0.5800513574632548, "compression_ratio": 1.3703703703703705, "no_speech_prob": 0.011881315149366856}, {"id": 162, "seek": 102560, "start": 1045.1999999999998, "end": 1055.48, "text": " sigma 1, ah\u00ed est\u00e1, ah\u00ed est\u00e1, la hacemos dole 2 y le pasamos sigma 2, exacto, entonces", "tokens": [51344, 12771, 502, 11, 12571, 3192, 11, 12571, 3192, 11, 635, 33839, 360, 306, 568, 288, 476, 1736, 2151, 12771, 568, 11, 1900, 78, 11, 13003, 51858], "temperature": 0.0, "avg_logprob": -0.5800513574632548, "compression_ratio": 1.3703703703703705, "no_speech_prob": 0.011881315149366856}, {"id": 163, "seek": 105548, "start": 1055.48, "end": 1061.84, "text": " eso ser\u00eda, digamos, la ecuaci\u00f3n que te queda de una arquitectura con dos capas, dos capas", "tokens": [50364, 7287, 23679, 11, 36430, 11, 635, 11437, 84, 3482, 631, 535, 23314, 368, 2002, 40258, 5739, 2991, 416, 4491, 1410, 296, 11, 4491, 1410, 296, 50682], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 164, "seek": 105548, "start": 1061.84, "end": 1067.56, "text": " ocultas y la salida, se calcular\u00eda esta manera, tenemos el vector X, el vector que le", "tokens": [50682, 10409, 723, 296, 288, 635, 1845, 2887, 11, 369, 4322, 21178, 5283, 13913, 11, 9914, 806, 8062, 1783, 11, 806, 8062, 631, 476, 50968], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 165, "seek": 105548, "start": 1067.56, "end": 1071.8, "text": " multiplicamos por los pesos de la capa 1, despu\u00e9s le pasamos la funci\u00f3n de la derivaci\u00f3n,", "tokens": [50968, 17596, 2151, 1515, 1750, 33204, 368, 635, 1410, 64, 502, 11, 15283, 476, 1736, 2151, 635, 43735, 368, 635, 10151, 3482, 11, 51180], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 166, "seek": 105548, "start": 1071.8, "end": 1075.16, "text": " ah\u00ed se resulta o le multiplicamos por los pesos de la capa 2 y le aplicamos la funci\u00f3n", "tokens": [51180, 12571, 369, 1874, 64, 277, 476, 17596, 2151, 1515, 1750, 33204, 368, 635, 1410, 64, 568, 288, 476, 18221, 2151, 635, 43735, 51348], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 167, "seek": 105548, "start": 1075.16, "end": 1079.48, "text": " de activaci\u00f3n y est\u00e1 y esa es la salida, si tuvieron m\u00e1s capas, si esto fuera un parcer", "tokens": [51348, 368, 2430, 3482, 288, 3192, 288, 11342, 785, 635, 1845, 2887, 11, 1511, 38177, 14440, 3573, 1410, 296, 11, 1511, 7433, 24818, 517, 971, 1776, 51564], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 168, "seek": 105548, "start": 1079.48, "end": 1083.96, "text": " pero multiplicapa de 30 a cada pasio, entonces tendr\u00edamos como m\u00e1s sanidad viendo esto pero", "tokens": [51564, 4768, 17596, 7961, 368, 2217, 257, 8411, 1736, 1004, 11, 13003, 3928, 81, 16275, 2617, 3573, 6645, 4580, 34506, 7433, 4768, 51788], "temperature": 0.0, "avg_logprob": -0.38542496530633225, "compression_ratio": 1.9257950530035335, "no_speech_prob": 0.04079553484916687}, {"id": 169, "seek": 108396, "start": 1083.96, "end": 1091.72, "text": " m\u00e1s o menos es lo mismo, bien, entonces \u00bfQu\u00e9 pasar\u00eda si estas funciones de activaci\u00f3n", "tokens": [50364, 3573, 277, 8902, 785, 450, 12461, 11, 3610, 11, 13003, 3841, 15137, 1736, 21178, 1511, 13897, 1019, 23469, 368, 2430, 3482, 50752], "temperature": 0.0, "avg_logprob": -0.3991225106375558, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.05195434018969536}, {"id": 170, "seek": 108396, "start": 1091.72, "end": 1100.8400000000001, "text": " fueran la funci\u00f3n identidad o fueran funciones lineales como este multiplicar por 4, algo", "tokens": [50752, 17669, 282, 635, 43735, 2473, 4580, 277, 17669, 282, 1019, 23469, 1622, 4229, 2617, 4065, 17596, 289, 1515, 1017, 11, 8655, 51208], "temperature": 0.0, "avg_logprob": -0.3991225106375558, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.05195434018969536}, {"id": 171, "seek": 108396, "start": 1100.8400000000001, "end": 1104.8, "text": " del estilo de ambos, \u00bfQu\u00e9 pasar\u00eda en ese caso?", "tokens": [51208, 1103, 37470, 368, 41425, 11, 3841, 15137, 1736, 21178, 465, 10167, 9666, 30, 51406], "temperature": 0.0, "avg_logprob": -0.3991225106375558, "compression_ratio": 1.4528301886792452, "no_speech_prob": 0.05195434018969536}, {"id": 172, "seek": 110480, "start": 1104.8, "end": 1113.56, "text": " A esta, en ese caso, si esto fuera la identidad o si fuera multiplicada por una constante", "tokens": [50364, 316, 5283, 11, 465, 10167, 9666, 11, 1511, 7433, 24818, 635, 2473, 4580, 277, 1511, 24818, 17596, 1538, 1515, 2002, 47343, 50802], "temperature": 0.0, "avg_logprob": -0.3675992001769363, "compression_ratio": 1.8125, "no_speech_prob": 0.04111152142286301}, {"id": 173, "seek": 110480, "start": 1113.56, "end": 1117.8, "text": " pero supongamos que fuera la funci\u00f3n identidad, entonces ac\u00e1 esto me dar\u00eda lo mismo que", "tokens": [50802, 4768, 9331, 556, 2151, 631, 24818, 635, 43735, 2473, 4580, 11, 13003, 23496, 7433, 385, 4072, 2686, 450, 12461, 631, 51014], "temperature": 0.0, "avg_logprob": -0.3675992001769363, "compression_ratio": 1.8125, "no_speech_prob": 0.04111152142286301}, {"id": 174, "seek": 110480, "start": 1117.8, "end": 1124.08, "text": " hacer X por doble de 1 por doble de 2, que es lo mismo que hacer X por una cosa que", "tokens": [51014, 6720, 1783, 1515, 360, 638, 368, 502, 1515, 360, 638, 368, 568, 11, 631, 785, 450, 12461, 631, 6720, 1783, 1515, 2002, 10163, 631, 51328], "temperature": 0.0, "avg_logprob": -0.3675992001769363, "compression_ratio": 1.8125, "no_speech_prob": 0.04111152142286301}, {"id": 175, "seek": 110480, "start": 1124.08, "end": 1129.84, "text": " es un producto entre dos matrices y un producto entre dos matrices vea otra matriz,", "tokens": [51328, 785, 517, 47583, 3962, 4491, 32284, 288, 517, 47583, 3962, 4491, 32284, 1241, 64, 13623, 3803, 24959, 11, 51616], "temperature": 0.0, "avg_logprob": -0.3675992001769363, "compression_ratio": 1.8125, "no_speech_prob": 0.04111152142286301}, {"id": 176, "seek": 112984, "start": 1129.84, "end": 1134.76, "text": " entonces si estas funciones fueran una funci\u00f3n identidad o fuera una funci\u00f3n lineal o", "tokens": [50364, 13003, 1511, 13897, 1019, 23469, 17669, 282, 2002, 43735, 2473, 4580, 277, 24818, 2002, 43735, 1622, 304, 277, 50610], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 177, "seek": 112984, "start": 1134.76, "end": 1140.76, "text": " fuera una funci\u00f3n de esas diamos simples, entonces todo esto ser\u00eda una cuesti\u00f3n lineal o", "tokens": [50610, 24818, 2002, 43735, 368, 23388, 1026, 2151, 21730, 11, 13003, 5149, 7433, 23679, 2002, 50216, 1622, 304, 277, 50910], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 178, "seek": 112984, "start": 1140.76, "end": 1145.36, "text": " sea yo podr\u00eda rescribirlo siempre como el producto entre un vector y una matriz, que es un", "tokens": [50910, 4158, 5290, 27246, 725, 1142, 10119, 752, 12758, 2617, 806, 47583, 3962, 517, 8062, 288, 2002, 3803, 24959, 11, 631, 785, 517, 51140], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 179, "seek": 112984, "start": 1145.36, "end": 1151.36, "text": " sistema lineal, bien, esa es la raz\u00f3n por la cual se necesita que estas cosas ac\u00e1 sean", "tokens": [51140, 13245, 1622, 304, 11, 3610, 11, 11342, 785, 635, 38310, 1515, 635, 10911, 369, 45485, 631, 13897, 12218, 23496, 37670, 51440], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 180, "seek": 112984, "start": 1151.36, "end": 1154.6799999999998, "text": " no lineales, que era lo que le dec\u00eda que bueno, casi que el \u00fanico requisito que tienen", "tokens": [51440, 572, 1622, 4229, 11, 631, 4249, 450, 631, 476, 37599, 631, 11974, 11, 22567, 631, 806, 26113, 49878, 3528, 631, 12536, 51606], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 181, "seek": 112984, "start": 1154.6799999999998, "end": 1158.76, "text": " que tener estas funciones de activaci\u00f3n es que sean no lineales porque si son lineales cuando", "tokens": [51606, 631, 11640, 13897, 1019, 23469, 368, 2430, 3482, 785, 631, 37670, 572, 1622, 4229, 4021, 1511, 1872, 1622, 4229, 7767, 51810], "temperature": 0.0, "avg_logprob": -0.27651056848970573, "compression_ratio": 1.9710144927536233, "no_speech_prob": 0.06400468200445175}, {"id": 182, "seek": 115876, "start": 1158.76, "end": 1163.32, "text": " yo empiezo a arquitecturar estas cosas en capas me queda simplemente un producto de matrices,", "tokens": [50364, 5290, 4012, 414, 4765, 257, 40258, 5739, 28586, 13897, 12218, 465, 1410, 296, 385, 23314, 33190, 517, 47583, 368, 32284, 11, 50592], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 183, "seek": 115876, "start": 1163.32, "end": 1167.4, "text": " porque me interesa que sean no lineales y porque o sea me molesta que esto sean un sistema", "tokens": [50592, 4021, 385, 728, 13708, 631, 37670, 572, 1622, 4229, 288, 4021, 277, 4158, 385, 8015, 7841, 631, 7433, 37670, 517, 13245, 50796], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 184, "seek": 115876, "start": 1167.4, "end": 1172.12, "text": " lineal, porque si yo tengo un sistema lineal digamos si yo tengo que el resultado de mi", "tokens": [50796, 1622, 304, 11, 4021, 1511, 5290, 13989, 517, 13245, 1622, 304, 36430, 1511, 5290, 13989, 631, 806, 28047, 368, 2752, 51032], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 185, "seek": 115876, "start": 1172.12, "end": 1176.6, "text": " red lo puedes presar como X por una matriz, entonces bueno, hay cierta clase de problemas,", "tokens": [51032, 2182, 450, 19010, 1183, 289, 2617, 1783, 1515, 2002, 3803, 24959, 11, 13003, 11974, 11, 4842, 39769, 1328, 44578, 368, 20720, 11, 51256], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 186, "seek": 115876, "start": 1176.6, "end": 1179.8799999999999, "text": " que voy a poder resolver, pero todos los problemas que son no lineales, todos los problemas", "tokens": [51256, 631, 7552, 257, 8152, 34480, 11, 4768, 6321, 1750, 20720, 631, 1872, 572, 1622, 4229, 11, 6321, 1750, 20720, 51420], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 187, "seek": 115876, "start": 1179.8799999999999, "end": 1184.8, "text": " que no se pueden capturar por una estructura lineal, entonces no lo puedo resolver, bien,", "tokens": [51420, 631, 572, 369, 14714, 3770, 28586, 1515, 2002, 43935, 2991, 1622, 304, 11, 13003, 572, 450, 21612, 34480, 11, 3610, 11, 51666], "temperature": 0.0, "avg_logprob": -0.28341658219047217, "compression_ratio": 2.0036764705882355, "no_speech_prob": 0.04124186187982559}, {"id": 188, "seek": 118480, "start": 1184.8, "end": 1194.24, "text": " hay, s\u00ed, incluso sin la activaci\u00f3n, o sea, es una renebrona que no tiene activaci\u00f3n", "tokens": [50364, 4842, 11, 8600, 11, 24018, 3343, 635, 2430, 3482, 11, 277, 4158, 11, 785, 2002, 319, 716, 1443, 4037, 631, 572, 7066, 2430, 3482, 50836], "temperature": 0.0, "avg_logprob": -0.40577898968707077, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.04804789274930954}, {"id": 189, "seek": 118480, "start": 1194.24, "end": 1200.76, "text": " ninguna, o sea simplemente es multiplicar un vector por un conjunto de pesos, bien, entonces", "tokens": [50836, 36073, 11, 277, 4158, 33190, 785, 17596, 289, 517, 8062, 1515, 517, 37776, 368, 33204, 11, 3610, 11, 13003, 51162], "temperature": 0.0, "avg_logprob": -0.40577898968707077, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.04804789274930954}, {"id": 190, "seek": 118480, "start": 1200.76, "end": 1205.56, "text": " si yo tengo solamente una funci\u00f3n lineal hay un conjunto de problemas que puedo", "tokens": [51162, 1511, 5290, 13989, 27814, 2002, 43735, 1622, 304, 4842, 517, 37776, 368, 20720, 631, 21612, 51402], "temperature": 0.0, "avg_logprob": -0.40577898968707077, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.04804789274930954}, {"id": 191, "seek": 118480, "start": 1205.56, "end": 1211.08, "text": " modilar, es verdad, pero no son todos y de hecho no lo vamos a ver pero hay una demostraci\u00f3n", "tokens": [51402, 1072, 2202, 11, 785, 13692, 11, 4768, 572, 1872, 6321, 288, 368, 13064, 572, 450, 5295, 257, 1306, 4768, 4842, 2002, 41556, 46205, 51678], "temperature": 0.0, "avg_logprob": -0.40577898968707077, "compression_ratio": 1.669811320754717, "no_speech_prob": 0.04804789274930954}, {"id": 192, "seek": 121108, "start": 1211.08, "end": 1216.76, "text": " que dice que teniendo funciones activaciones no lineales, alcanza incluso a tener una sola", "tokens": [50364, 631, 10313, 631, 2064, 7304, 1019, 23469, 2430, 9188, 572, 1622, 4229, 11, 419, 7035, 2394, 24018, 257, 11640, 2002, 34162, 50648], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 193, "seek": 121108, "start": 1216.76, "end": 1221.1999999999998, "text": " capa oculta y alguna cocina m\u00e1s para modilar cualquier tipo de funci\u00f3n que hab\u00edamos", "tokens": [50648, 1410, 64, 10409, 723, 64, 288, 20651, 21047, 1426, 3573, 1690, 1072, 2202, 21004, 9746, 368, 43735, 631, 3025, 16275, 50870], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 194, "seek": 121108, "start": 1221.1999999999998, "end": 1224.56, "text": " interesa, digamos, con ciertas propiedades, por lo menos que sea cont\u00ednua, en centro", "tokens": [50870, 728, 13708, 11, 36430, 11, 416, 49252, 296, 2365, 1091, 2977, 11, 1515, 450, 8902, 631, 4158, 660, 10973, 4398, 11, 465, 24607, 51038], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 195, "seek": 121108, "start": 1224.56, "end": 1230.1599999999999, "text": " intervalo, etc\u00e9tera, pero a sumiendo ciertas propiedades bastante normales, es posible", "tokens": [51038, 15035, 78, 11, 5183, 526, 23833, 11, 4768, 257, 2408, 7304, 49252, 296, 2365, 1091, 2977, 14651, 2710, 279, 11, 785, 26644, 51318], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 196, "seek": 121108, "start": 1230.1599999999999, "end": 1233.56, "text": " incluso con una sola capa, con una cantidad arbitraria de neuronas, modilar cualquier", "tokens": [51318, 24018, 416, 2002, 34162, 1410, 64, 11, 416, 2002, 33757, 14931, 5352, 654, 368, 34090, 296, 11, 1072, 2202, 21004, 51488], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 197, "seek": 121108, "start": 1233.56, "end": 1239.36, "text": " funci\u00f3n posible, y es un poco el poder que tiene las renevernales en realidad, son", "tokens": [51488, 43735, 26644, 11, 288, 785, 517, 10639, 806, 8152, 631, 7066, 2439, 319, 716, 1659, 4229, 465, 25635, 11, 1872, 51778], "temperature": 0.0, "avg_logprob": -0.38247032165527345, "compression_ratio": 1.8090277777777777, "no_speech_prob": 0.14950811862945557}, {"id": 198, "seek": 123936, "start": 1239.36, "end": 1244.8, "text": " como suficientemente flexibles como para modilar cualquier cosa, cosa que cuando ve\u00edamos", "tokens": [50364, 2617, 459, 1786, 1196, 16288, 5896, 14428, 2617, 1690, 1072, 2202, 21004, 10163, 11, 10163, 631, 7767, 1241, 16275, 50636], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 199, "seek": 123936, "start": 1244.8, "end": 1249.4799999999998, "text": " bueno, hay valles, era un ejemplo que modilar a ciertos tipos de problemas, si miran regresi\u00f3n", "tokens": [50636, 11974, 11, 4842, 371, 37927, 11, 4249, 517, 13358, 631, 1072, 2202, 257, 49252, 329, 37105, 368, 20720, 11, 1511, 3149, 282, 47108, 2560, 50870], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 200, "seek": 123936, "start": 1249.4799999999998, "end": 1253.6, "text": " log\u00edstica, podemos delarse a dos tipos de problemas, pero algunos no, bueno, las renevernales", "tokens": [50870, 3565, 19512, 2262, 11, 12234, 1103, 11668, 257, 4491, 37105, 368, 20720, 11, 4768, 21078, 572, 11, 11974, 11, 2439, 319, 716, 1659, 4229, 51076], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 201, "seek": 123936, "start": 1253.6, "end": 1261.52, "text": " en calidad son super flexibles y podemos modilar cualquier cosa, entonces, sabemos que para", "tokens": [51076, 465, 42955, 1872, 1687, 5896, 14428, 288, 12234, 1072, 2202, 21004, 10163, 11, 13003, 11, 27200, 631, 1690, 51472], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 202, "seek": 123936, "start": 1261.52, "end": 1265.52, "text": " cual casi cualquier funci\u00f3n que a una linteresa modilar existe una renebrona que podr\u00eda", "tokens": [51472, 10911, 22567, 21004, 43735, 631, 257, 2002, 287, 5106, 13708, 1072, 2202, 16304, 2002, 319, 716, 1443, 4037, 631, 27246, 51672], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 203, "seek": 123936, "start": 1265.52, "end": 1268.9599999999998, "text": " llegar a cumplir la composici\u00f3n de nivel de precisi\u00f3n, digamos ah\u00ed, teor\u00eda m\u00e1s que", "tokens": [51672, 24892, 257, 37483, 347, 635, 10199, 15534, 368, 24423, 368, 7974, 2560, 11, 36430, 12571, 11, 40238, 2686, 3573, 631, 51844], "temperature": 0.0, "avg_logprob": -0.3726254744495419, "compression_ratio": 1.8644067796610169, "no_speech_prob": 0.15952295064926147}, {"id": 204, "seek": 126896, "start": 1268.96, "end": 1275.16, "text": " vemos est\u00e1n, sin embargo, encontrar en la pr\u00e1ctica no es tan f\u00e1cil, o sea, sabemos que existe", "tokens": [50364, 20909, 10368, 11, 3343, 23955, 11, 17525, 465, 635, 27300, 29041, 572, 785, 7603, 17474, 11, 277, 4158, 11, 27200, 631, 16304, 50674], "temperature": 0.0, "avg_logprob": -0.33471548461914064, "compression_ratio": 1.786259541984733, "no_speech_prob": 0.012466447427868843}, {"id": 205, "seek": 126896, "start": 1275.16, "end": 1278.6000000000001, "text": " la familia de las renevernales hay alguna funci\u00f3n que me va a permitir a hacer todo lo", "tokens": [50674, 635, 24050, 368, 2439, 319, 716, 1659, 4229, 4842, 20651, 43735, 631, 385, 2773, 257, 46865, 257, 6720, 5149, 450, 50846], "temperature": 0.0, "avg_logprob": -0.33471548461914064, "compression_ratio": 1.786259541984733, "no_speech_prob": 0.012466447427868843}, {"id": 206, "seek": 126896, "start": 1278.6000000000001, "end": 1283.06, "text": " que quiera, pero bueno, de all\u00e1 encontrarla no est\u00e1 en sencillo, pero bueno, por lo menos", "tokens": [50846, 631, 421, 10609, 11, 4768, 11974, 11, 368, 30642, 17525, 875, 572, 3192, 465, 46749, 78, 11, 4768, 11974, 11, 1515, 450, 8902, 51069], "temperature": 0.0, "avg_logprob": -0.33471548461914064, "compression_ratio": 1.786259541984733, "no_speech_prob": 0.012466447427868843}, {"id": 207, "seek": 126896, "start": 1283.06, "end": 1288.8, "text": " sabemos que existe, igual con estas cosas que tenemos, o sea, sabiendo no m\u00e1s que arquitecturando", "tokens": [51069, 27200, 631, 16304, 11, 10953, 416, 13897, 12218, 631, 9914, 11, 277, 4158, 11, 5560, 7304, 572, 3573, 631, 40258, 5739, 374, 1806, 51356], "temperature": 0.0, "avg_logprob": -0.33471548461914064, "compression_ratio": 1.786259541984733, "no_speech_prob": 0.012466447427868843}, {"id": 208, "seek": 126896, "start": 1288.8, "end": 1293.44, "text": " en capas y teniendo la funci\u00f3n de activaci\u00f3n, no l\u00ednial en cada una, ya ten\u00e9s un mont\u00f3n", "tokens": [51356, 465, 1410, 296, 288, 2064, 7304, 635, 43735, 368, 2430, 3482, 11, 572, 287, 10973, 831, 465, 8411, 2002, 11, 2478, 2064, 2191, 517, 45259, 51588], "temperature": 0.0, "avg_logprob": -0.33471548461914064, "compression_ratio": 1.786259541984733, "no_speech_prob": 0.012466447427868843}, {"id": 209, "seek": 129344, "start": 1293.44, "end": 1299.88, "text": " de funciones interesantes que poden salir para modilar muchas cosas, bien, preguntas", "tokens": [50364, 368, 1019, 23469, 20157, 9327, 631, 2497, 268, 31514, 1690, 1072, 2202, 16072, 12218, 11, 3610, 11, 39722, 50686], "temperature": 0.0, "avg_logprob": -0.34432676434516907, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.04462430626153946}, {"id": 210, "seek": 129344, "start": 1299.88, "end": 1313.0, "text": " hasta ac\u00e1, bueno, esta es otra funci\u00f3n de activaci\u00f3n interesante que se conoce como", "tokens": [50686, 10764, 23496, 11, 11974, 11, 5283, 785, 13623, 43735, 368, 2430, 3482, 36396, 631, 369, 33029, 384, 2617, 51342], "temperature": 0.0, "avg_logprob": -0.34432676434516907, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.04462430626153946}, {"id": 211, "seek": 129344, "start": 1313.0, "end": 1318.8400000000001, "text": " la funci\u00f3n softmax, si utiliza para los problemas de clasificaci\u00f3n discritos, por ejemplo", "tokens": [51342, 635, 43735, 2787, 41167, 11, 1511, 4976, 13427, 1690, 1750, 20720, 368, 596, 296, 40802, 2983, 42887, 11, 1515, 13358, 51634], "temperature": 0.0, "avg_logprob": -0.34432676434516907, "compression_ratio": 1.5470588235294118, "no_speech_prob": 0.04462430626153946}, {"id": 212, "seek": 131884, "start": 1318.9199999999998, "end": 1324.9599999999998, "text": " y que van a tener en el segundo oligatorio, que bueno, es el problema de clasificaci\u00f3n", "tokens": [50368, 288, 631, 3161, 257, 11640, 465, 806, 17954, 2545, 328, 48028, 11, 631, 11974, 11, 785, 806, 12395, 368, 596, 296, 40802, 50670], "temperature": 0.0, "avg_logprob": -0.3759746932983398, "compression_ratio": 1.7416267942583732, "no_speech_prob": 0.2574222683906555}, {"id": 213, "seek": 131884, "start": 1324.9599999999998, "end": 1329.98, "text": " aruntuit y lo quiero clasificar en si es positivo, negativo, neutro o nada, no, tengo esas", "tokens": [50670, 594, 2760, 1983, 288, 450, 16811, 596, 296, 25625, 465, 1511, 785, 44710, 11, 2485, 18586, 11, 7989, 340, 277, 8096, 11, 572, 11, 13989, 23388, 50921], "temperature": 0.0, "avg_logprob": -0.3759746932983398, "compression_ratio": 1.7416267942583732, "no_speech_prob": 0.2574222683906555}, {"id": 214, "seek": 131884, "start": 1329.98, "end": 1335.1999999999998, "text": " cuatro classes, entonces, la funci\u00f3n de activaci\u00f3n softmax es como una generalizaci\u00f3n de la", "tokens": [50921, 28795, 5359, 11, 13003, 11, 635, 43735, 368, 2430, 3482, 2787, 41167, 785, 2617, 2002, 2674, 27603, 368, 635, 51182], "temperature": 0.0, "avg_logprob": -0.3759746932983398, "compression_ratio": 1.7416267942583732, "no_speech_prob": 0.2574222683906555}, {"id": 215, "seek": 131884, "start": 1335.1999999999998, "end": 1342.24, "text": " funci\u00f3n de la funci\u00f3n log\u00edstica, de la sigmoide, que se calcula esta manera dice bueno,", "tokens": [51182, 43735, 368, 635, 43735, 3565, 19512, 2262, 11, 368, 635, 4556, 3280, 482, 11, 631, 369, 4322, 64, 5283, 13913, 10313, 11974, 11, 51534], "temperature": 0.0, "avg_logprob": -0.3759746932983398, "compression_ratio": 1.7416267942583732, "no_speech_prob": 0.2574222683906555}, {"id": 216, "seek": 134224, "start": 1342.24, "end": 1348.56, "text": " eso asumo que los pesos de salida que son n\u00fameros reales van a formar una probabilidad,", "tokens": [50364, 7287, 382, 40904, 631, 1750, 33204, 368, 1845, 2887, 631, 1872, 36545, 957, 279, 3161, 257, 1254, 289, 2002, 31959, 4580, 11, 50680], "temperature": 0.0, "avg_logprob": -0.3732349548339844, "compression_ratio": 1.8326693227091633, "no_speech_prob": 0.07146760821342468}, {"id": 217, "seek": 134224, "start": 1348.56, "end": 1352.6, "text": " digamos, lo quiero transformar de una probabilidad, entonces lo que alguna esta manera, digo que", "tokens": [50680, 36430, 11, 450, 16811, 4088, 289, 368, 2002, 31959, 4580, 11, 13003, 450, 631, 20651, 5283, 13913, 11, 22990, 631, 50882], "temperature": 0.0, "avg_logprob": -0.3732349548339844, "compression_ratio": 1.8326693227091633, "no_speech_prob": 0.07146760821342468}, {"id": 218, "seek": 134224, "start": 1352.6, "end": 1361.32, "text": " el valor para isub y es a la asub y sobre la sumatoria de a la el resto, bien, esto solamente", "tokens": [50882, 806, 15367, 1690, 307, 836, 288, 785, 257, 635, 382, 836, 288, 5473, 635, 2408, 1639, 654, 368, 257, 635, 806, 28247, 11, 3610, 11, 7433, 27814, 51318], "temperature": 0.0, "avg_logprob": -0.3732349548339844, "compression_ratio": 1.8326693227091633, "no_speech_prob": 0.07146760821342468}, {"id": 219, "seek": 134224, "start": 1361.32, "end": 1366.04, "text": " para que lo tengan en cuenta es muy probable que si van a usar redes sociales en la segunda", "tokens": [51318, 1690, 631, 450, 46874, 465, 17868, 785, 5323, 21759, 631, 1511, 3161, 257, 14745, 16762, 29623, 465, 635, 21978, 51554], "temperature": 0.0, "avg_logprob": -0.3732349548339844, "compression_ratio": 1.8326693227091633, "no_speech_prob": 0.07146760821342468}, {"id": 220, "seek": 134224, "start": 1366.04, "end": 1371.48, "text": " tarea, tengas que utilizar al final una capa que se llama capas softmax, que es una capa", "tokens": [51554, 256, 35425, 11, 10370, 296, 631, 24060, 419, 2572, 2002, 1410, 64, 631, 369, 23272, 1410, 296, 2787, 41167, 11, 631, 785, 2002, 1410, 64, 51826], "temperature": 0.0, "avg_logprob": -0.3732349548339844, "compression_ratio": 1.8326693227091633, "no_speech_prob": 0.07146760821342468}, {"id": 221, "seek": 137148, "start": 1371.48, "end": 1375.44, "text": " que tiene una funci\u00f3n de activaci\u00f3n especial, que es serio para transformar las alidas en distribuci\u00f3n", "tokens": [50364, 631, 7066, 2002, 43735, 368, 2430, 3482, 15342, 11, 631, 785, 49531, 1690, 4088, 289, 2439, 419, 11382, 465, 4400, 30813, 50562], "temperature": 0.0, "avg_logprob": -0.3965150918533553, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.012460739351809025}, {"id": 222, "seek": 137148, "start": 1375.44, "end": 1390.32, "text": " de probabilidades, s\u00ed, y la mayor, si tiene una distribuci\u00f3n de probabilidades y bueno,", "tokens": [50562, 368, 31959, 10284, 11, 8600, 11, 288, 635, 10120, 11, 1511, 7066, 2002, 4400, 30813, 368, 31959, 10284, 288, 11974, 11, 51306], "temperature": 0.0, "avg_logprob": -0.3965150918533553, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.012460739351809025}, {"id": 223, "seek": 137148, "start": 1390.32, "end": 1401.16, "text": " la sociedad que tiene probabilidad mayor, ah\u00ed tienes que tener una, ser\u00eda como una", "tokens": [51306, 635, 42306, 631, 7066, 31959, 4580, 10120, 11, 12571, 20716, 631, 11640, 2002, 11, 23679, 2617, 2002, 51848], "temperature": 0.0, "avg_logprob": -0.3965150918533553, "compression_ratio": 1.78343949044586, "no_speech_prob": 0.012460739351809025}, {"id": 224, "seek": 140116, "start": 1401.16, "end": 1407.28, "text": " log\u00edstica independiente por cada una, entonces, si es mayor que esero, digo que es valido", "tokens": [50364, 3565, 19512, 2262, 4819, 8413, 1515, 8411, 2002, 11, 13003, 11, 1511, 785, 10120, 631, 785, 2032, 11, 22990, 631, 785, 1323, 2925, 50670], "temperature": 0.0, "avg_logprob": -0.40038737684193226, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.038623273372650146}, {"id": 225, "seek": 140116, "start": 1407.28, "end": 1413.0, "text": " y no, o sea, si puedo tener m\u00e1s de un ley vela a la vez, ah\u00ed tendr\u00edas que hacer otra cosa,", "tokens": [50670, 288, 572, 11, 277, 4158, 11, 1511, 21612, 11640, 3573, 368, 517, 27786, 14610, 64, 257, 635, 5715, 11, 12571, 3928, 81, 10025, 631, 6720, 13623, 10163, 11, 50956], "temperature": 0.0, "avg_logprob": -0.40038737684193226, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.038623273372650146}, {"id": 226, "seek": 140116, "start": 1413.0, "end": 1416.48, "text": " en softmax va a intentar que sea una distribuci\u00f3n de probabilidades, entonces probablemente", "tokens": [50956, 465, 2787, 41167, 2773, 257, 46596, 631, 4158, 2002, 4400, 30813, 368, 31959, 10284, 11, 13003, 21759, 4082, 51130], "temperature": 0.0, "avg_logprob": -0.40038737684193226, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.038623273372650146}, {"id": 227, "seek": 140116, "start": 1416.48, "end": 1427.24, "text": " te queda una clase que gane y las dem\u00e1s sea mucho m\u00e1s bajitas, bien, bueno, entonces,", "tokens": [51130, 535, 23314, 2002, 44578, 631, 290, 1929, 288, 2439, 34682, 4158, 9824, 3573, 23589, 14182, 11, 3610, 11, 11974, 11, 13003, 11, 51668], "temperature": 0.0, "avg_logprob": -0.40038737684193226, "compression_ratio": 1.6294642857142858, "no_speech_prob": 0.038623273372650146}, {"id": 228, "seek": 142724, "start": 1427.24, "end": 1431.48, "text": " recuerden que estamos, siempre utilizando en un n\u00famero, por ahora no hemos visto nada del", "tokens": [50364, 39092, 1556, 631, 10382, 11, 12758, 19906, 1806, 465, 517, 14959, 11, 1515, 9923, 572, 15396, 17558, 8096, 1103, 50576], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 229, "seek": 142724, "start": 1431.48, "end": 1435.48, "text": " lenguaje, eso lo vamos a ver un poco m\u00e1s adelante ahora, son todos n\u00fameros, en la entrada,", "tokens": [50576, 35044, 84, 11153, 11, 7287, 450, 5295, 257, 1306, 517, 10639, 3573, 40214, 9923, 11, 1872, 6321, 36545, 11, 465, 635, 37119, 11, 50776], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 230, "seek": 142724, "start": 1435.48, "end": 1441.44, "text": " me viene en n\u00fameros reales, en los pesos tengo n\u00fameros reales, a multiplicaci\u00f3n, el", "tokens": [50776, 385, 19561, 465, 36545, 957, 279, 11, 465, 1750, 33204, 13989, 36545, 957, 279, 11, 257, 17596, 3482, 11, 806, 51074], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 231, "seek": 142724, "start": 1441.44, "end": 1445.04, "text": " caso, funciona activaci\u00f3n, etc\u00e9tera y me da otro vector de n\u00fameros reales, o sea, la salida", "tokens": [51074, 9666, 11, 26210, 2430, 3482, 11, 5183, 526, 23833, 288, 385, 1120, 11921, 8062, 368, 36545, 957, 279, 11, 277, 4158, 11, 635, 1845, 2887, 51254], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 232, "seek": 142724, "start": 1445.04, "end": 1449.1200000000001, "text": " esto va a ser un vector en n\u00fameros reales, tener en cuenta que cada una de estas cosas van", "tokens": [51254, 7433, 2773, 257, 816, 517, 8062, 465, 36545, 957, 279, 11, 11640, 465, 17868, 631, 8411, 2002, 368, 13897, 12218, 3161, 51458], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 233, "seek": 142724, "start": 1449.1200000000001, "end": 1453.92, "text": " a tener sus dimensiones, no, yo voy a tener ac\u00e1 ten\u00eda una entrada que ten\u00eda cuatro", "tokens": [51458, 257, 11640, 3291, 10139, 279, 11, 572, 11, 5290, 7552, 257, 11640, 23496, 23718, 2002, 37119, 631, 23718, 28795, 51698], "temperature": 0.0, "avg_logprob": -0.32490945369639296, "compression_ratio": 1.8595890410958904, "no_speech_prob": 0.10703761875629425}, {"id": 234, "seek": 145392, "start": 1453.92, "end": 1459.3200000000002, "text": " vectores, para un cuatro valores, una matriz que ten\u00eda cuatro por tres, entonces al multiplicarlo", "tokens": [50364, 8062, 279, 11, 1690, 517, 28795, 38790, 11, 2002, 3803, 24959, 631, 23718, 28795, 1515, 15890, 11, 13003, 419, 17596, 19457, 50634], "temperature": 0.0, "avg_logprob": -0.3292616707938058, "compression_ratio": 1.7383177570093458, "no_speech_prob": 0.1904274821281433}, {"id": 235, "seek": 145392, "start": 1459.3200000000002, "end": 1464.48, "text": " me devuelve tres, si la siguiente capa es de tres por ocho, entonces me va a volver ocho,", "tokens": [50634, 385, 1905, 3483, 303, 15890, 11, 1511, 635, 25666, 1410, 64, 785, 368, 15890, 1515, 3795, 78, 11, 13003, 385, 2773, 257, 33998, 3795, 78, 11, 50892], "temperature": 0.0, "avg_logprob": -0.3292616707938058, "compression_ratio": 1.7383177570093458, "no_speech_prob": 0.1904274821281433}, {"id": 236, "seek": 145392, "start": 1464.48, "end": 1469.64, "text": " y as\u00ed, o sea, los tama\u00f1os de las matrices o sea, los tama\u00f1os de las capas tienen que", "tokens": [50892, 288, 8582, 11, 277, 4158, 11, 1750, 45342, 8242, 368, 2439, 32284, 277, 4158, 11, 1750, 45342, 8242, 368, 2439, 1410, 296, 12536, 631, 51150], "temperature": 0.0, "avg_logprob": -0.3292616707938058, "compression_ratio": 1.7383177570093458, "no_speech_prob": 0.1904274821281433}, {"id": 237, "seek": 145392, "start": 1469.64, "end": 1478.0800000000002, "text": " coincidir, pero en definitiva son todos vectores, no, por ahora esto es una c\u00e1lculo utilizando", "tokens": [51150, 13001, 33031, 11, 4768, 465, 28781, 5931, 1872, 6321, 8062, 279, 11, 572, 11, 1515, 9923, 7433, 785, 2002, 6476, 75, 25436, 19906, 1806, 51572], "temperature": 0.0, "avg_logprob": -0.3292616707938058, "compression_ratio": 1.7383177570093458, "no_speech_prob": 0.1904274821281433}, {"id": 238, "seek": 147808, "start": 1478.08, "end": 1485.12, "text": " c\u00e1lculo en un m\u00e9dico vectorial, entonces vamos a hablar un poco de c\u00f3mo se entrenan", "tokens": [50364, 6476, 75, 25436, 465, 517, 44853, 8062, 831, 11, 13003, 5295, 257, 21014, 517, 10639, 368, 12826, 369, 45069, 282, 50716], "temperature": 0.0, "avg_logprob": -0.29834419439646825, "compression_ratio": 1.8930041152263375, "no_speech_prob": 0.162806898355484}, {"id": 239, "seek": 147808, "start": 1485.12, "end": 1490.36, "text": " estas redes, y vamos a pensarlo de la siguiente manera, como estos son m\u00e9todos de aprendizaje", "tokens": [50716, 13897, 16762, 11, 288, 5295, 257, 18321, 752, 368, 635, 25666, 13913, 11, 2617, 12585, 1872, 20275, 378, 329, 368, 21003, 590, 11153, 50978], "temperature": 0.0, "avg_logprob": -0.29834419439646825, "compression_ratio": 1.8930041152263375, "no_speech_prob": 0.162806898355484}, {"id": 240, "seek": 147808, "start": 1490.36, "end": 1494.9199999999998, "text": " autom\u00e1tico, se voy a tener, como vimos en las clasi\u00f3nteriores, voy a tener un conjunto", "tokens": [50978, 3553, 28234, 11, 369, 7552, 257, 11640, 11, 2617, 49266, 465, 2439, 596, 296, 2560, 34345, 2706, 11, 7552, 257, 11640, 517, 37776, 51206], "temperature": 0.0, "avg_logprob": -0.29834419439646825, "compression_ratio": 1.8930041152263375, "no_speech_prob": 0.162806898355484}, {"id": 241, "seek": 147808, "start": 1494.9199999999998, "end": 1500.3999999999999, "text": " entrenamiento, un conjunto de desarrollo, un conjunto de test, entonces supongo que yo tengo un", "tokens": [51206, 45069, 16971, 11, 517, 37776, 368, 38295, 11, 517, 37776, 368, 1500, 11, 13003, 9331, 25729, 631, 5290, 13989, 517, 51480], "temperature": 0.0, "avg_logprob": -0.29834419439646825, "compression_ratio": 1.8930041152263375, "no_speech_prob": 0.162806898355484}, {"id": 242, "seek": 147808, "start": 1500.3999999999999, "end": 1505.1999999999998, "text": " conjunto de entrenamiento que tiene en ejemplos, o sea, en ejemplos significa que voy a tener", "tokens": [51480, 37776, 368, 45069, 16971, 631, 7066, 465, 10012, 5895, 329, 11, 277, 4158, 11, 465, 10012, 5895, 329, 19957, 631, 7552, 257, 11640, 51720], "temperature": 0.0, "avg_logprob": -0.29834419439646825, "compression_ratio": 1.8930041152263375, "no_speech_prob": 0.162806898355484}, {"id": 243, "seek": 150520, "start": 1505.2, "end": 1513.44, "text": " en estos sectores y enezalidas distintas, que les voy a llamar s\u00ed, entonces los vectores", "tokens": [50364, 465, 12585, 22610, 2706, 288, 465, 4371, 304, 11382, 31489, 296, 11, 631, 1512, 7552, 257, 16848, 289, 8600, 11, 13003, 1750, 1241, 349, 2706, 50776], "temperature": 0.0, "avg_logprob": -0.36251585060190933, "compression_ratio": 1.79, "no_speech_prob": 0.060108888894319534}, {"id": 244, "seek": 150520, "start": 1513.44, "end": 1519.1200000000001, "text": " entre las onestos, los vectores de salida son estos de ac\u00e1, y yo tengo que tratar de ver si", "tokens": [50776, 3962, 2439, 322, 377, 329, 11, 1750, 1241, 349, 2706, 368, 1845, 2887, 1872, 12585, 368, 23496, 11, 288, 5290, 13989, 631, 42549, 368, 1306, 1511, 51060], "temperature": 0.0, "avg_logprob": -0.36251585060190933, "compression_ratio": 1.79, "no_speech_prob": 0.060108888894319534}, {"id": 245, "seek": 150520, "start": 1519.1200000000001, "end": 1528.16, "text": " la salida se parece al entrar, entonces supongamos que la salida es solamente un valor,", "tokens": [51060, 635, 1845, 2887, 369, 14120, 419, 20913, 11, 13003, 9331, 266, 70, 2151, 631, 635, 1845, 2887, 785, 27814, 517, 15367, 11, 51512], "temperature": 0.0, "avg_logprob": -0.36251585060190933, "compression_ratio": 1.79, "no_speech_prob": 0.060108888894319534}, {"id": 246, "seek": 150520, "start": 1528.16, "end": 1534.88, "text": " o sea para simplificar, vamos a asumir que la entrada de la red son es un vector de, de", "tokens": [51512, 277, 4158, 1690, 6883, 25625, 11, 5295, 257, 382, 449, 347, 631, 635, 37119, 368, 635, 2182, 1872, 785, 517, 8062, 368, 11, 368, 51848], "temperature": 0.0, "avg_logprob": -0.36251585060190933, "compression_ratio": 1.79, "no_speech_prob": 0.060108888894319534}, {"id": 247, "seek": 153488, "start": 1534.88, "end": 1539.88, "text": " cualquier dimension, y la salida solamente es un valor real, es posible, o sea lo que est\u00e1 haciendo", "tokens": [50364, 21004, 10139, 11, 288, 635, 1845, 2887, 27814, 785, 517, 15367, 957, 11, 785, 26644, 11, 277, 4158, 450, 631, 3192, 20509, 50614], "temperature": 0.0, "avg_logprob": -0.3293511581420898, "compression_ratio": 1.7605633802816902, "no_speech_prob": 0.004839994013309479}, {"id": 248, "seek": 153488, "start": 1539.88, "end": 1544.44, "text": " es tener una red que tiene muchas capas, lo que sea, pero al final todo se reduce a una", "tokens": [50614, 785, 11640, 2002, 2182, 631, 7066, 16072, 1410, 296, 11, 450, 631, 4158, 11, 4768, 419, 2572, 5149, 369, 2783, 384, 257, 2002, 50842], "temperature": 0.0, "avg_logprob": -0.3293511581420898, "compression_ratio": 1.7605633802816902, "no_speech_prob": 0.004839994013309479}, {"id": 249, "seek": 153488, "start": 1544.44, "end": 1549.24, "text": " sola salida un valor real, obviamente esto despu\u00e9s se extiende a m\u00e1s valor real, pero bueno,", "tokens": [50842, 34162, 1845, 2887, 517, 15367, 957, 11, 36325, 7433, 15283, 369, 1279, 45816, 257, 3573, 15367, 957, 11, 4768, 11974, 11, 51082], "temperature": 0.0, "avg_logprob": -0.3293511581420898, "compression_ratio": 1.7605633802816902, "no_speech_prob": 0.004839994013309479}, {"id": 250, "seek": 153488, "start": 1549.24, "end": 1558.5200000000002, "text": " supongamos que tenemos una sola, entonces digo que tengo en instancias, o sea, en evaluores", "tokens": [51082, 9331, 266, 70, 2151, 631, 9914, 2002, 34162, 11, 13003, 22990, 631, 13989, 465, 1058, 282, 12046, 11, 277, 4158, 11, 465, 6133, 2706, 51546], "temperature": 0.0, "avg_logprob": -0.3293511581420898, "compression_ratio": 1.7605633802816902, "no_speech_prob": 0.004839994013309479}, {"id": 251, "seek": 155852, "start": 1558.52, "end": 1563.36, "text": " de aqu\u00ed sub\u00ed, este es mi conjunto entre el aviento, supongamos o el conjunto en el que estoy", "tokens": [50364, 368, 6661, 1422, 870, 11, 4065, 785, 2752, 37776, 3962, 806, 1305, 7814, 11, 9331, 266, 70, 2151, 277, 806, 37776, 465, 806, 631, 15796, 50606], "temperature": 0.0, "avg_logprob": -0.3404640701581847, "compression_ratio": 1.903061224489796, "no_speech_prob": 0.1740770787000656}, {"id": 252, "seek": 155852, "start": 1563.36, "end": 1570.4, "text": " tratando de medir cosas, aqu\u00ed sub\u00ed y me dice que esto se que sub\u00ed deber\u00edan corresponderse", "tokens": [50606, 21507, 1806, 368, 1205, 347, 12218, 11, 6661, 1422, 870, 288, 385, 10313, 631, 7433, 369, 631, 1422, 870, 29671, 11084, 6805, 260, 405, 50958], "temperature": 0.0, "avg_logprob": -0.3404640701581847, "compression_ratio": 1.903061224489796, "no_speech_prob": 0.1740770787000656}, {"id": 253, "seek": 155852, "start": 1570.4, "end": 1578.08, "text": " con diferentes valores de y sub\u00ed, no, este es el conjunto de valores esperados, yo digo que para", "tokens": [50958, 416, 17686, 38790, 368, 288, 1422, 870, 11, 572, 11, 4065, 785, 806, 37776, 368, 38790, 10045, 4181, 11, 5290, 22990, 631, 1690, 51342], "temperature": 0.0, "avg_logprob": -0.3404640701581847, "compression_ratio": 1.903061224489796, "no_speech_prob": 0.1740770787000656}, {"id": 254, "seek": 155852, "start": 1578.08, "end": 1584.76, "text": " aqu\u00ed subuno tengo un y subuno, para que subuno tengo un y subdos, bien, por ahora son", "tokens": [51342, 6661, 1422, 12638, 13989, 517, 288, 1422, 12638, 11, 1690, 631, 1422, 12638, 13989, 517, 288, 1422, 33749, 11, 3610, 11, 1515, 9923, 1872, 51676], "temperature": 0.0, "avg_logprob": -0.3404640701581847, "compression_ratio": 1.903061224489796, "no_speech_prob": 0.1740770787000656}, {"id": 255, "seek": 158476, "start": 1584.76, "end": 1594.32, "text": " todos n\u00fameros reales, y adem\u00e1s tengo que yo tengo una red neuronal con ciertos pesos que se", "tokens": [50364, 6321, 36545, 957, 279, 11, 288, 21251, 13989, 631, 5290, 13989, 2002, 2182, 12087, 21523, 416, 49252, 329, 33204, 631, 369, 50842], "temperature": 0.0, "avg_logprob": -0.2942081644565244, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.06724323332309723}, {"id": 256, "seek": 158476, "start": 1594.32, "end": 1601.24, "text": " le ha podido aplicar a x sub\u00ed y con sus matrices de pesos, entonces mi red neuronal me va", "tokens": [50842, 476, 324, 2497, 2925, 18221, 289, 257, 2031, 1422, 870, 288, 416, 3291, 32284, 368, 33204, 11, 13003, 2752, 2182, 12087, 21523, 385, 2773, 51188], "temperature": 0.0, "avg_logprob": -0.2942081644565244, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.06724323332309723}, {"id": 257, "seek": 158476, "start": 1601.24, "end": 1609.12, "text": " a dar cierto valor y le voy a llamar y sub\u00ed techo, como puedo saber si est\u00e1 bien lo que me da", "tokens": [51188, 257, 4072, 28558, 15367, 288, 476, 7552, 257, 16848, 289, 288, 1422, 870, 535, 5738, 11, 2617, 21612, 12489, 1511, 3192, 3610, 450, 631, 385, 1120, 51582], "temperature": 0.0, "avg_logprob": -0.2942081644565244, "compression_ratio": 1.5555555555555556, "no_speech_prob": 0.06724323332309723}, {"id": 258, "seek": 160912, "start": 1609.12, "end": 1614.9599999999998, "text": " la red neuronal para que s\u00ed, o no, digamos que de qu\u00e9 manera yo puedo llegar a medir si est\u00e1", "tokens": [50364, 635, 2182, 12087, 21523, 1690, 631, 8600, 11, 277, 572, 11, 36430, 631, 368, 8057, 13913, 5290, 21612, 24892, 257, 1205, 347, 1511, 3192, 50656], "temperature": 0.0, "avg_logprob": -0.39823428067294037, "compression_ratio": 1.5965909090909092, "no_speech_prob": 0.09155314415693283}, {"id": 259, "seek": 160912, "start": 1614.9599999999998, "end": 1627.84, "text": " bien o no, este valor que me dio, a esta, o sea, a mi salida, mi conjunto yo dec\u00eda bueno,", "tokens": [50656, 3610, 277, 572, 11, 4065, 15367, 631, 385, 31965, 11, 257, 5283, 11, 277, 4158, 11, 257, 2752, 1845, 2887, 11, 2752, 37776, 5290, 37599, 11974, 11, 51300], "temperature": 0.0, "avg_logprob": -0.39823428067294037, "compression_ratio": 1.5965909090909092, "no_speech_prob": 0.09155314415693283}, {"id": 260, "seek": 160912, "start": 1627.84, "end": 1634.84, "text": " la salida ten\u00eda haber sido y sub\u00ed, y la salida me dio la red, es, es sub\u00ed techo, como puedo", "tokens": [51300, 635, 1845, 2887, 23718, 15811, 14444, 288, 1422, 870, 11, 288, 635, 1845, 2887, 385, 31965, 635, 2182, 11, 785, 11, 785, 1422, 870, 535, 5738, 11, 2617, 21612, 51650], "temperature": 0.0, "avg_logprob": -0.39823428067294037, "compression_ratio": 1.5965909090909092, "no_speech_prob": 0.09155314415693283}, {"id": 261, "seek": 163484, "start": 1634.84, "end": 1640.72, "text": " saber si ese, ese est\u00e1 bien o mal, o sea que, que me dio, me d\u00ede, me d\u00ede, me d\u00ede, me d\u00ede,", "tokens": [50364, 12489, 1511, 10167, 11, 10167, 3192, 3610, 277, 2806, 11, 277, 4158, 631, 11, 631, 385, 31965, 11, 385, 274, 870, 68, 11, 385, 274, 870, 68, 11, 385, 274, 870, 68, 11, 385, 274, 870, 68, 11, 50658], "temperature": 0.0, "avg_logprob": -0.42318081254718687, "compression_ratio": 1.8104265402843602, "no_speech_prob": 0.07399093359708786}, {"id": 262, "seek": 163484, "start": 1640.72, "end": 1647.8799999999999, "text": " est\u00e1 bien o mal, ah\u00ed est\u00e1, yo puedo restar y digo bueno, qu\u00e9 tanto se parece en estos dos,", "tokens": [50658, 3192, 3610, 277, 2806, 11, 12571, 3192, 11, 5290, 21612, 1472, 289, 288, 22990, 11974, 11, 8057, 10331, 369, 14120, 465, 12585, 4491, 11, 51016], "temperature": 0.0, "avg_logprob": -0.42318081254718687, "compression_ratio": 1.8104265402843602, "no_speech_prob": 0.07399093359708786}, {"id": 263, "seek": 163484, "start": 1647.8799999999999, "end": 1652.9599999999998, "text": " si esto est\u00e1 cerca de cero, es un valor muy chiquito, entonces yo puedo decir que estas dos cosas", "tokens": [51016, 1511, 7433, 3192, 26770, 368, 269, 2032, 11, 785, 517, 15367, 5323, 417, 3221, 3528, 11, 13003, 5290, 21612, 10235, 631, 13897, 4491, 12218, 51270], "temperature": 0.0, "avg_logprob": -0.42318081254718687, "compression_ratio": 1.8104265402843602, "no_speech_prob": 0.07399093359708786}, {"id": 264, "seek": 163484, "start": 1652.9599999999998, "end": 1659.6799999999998, "text": " son iguales, por lo tanto la red me est\u00e1 dando un resultado parecido al que yo esperaba y si", "tokens": [51270, 1872, 10953, 279, 11, 1515, 450, 10331, 635, 2182, 385, 3192, 29854, 517, 28047, 7448, 17994, 419, 631, 5290, 10045, 5509, 288, 1511, 51606], "temperature": 0.0, "avg_logprob": -0.42318081254718687, "compression_ratio": 1.8104265402843602, "no_speech_prob": 0.07399093359708786}, {"id": 265, "seek": 165968, "start": 1659.68, "end": 1665.44, "text": " estos dos son muy diferentes, entonces esto me va a dar un valor bastante alto, entonces yo tengo", "tokens": [50364, 12585, 4491, 1872, 5323, 17686, 11, 13003, 7433, 385, 2773, 257, 4072, 517, 15367, 14651, 21275, 11, 13003, 5290, 13989, 50652], "temperature": 0.0, "avg_logprob": -0.29696276783943176, "compression_ratio": 1.9409282700421941, "no_speech_prob": 0.14912185072898865}, {"id": 266, "seek": 165968, "start": 1665.44, "end": 1671.0800000000002, "text": " muchos de estos, no, tengo n ejemplos de este estilo, as\u00ed que lo que voy a hacer es sumar todos", "tokens": [50652, 17061, 368, 12585, 11, 572, 11, 13989, 297, 10012, 5895, 329, 368, 4065, 37470, 11, 8582, 631, 450, 631, 7552, 257, 6720, 785, 2408, 289, 6321, 50934], "temperature": 0.0, "avg_logprob": -0.29696276783943176, "compression_ratio": 1.9409282700421941, "no_speech_prob": 0.14912185072898865}, {"id": 267, "seek": 165968, "start": 1671.0800000000002, "end": 1679.24, "text": " estos, de igual uno hasta n, sumo todos los valores, tengo un problema que es que a veces yo", "tokens": [50934, 12585, 11, 368, 10953, 8526, 10764, 297, 11, 2408, 78, 6321, 1750, 38790, 11, 13989, 517, 12395, 631, 785, 631, 257, 17054, 5290, 51342], "temperature": 0.0, "avg_logprob": -0.29696276783943176, "compression_ratio": 1.9409282700421941, "no_speech_prob": 0.14912185072898865}, {"id": 268, "seek": 165968, "start": 1679.24, "end": 1682.68, "text": " puedo le poder arpor mucho, es el poder arpor poco, pero a veces esto me va a dar", "tokens": [51342, 21612, 476, 8152, 594, 2816, 9824, 11, 785, 806, 8152, 594, 2816, 10639, 11, 4768, 257, 17054, 7433, 385, 2773, 257, 4072, 51514], "temperature": 0.0, "avg_logprob": -0.29696276783943176, "compression_ratio": 1.9409282700421941, "no_speech_prob": 0.14912185072898865}, {"id": 269, "seek": 165968, "start": 1682.68, "end": 1686.6000000000001, "text": " negativo, esto me va a dar positivo, entonces si yo no sumo todo, capaz que me da cero por", "tokens": [51514, 2485, 18586, 11, 7433, 385, 2773, 257, 4072, 44710, 11, 13003, 1511, 5290, 572, 2408, 78, 5149, 11, 35453, 631, 385, 1120, 269, 2032, 1515, 51710], "temperature": 0.0, "avg_logprob": -0.29696276783943176, "compression_ratio": 1.9409282700421941, "no_speech_prob": 0.14912185072898865}, {"id": 270, "seek": 168660, "start": 1686.6, "end": 1691.28, "text": " casualidad, entonces lo que hago es ponerlos al cuadrado, para decir bueno, yo siempre voy a", "tokens": [50364, 13052, 4580, 11, 13003, 450, 631, 38721, 785, 19149, 9389, 419, 34434, 14974, 11, 1690, 10235, 11974, 11, 5290, 12758, 7552, 257, 50598], "temperature": 0.0, "avg_logprob": -0.31600735792473184, "compression_ratio": 1.7737226277372262, "no_speech_prob": 0.05532658100128174}, {"id": 271, "seek": 168660, "start": 1691.28, "end": 1695.8799999999999, "text": " sumar a los dispositivos, entonces si mi salida es distinta, el valor esperado siempre esto me", "tokens": [50598, 2408, 289, 257, 1750, 34769, 16501, 11, 13003, 1511, 2752, 1845, 2887, 785, 1483, 16071, 11, 806, 15367, 10045, 1573, 12758, 7433, 385, 50828], "temperature": 0.0, "avg_logprob": -0.31600735792473184, "compression_ratio": 1.7737226277372262, "no_speech_prob": 0.05532658100128174}, {"id": 272, "seek": 168660, "start": 1695.8799999999999, "end": 1701.36, "text": " va a dar un resultado positivo, bien entonces como estoy comparando en ejemplos, esto lo voy a dividir", "tokens": [50828, 2773, 257, 4072, 517, 28047, 44710, 11, 3610, 13003, 2617, 15796, 6311, 1806, 465, 10012, 5895, 329, 11, 7433, 450, 7552, 257, 4996, 347, 51102], "temperature": 0.0, "avg_logprob": -0.31600735792473184, "compression_ratio": 1.7737226277372262, "no_speech_prob": 0.05532658100128174}, {"id": 273, "seek": 168660, "start": 1701.36, "end": 1710.04, "text": " entre n, esto de ac\u00e1 me da una metrica condensada que me dice qu\u00e9 tanto se equivoc\u00f3 mi red,", "tokens": [51102, 3962, 297, 11, 7433, 368, 23496, 385, 1120, 2002, 1131, 15192, 2224, 694, 1538, 631, 385, 10313, 8057, 10331, 369, 48726, 905, 812, 2752, 2182, 11, 51536], "temperature": 0.0, "avg_logprob": -0.31600735792473184, "compression_ratio": 1.7737226277372262, "no_speech_prob": 0.05532658100128174}, {"id": 274, "seek": 168660, "start": 1710.04, "end": 1714.0, "text": " respecto a los valores, a todo lo que lo esperamos, y de hecho, esta es una de las metricas posibles", "tokens": [51536, 35694, 257, 1750, 38790, 11, 257, 5149, 450, 631, 450, 10045, 2151, 11, 288, 368, 13064, 11, 5283, 785, 2002, 368, 2439, 1131, 1341, 296, 1366, 14428, 51734], "temperature": 0.0, "avg_logprob": -0.31600735792473184, "compression_ratio": 1.7737226277372262, "no_speech_prob": 0.05532658100128174}, {"id": 275, "seek": 171400, "start": 1714.0, "end": 1722.24, "text": " para medir eso, est\u00e1n muy usadas, se llama mc, min squared error, error cuadr\u00e1tico medio, y es una", "tokens": [50364, 1690, 1205, 347, 7287, 11, 10368, 5323, 505, 6872, 11, 369, 23272, 275, 66, 11, 923, 8889, 6713, 11, 6713, 34434, 81, 28234, 22123, 11, 288, 785, 2002, 50776], "temperature": 0.0, "avg_logprob": -0.3178098803368684, "compression_ratio": 1.8537735849056605, "no_speech_prob": 0.04342837259173393}, {"id": 276, "seek": 171400, "start": 1722.24, "end": 1731.08, "text": " de las metricas m\u00e1s conocidas, entonces esto es una metrica que me permite medir la discrepancia", "tokens": [50776, 368, 2439, 1131, 1341, 296, 3573, 15871, 11382, 11, 13003, 7433, 785, 2002, 1131, 15192, 631, 385, 31105, 1205, 347, 635, 2983, 265, 6040, 2755, 51218], "temperature": 0.0, "avg_logprob": -0.3178098803368684, "compression_ratio": 1.8537735849056605, "no_speech_prob": 0.04342837259173393}, {"id": 277, "seek": 171400, "start": 1731.08, "end": 1737.4, "text": " que hay entre los valores esperados de una red ac\u00e1 era y su y, entre los valores esperados de una red", "tokens": [51218, 631, 4842, 3962, 1750, 38790, 10045, 4181, 368, 2002, 2182, 23496, 4249, 288, 459, 288, 11, 3962, 1750, 38790, 10045, 4181, 368, 2002, 2182, 51534], "temperature": 0.0, "avg_logprob": -0.3178098803368684, "compression_ratio": 1.8537735849056605, "no_speech_prob": 0.04342837259173393}, {"id": 278, "seek": 171400, "start": 1737.4, "end": 1742.52, "text": " y los valores que la red dio con todos los pesos que tienen hasta el momento, recuerden que", "tokens": [51534, 288, 1750, 38790, 631, 635, 2182, 31965, 416, 6321, 1750, 33204, 631, 12536, 10764, 806, 9333, 11, 39092, 1556, 631, 51790], "temperature": 0.0, "avg_logprob": -0.3178098803368684, "compression_ratio": 1.8537735849056605, "no_speech_prob": 0.04342837259173393}, {"id": 279, "seek": 174252, "start": 1742.52, "end": 1752.08, "text": " este hizo dice calculaba como el resultado de la red para equisubir y los pesos de la red, entonces,", "tokens": [50364, 4065, 28803, 10313, 4322, 5509, 2617, 806, 28047, 368, 635, 2182, 1690, 1267, 271, 836, 347, 288, 1750, 33204, 368, 635, 2182, 11, 13003, 11, 50842], "temperature": 0.0, "avg_logprob": -0.4397267493132119, "compression_ratio": 1.855072463768116, "no_speech_prob": 0.06457028537988663}, {"id": 280, "seek": 174252, "start": 1752.08, "end": 1757.36, "text": " este tipo de funciones que miden la diferencia entre los valores esperados y los valores que", "tokens": [50842, 4065, 9746, 368, 1019, 23469, 631, 275, 4380, 635, 38844, 3962, 1750, 38790, 10045, 4181, 288, 1750, 38790, 631, 51106], "temperature": 0.0, "avg_logprob": -0.4397267493132119, "compression_ratio": 1.855072463768116, "no_speech_prob": 0.06457028537988663}, {"id": 281, "seek": 174252, "start": 1757.36, "end": 1763.24, "text": " me da la red de verdad, se llaman funciones de perdida, bien, o sea, el nombre de perdida no se", "tokens": [51106, 385, 1120, 635, 2182, 368, 13692, 11, 369, 4849, 6147, 1019, 23469, 368, 12611, 2887, 11, 3610, 11, 277, 4158, 11, 806, 13000, 368, 12611, 2887, 572, 369, 51400], "temperature": 0.0, "avg_logprob": -0.4397267493132119, "compression_ratio": 1.855072463768116, "no_speech_prob": 0.06457028537988663}, {"id": 282, "seek": 174252, "start": 1763.24, "end": 1768.52, "text": " moviende, donde sale, pero se le suele llamar funciones de perdida, los functions y bueno, son", "tokens": [51400, 2402, 45816, 11, 10488, 8680, 11, 4768, 369, 476, 459, 16884, 16848, 289, 1019, 23469, 368, 12611, 2887, 11, 1750, 6828, 288, 11974, 11, 1872, 51664], "temperature": 0.0, "avg_logprob": -0.4397267493132119, "compression_ratio": 1.855072463768116, "no_speech_prob": 0.06457028537988663}, {"id": 283, "seek": 176852, "start": 1768.52, "end": 1773.12, "text": " de los conceptos que no tienen que aprender cuando aprende de redes sociales, porque para entrenarlas,", "tokens": [50364, 368, 1750, 3410, 329, 631, 572, 12536, 631, 24916, 7767, 21003, 68, 368, 16762, 29623, 11, 4021, 1690, 45069, 6843, 296, 11, 50594], "temperature": 0.0, "avg_logprob": -0.30973596087956834, "compression_ratio": 1.8415094339622642, "no_speech_prob": 0.12060479819774628}, {"id": 284, "seek": 176852, "start": 1773.12, "end": 1777.52, "text": " yo lo que tengo que hacer es elegir una de los funciones apropiada para problemas, entonces,", "tokens": [50594, 5290, 450, 631, 13989, 631, 6720, 785, 14459, 347, 2002, 368, 1750, 1019, 23469, 1882, 1513, 72, 1538, 1690, 20720, 11, 13003, 11, 50814], "temperature": 0.0, "avg_logprob": -0.30973596087956834, "compression_ratio": 1.8415094339622642, "no_speech_prob": 0.12060479819774628}, {"id": 285, "seek": 176852, "start": 1777.52, "end": 1781.8799999999999, "text": " estas de las m\u00e1s comunes, el arro cuadr\u00e1tico medio, sirve mucho para problemas donde los", "tokens": [50814, 13897, 368, 2439, 3573, 11040, 279, 11, 806, 594, 340, 34434, 81, 28234, 22123, 11, 4735, 303, 9824, 1690, 20720, 10488, 1750, 51032], "temperature": 0.0, "avg_logprob": -0.30973596087956834, "compression_ratio": 1.8415094339622642, "no_speech_prob": 0.12060479819774628}, {"id": 286, "seek": 176852, "start": 1781.8799999999999, "end": 1788.8, "text": " valores resultados son valores reales, no sirve tanto para cuando los valores esperados resultantes,", "tokens": [51032, 38790, 36796, 1872, 38790, 957, 279, 11, 572, 4735, 303, 10331, 1690, 7767, 1750, 38790, 10045, 4181, 1874, 9327, 11, 51378], "temperature": 0.0, "avg_logprob": -0.30973596087956834, "compression_ratio": 1.8415094339622642, "no_speech_prob": 0.12060479819774628}, {"id": 287, "seek": 176852, "start": 1788.8, "end": 1793.6, "text": " son por ejemplo una distribuci\u00f3n de probabilidades o una categor\u00eda en muchas como ese problema que", "tokens": [51378, 1872, 1515, 13358, 2002, 4400, 30813, 368, 31959, 10284, 277, 2002, 19250, 2686, 465, 16072, 2617, 10167, 12395, 631, 51618], "temperature": 0.0, "avg_logprob": -0.30973596087956834, "compression_ratio": 1.8415094339622642, "no_speech_prob": 0.12060479819774628}, {"id": 288, "seek": 179360, "start": 1793.6, "end": 1801.1599999999999, "text": " tienen en el laboratorio, para esos utilizan otras, por ejemplo, la entrop\u00eda cruzada o en particular,", "tokens": [50364, 12536, 465, 806, 5938, 48028, 11, 1690, 22411, 19906, 282, 20244, 11, 1515, 13358, 11, 635, 948, 1513, 2686, 5140, 89, 1538, 277, 465, 1729, 11, 50742], "temperature": 0.0, "avg_logprob": -0.2864298999757695, "compression_ratio": 1.8470588235294119, "no_speech_prob": 0.08557143807411194}, {"id": 289, "seek": 179360, "start": 1801.1599999999999, "end": 1806.08, "text": " una versi\u00f3n de entrop\u00eda cruzada que sirve para decir, yo tengo un solo valor correcto de", "tokens": [50742, 2002, 47248, 368, 948, 1513, 2686, 5140, 89, 1538, 631, 4735, 303, 1690, 10235, 11, 5290, 13989, 517, 6944, 15367, 3006, 78, 368, 50988], "temperature": 0.0, "avg_logprob": -0.2864298999757695, "compression_ratio": 1.8470588235294119, "no_speech_prob": 0.08557143807411194}, {"id": 290, "seek": 179360, "start": 1806.08, "end": 1811.0, "text": " entre muchos que en el laboratorio les pasa a eso, digamos, que tengo un tweet y es positivo,", "tokens": [50988, 3962, 17061, 631, 465, 806, 5938, 48028, 1512, 20260, 257, 7287, 11, 36430, 11, 631, 13989, 517, 15258, 288, 785, 44710, 11, 51234], "temperature": 0.0, "avg_logprob": -0.2864298999757695, "compression_ratio": 1.8470588235294119, "no_speech_prob": 0.08557143807411194}, {"id": 291, "seek": 179360, "start": 1811.0, "end": 1815.28, "text": " o en negativo o en neutrono, no, no puede ser m\u00e1s de una, entonces, para eso se usa la \u00faltima,", "tokens": [51234, 277, 465, 2485, 18586, 277, 465, 7989, 2044, 78, 11, 572, 11, 572, 8919, 816, 3573, 368, 2002, 11, 13003, 11, 1690, 7287, 369, 29909, 635, 28118, 11, 51448], "temperature": 0.0, "avg_logprob": -0.2864298999757695, "compression_ratio": 1.8470588235294119, "no_speech_prob": 0.08557143807411194}, {"id": 292, "seek": 179360, "start": 1815.28, "end": 1821.52, "text": " es una versi\u00f3n de la entrop\u00eda cruzada para valores categoricos, bien, y existen unas", "tokens": [51448, 785, 2002, 47248, 368, 635, 948, 1513, 2686, 5140, 89, 1538, 1690, 38790, 19250, 9940, 11, 3610, 11, 288, 2514, 268, 25405, 51760], "temperature": 0.0, "avg_logprob": -0.2864298999757695, "compression_ratio": 1.8470588235294119, "no_speech_prob": 0.08557143807411194}, {"id": 293, "seek": 182152, "start": 1821.52, "end": 1827.4, "text": " contas m\u00e1s digamos, o sea, pero en definitiva siempre tengo que tener funciones de estilo,", "tokens": [50364, 660, 296, 3573, 36430, 11, 277, 4158, 11, 4768, 465, 28781, 5931, 12758, 13989, 631, 11640, 1019, 23469, 368, 37470, 11, 50658], "temperature": 0.0, "avg_logprob": -0.3174341757466474, "compression_ratio": 1.9382716049382716, "no_speech_prob": 0.026545848697423935}, {"id": 294, "seek": 182152, "start": 1827.4, "end": 1831.16, "text": " como pasaba con la funci\u00f3n de activaci\u00f3n, lo que se espera es una funci\u00f3n de perdiada, es que", "tokens": [50658, 2617, 1736, 5509, 416, 635, 43735, 368, 2430, 3482, 11, 450, 631, 369, 37862, 785, 2002, 43735, 368, 680, 4504, 1538, 11, 785, 631, 50846], "temperature": 0.0, "avg_logprob": -0.3174341757466474, "compression_ratio": 1.9382716049382716, "no_speech_prob": 0.026545848697423935}, {"id": 295, "seek": 182152, "start": 1831.16, "end": 1837.68, "text": " se ha derribable y en el caso de la funci\u00f3n de perdiada, lo que se espera es que cuando la", "tokens": [50846, 369, 324, 1163, 2024, 712, 288, 465, 806, 9666, 368, 635, 43735, 368, 680, 4504, 1538, 11, 450, 631, 369, 37862, 785, 631, 7767, 635, 51172], "temperature": 0.0, "avg_logprob": -0.3174341757466474, "compression_ratio": 1.9382716049382716, "no_speech_prob": 0.026545848697423935}, {"id": 296, "seek": 182152, "start": 1837.68, "end": 1843.36, "text": " salida de la red se parece much\u00edsimo a los valores esperados, tiene que estar cercana a cero o", "tokens": [51172, 1845, 2887, 368, 635, 2182, 369, 14120, 44722, 257, 1750, 38790, 10045, 4181, 11, 7066, 631, 8755, 36099, 2095, 257, 269, 2032, 277, 51456], "temperature": 0.0, "avg_logprob": -0.3174341757466474, "compression_ratio": 1.9382716049382716, "no_speech_prob": 0.026545848697423935}, {"id": 297, "seek": 182152, "start": 1843.36, "end": 1846.8, "text": " tener que ser un valor m\u00ednimo y cuando la salida de la red es muy diferente, tiene que ser un", "tokens": [51456, 11640, 631, 816, 517, 15367, 47393, 288, 7767, 635, 1845, 2887, 368, 635, 2182, 785, 5323, 20973, 11, 7066, 631, 816, 517, 51628], "temperature": 0.0, "avg_logprob": -0.3174341757466474, "compression_ratio": 1.9382716049382716, "no_speech_prob": 0.026545848697423935}, {"id": 298, "seek": 184680, "start": 1846.8, "end": 1858.04, "text": " valor m\u00e1s grande, bien, entonces, porque es que yo quiero que todo esto sea derribable,", "tokens": [50364, 15367, 3573, 8883, 11, 3610, 11, 13003, 11, 4021, 785, 631, 5290, 16811, 631, 5149, 7433, 4158, 1163, 2024, 712, 11, 50926], "temperature": 0.0, "avg_logprob": -0.40156943581321025, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.03325055539608002}, {"id": 299, "seek": 184680, "start": 1858.04, "end": 1872.72, "text": " o que les parece, s\u00ed, la exacto para minimizar, el hecho de que yo puedo hacer que esto sea derribable,", "tokens": [50926, 277, 631, 1512, 14120, 11, 8600, 11, 635, 1900, 78, 1690, 4464, 9736, 11, 806, 13064, 368, 631, 5290, 21612, 6720, 631, 7433, 4158, 1163, 2024, 712, 11, 51660], "temperature": 0.0, "avg_logprob": -0.40156943581321025, "compression_ratio": 1.4511278195488722, "no_speech_prob": 0.03325055539608002}, {"id": 300, "seek": 187272, "start": 1872.72, "end": 1881.76, "text": " digamos que lo que est\u00e1 dentro, o sea, este es y su techo y su b techo, menos y su b, y esto lo", "tokens": [50364, 36430, 631, 450, 631, 3192, 10856, 11, 277, 4158, 11, 4065, 785, 288, 459, 535, 5738, 288, 459, 272, 535, 5738, 11, 8902, 288, 459, 272, 11, 288, 7433, 450, 50816], "temperature": 0.0, "avg_logprob": -0.40953297768869706, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.14455285668373108}, {"id": 301, "seek": 187272, "start": 1881.76, "end": 1891.8, "text": " calcule con esto que est\u00e1 ac\u00e1, entonces esto es una sobre ne por la sumatoria de una est\u00e1 ene de una", "tokens": [50816, 4322, 68, 416, 7433, 631, 3192, 23496, 11, 13003, 7433, 785, 2002, 5473, 408, 1515, 635, 2408, 1639, 654, 368, 2002, 3192, 465, 68, 368, 2002, 51318], "temperature": 0.0, "avg_logprob": -0.40953297768869706, "compression_ratio": 1.5873015873015872, "no_speech_prob": 0.14455285668373108}, {"id": 302, "seek": 189180, "start": 1891.8, "end": 1905.08, "text": " cosa que ten\u00eda la forma sigma de sigma de sigma de x por dobleve a la 1 por dobleve 2,", "tokens": [50364, 10163, 631, 23718, 635, 8366, 12771, 368, 12771, 368, 12771, 368, 2031, 1515, 360, 638, 303, 257, 635, 502, 1515, 360, 638, 303, 568, 11, 51028], "temperature": 0.0, "avg_logprob": -0.3315328870500837, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.13709992170333862}, {"id": 303, "seek": 189180, "start": 1905.08, "end": 1913.28, "text": " no s\u00e9 qu\u00e9, menos y sub\u00ed, al cuadrado, bien, entonces ac\u00e1 dentro se ha tenido una cosa", "tokens": [51028, 572, 7910, 8057, 11, 8902, 288, 1422, 870, 11, 419, 34434, 14974, 11, 3610, 11, 13003, 23496, 10856, 369, 324, 33104, 2002, 10163, 51438], "temperature": 0.0, "avg_logprob": -0.3315328870500837, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.13709992170333862}, {"id": 304, "seek": 189180, "start": 1913.28, "end": 1918.72, "text": " que era todo derribable, y ac\u00e1 fuera tengo otra funci\u00f3n que tambi\u00e9n es derribable, tanto", "tokens": [51438, 631, 4249, 5149, 1163, 2024, 712, 11, 288, 23496, 24818, 13989, 13623, 43735, 631, 6407, 785, 1163, 2024, 712, 11, 10331, 51710], "temperature": 0.0, "avg_logprob": -0.3315328870500837, "compression_ratio": 1.5730994152046784, "no_speech_prob": 0.13709992170333862}, {"id": 305, "seek": 191872, "start": 1918.72, "end": 1923.04, "text": " las funciones de activaci\u00f3n como todos los resultados de la red no en el \u00e1lcool, como", "tokens": [50364, 2439, 1019, 23469, 368, 2430, 3482, 2617, 6321, 1750, 36796, 368, 635, 2182, 572, 465, 806, 7352, 75, 28155, 11, 2617, 50580], "temperature": 0.0, "avg_logprob": -0.4575357998118681, "compression_ratio": 1.6968325791855203, "no_speech_prob": 0.10357663780450821}, {"id": 306, "seek": 191872, "start": 1923.04, "end": 1927.16, "text": " la funci\u00f3n de p\u00e9rdida, como todas estas cosas, son todas derribables, para que quiero eso porque", "tokens": [50580, 635, 43735, 368, 280, 4198, 67, 2887, 11, 2617, 10906, 13897, 12218, 11, 1872, 10906, 1163, 2024, 2965, 11, 1690, 631, 16811, 7287, 4021, 50786], "temperature": 0.0, "avg_logprob": -0.4575357998118681, "compression_ratio": 1.6968325791855203, "no_speech_prob": 0.10357663780450821}, {"id": 307, "seek": 191872, "start": 1927.16, "end": 1933.64, "text": " efectivamente voy a derribar, la t\u00e9cnica se utiliza para entrenar estas cosas se basa mucho en", "tokens": [50786, 22565, 23957, 7552, 257, 1163, 2024, 289, 11, 635, 45411, 369, 4976, 13427, 1690, 45069, 289, 13897, 12218, 369, 987, 64, 9824, 465, 51110], "temperature": 0.0, "avg_logprob": -0.4575357998118681, "compression_ratio": 1.6968325791855203, "no_speech_prob": 0.10357663780450821}, {"id": 308, "seek": 191872, "start": 1933.64, "end": 1940.8, "text": " encontrar adribas, y vamos a dar de ver por qu\u00e9, bien, entonces, para entrenar una de estas", "tokens": [51110, 17525, 614, 2024, 296, 11, 288, 5295, 257, 4072, 368, 1306, 1515, 8057, 11, 3610, 11, 13003, 11, 1690, 45069, 289, 2002, 368, 13897, 51468], "temperature": 0.0, "avg_logprob": -0.4575357998118681, "compression_ratio": 1.6968325791855203, "no_speech_prob": 0.10357663780450821}, {"id": 309, "seek": 194080, "start": 1940.8, "end": 1948.6399999999999, "text": " red, recordemos que, digamos, para entrenar estas red, recordemos que tengo un conjunto de", "tokens": [50364, 2182, 11, 2136, 4485, 631, 11, 36430, 11, 1690, 45069, 289, 13897, 2182, 11, 2136, 4485, 631, 13989, 517, 37776, 368, 50756], "temperature": 0.0, "avg_logprob": -0.3548552989959717, "compression_ratio": 1.9005235602094241, "no_speech_prob": 0.1611597090959549}, {"id": 310, "seek": 194080, "start": 1948.6399999999999, "end": 1956.2, "text": " entrenamiento, un punto de desarrollo, un punto de test, y me interesa tratar de minimizar esto,", "tokens": [50756, 45069, 16971, 11, 517, 14326, 368, 38295, 11, 517, 14326, 368, 1500, 11, 288, 385, 728, 13708, 42549, 368, 4464, 9736, 7433, 11, 51134], "temperature": 0.0, "avg_logprob": -0.3548552989959717, "compression_ratio": 1.9005235602094241, "no_speech_prob": 0.1611597090959549}, {"id": 311, "seek": 194080, "start": 1956.2, "end": 1964.6399999999999, "text": " o sea, yo tengo que la red se calcula como, dependiendo del valor de entrada y el conjunto de", "tokens": [51134, 277, 4158, 11, 5290, 13989, 631, 635, 2182, 369, 4322, 64, 2617, 11, 5672, 7304, 1103, 15367, 368, 37119, 288, 806, 37776, 368, 51556], "temperature": 0.0, "avg_logprob": -0.3548552989959717, "compression_ratio": 1.9005235602094241, "no_speech_prob": 0.1611597090959549}, {"id": 312, "seek": 194080, "start": 1964.6399999999999, "end": 1969.8, "text": " pesos que tengo, yo voy a multiplicar ese valor entrada por una matriz y por otra", "tokens": [51556, 33204, 631, 13989, 11, 5290, 7552, 257, 17596, 289, 10167, 15367, 37119, 1515, 2002, 3803, 24959, 288, 1515, 13623, 51814], "temperature": 0.0, "avg_logprob": -0.3548552989959717, "compression_ratio": 1.9005235602094241, "no_speech_prob": 0.1611597090959549}, {"id": 313, "seek": 196980, "start": 1969.8, "end": 1974.48, "text": " con la funci\u00f3n de activaci\u00f3n, etc\u00e9tera, hasta obtener un resultado, pero entonces, no", "tokens": [50364, 416, 635, 43735, 368, 2430, 3482, 11, 5183, 526, 23833, 11, 10764, 28326, 260, 517, 28047, 11, 4768, 13003, 11, 572, 50598], "temperature": 0.0, "avg_logprob": -0.3158413130661537, "compression_ratio": 1.9152542372881356, "no_speech_prob": 0.0605015866458416}, {"id": 314, "seek": 196980, "start": 1974.48, "end": 1981.0, "text": " tal que este valor est\u00e1 en funci\u00f3n de la entrada que es quiso y el conjunto de pesos de", "tokens": [50598, 4023, 631, 4065, 15367, 3192, 465, 43735, 368, 635, 37119, 631, 785, 421, 19227, 288, 806, 37776, 368, 33204, 368, 50924], "temperature": 0.0, "avg_logprob": -0.3158413130661537, "compression_ratio": 1.9152542372881356, "no_speech_prob": 0.0605015866458416}, {"id": 315, "seek": 196980, "start": 1981.0, "end": 1986.0, "text": " leve, no, ac\u00e1 yo tengo una funci\u00f3n que es que est\u00e1 en funci\u00f3n de dos cosas, estas son", "tokens": [50924, 33076, 11, 572, 11, 23496, 5290, 13989, 2002, 43735, 631, 785, 631, 3192, 465, 43735, 368, 4491, 12218, 11, 13897, 1872, 51174], "temperature": 0.0, "avg_logprob": -0.3158413130661537, "compression_ratio": 1.9152542372881356, "no_speech_prob": 0.0605015866458416}, {"id": 316, "seek": 196980, "start": 1986.0, "end": 1990.52, "text": " las entradas de conjunto de entrenamiento, o del conjunto que estoy mediendo, y estos son los", "tokens": [51174, 2439, 948, 48906, 368, 37776, 368, 45069, 16971, 11, 277, 1103, 37776, 631, 15796, 1205, 7304, 11, 288, 12585, 1872, 1750, 51400], "temperature": 0.0, "avg_logprob": -0.3158413130661537, "compression_ratio": 1.9152542372881356, "no_speech_prob": 0.0605015866458416}, {"id": 317, "seek": 196980, "start": 1990.52, "end": 1997.32, "text": " pesos que yo le puedo dar ac\u00e1 una de las capas, entonces, una cosa interesante es que yo", "tokens": [51400, 33204, 631, 5290, 476, 21612, 4072, 23496, 2002, 368, 2439, 1410, 296, 11, 13003, 11, 2002, 10163, 36396, 785, 631, 5290, 51740], "temperature": 0.0, "avg_logprob": -0.3158413130661537, "compression_ratio": 1.9152542372881356, "no_speech_prob": 0.0605015866458416}, {"id": 318, "seek": 199732, "start": 1997.32, "end": 2001.36, "text": " puedo mirar este problema del punto de vista de que estos valores, los dejo fijos, digo,", "tokens": [50364, 21612, 3149, 289, 4065, 12395, 1103, 14326, 368, 22553, 368, 631, 12585, 38790, 11, 1750, 368, 5134, 42001, 329, 11, 22990, 11, 50566], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 319, "seek": 199732, "start": 2001.36, "end": 2005.32, "text": " mi conjunto de entrenamiento de lo conozco, entonces, los valores est\u00e1n fijos, y yo puedo", "tokens": [50566, 2752, 37776, 368, 45069, 16971, 368, 450, 416, 15151, 1291, 11, 13003, 11, 1750, 38790, 10368, 42001, 329, 11, 288, 5290, 21612, 50764], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 320, "seek": 199732, "start": 2005.32, "end": 2010.76, "text": " ir cambiando los pesos hasta encontrar el conjunto de pesos ideales que permita que el", "tokens": [50764, 3418, 19569, 1806, 1750, 33204, 10764, 17525, 806, 37776, 368, 33204, 1153, 4229, 631, 4784, 2786, 631, 806, 51036], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 321, "seek": 199732, "start": 2010.76, "end": 2015.0, "text": " valor de entrenamiento, multiplicado por esos pesos, me den la sal\u00eda que yo quiero. Entonces,", "tokens": [51036, 15367, 368, 45069, 16971, 11, 17596, 1573, 1515, 22411, 33204, 11, 385, 1441, 635, 1845, 2686, 631, 5290, 16811, 13, 15097, 11, 51248], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 322, "seek": 199732, "start": 2015.0, "end": 2018.04, "text": " ah\u00ed, eso se transforma en un problema, como dec\u00eda, por ah\u00ed, un problema de", "tokens": [51248, 12571, 11, 7287, 369, 4088, 64, 465, 517, 12395, 11, 2617, 37599, 11, 1515, 12571, 11, 517, 12395, 368, 51400], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 323, "seek": 199732, "start": 2018.04, "end": 2023.9199999999998, "text": " administraci\u00f3n, un problema de optimizaci\u00f3n en el cual lo que voy a hacer es tomar", "tokens": [51400, 9737, 3482, 11, 517, 12395, 368, 5028, 27603, 465, 806, 10911, 450, 631, 7552, 257, 6720, 785, 22048, 51694], "temperature": 0.0, "avg_logprob": -0.30826582732024016, "compression_ratio": 1.8714285714285714, "no_speech_prob": 0.11815351992845535}, {"id": 324, "seek": 202392, "start": 2023.92, "end": 2030.5600000000002, "text": " esto como variable, entonces, yo lo que quiero encontrar es el argument para la familia", "tokens": [50364, 7433, 2617, 7006, 11, 13003, 11, 5290, 450, 631, 16811, 17525, 785, 806, 6770, 1690, 635, 24050, 50696], "temperature": 0.0, "avg_logprob": -0.4435233801183566, "compression_ratio": 1.4388888888888889, "no_speech_prob": 0.05643079802393913}, {"id": 325, "seek": 202392, "start": 2030.5600000000002, "end": 2036.6000000000001, "text": " posible de pesos de las distintas matrices de leve de esta funci\u00f3n ac\u00e1, que es uno", "tokens": [50696, 26644, 368, 33204, 368, 2439, 31489, 296, 32284, 368, 33076, 368, 5283, 43735, 23496, 11, 631, 785, 8526, 50998], "temperature": 0.0, "avg_logprob": -0.4435233801183566, "compression_ratio": 1.4388888888888889, "no_speech_prob": 0.05643079802393913}, {"id": 326, "seek": 202392, "start": 2036.6000000000001, "end": 2046.68, "text": " sobreviene por sumatoria en N, de y subitecho menos y sub\u00ed al cuadrado, bien, y voy a", "tokens": [50998, 5473, 85, 10174, 1515, 2408, 1639, 654, 465, 426, 11, 368, 288, 1422, 642, 5738, 8902, 288, 1422, 870, 419, 34434, 14974, 11, 3610, 11, 288, 7552, 257, 51502], "temperature": 0.0, "avg_logprob": -0.4435233801183566, "compression_ratio": 1.4388888888888889, "no_speech_prob": 0.05643079802393913}, {"id": 327, "seek": 204668, "start": 2046.68, "end": 2053.8, "text": " encontrar el armin en dobleb, o sea, lo que est\u00e1 ac\u00e1 dentro que es rn de xy dobleb,", "tokens": [50364, 17525, 806, 594, 2367, 465, 360, 638, 65, 11, 277, 4158, 11, 450, 631, 3192, 23496, 10856, 631, 785, 367, 77, 368, 2031, 88, 360, 638, 65, 11, 50720], "temperature": 0.0, "avg_logprob": -0.3959006451545878, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.06698580831289291}, {"id": 328, "seek": 204668, "start": 2053.8, "end": 2062.2400000000002, "text": " le voy a ir variando estos dobleb hasta que hacen contra el ideal, bien, entonces,", "tokens": [50720, 476, 7552, 257, 3418, 3034, 1806, 12585, 360, 638, 65, 10764, 631, 27434, 10742, 806, 7157, 11, 3610, 11, 13003, 11, 51142], "temperature": 0.0, "avg_logprob": -0.3959006451545878, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.06698580831289291}, {"id": 329, "seek": 204668, "start": 2062.2400000000002, "end": 2068.04, "text": " supongamos que tengo unas funciones, vamos a ver una funci\u00f3n bastante simple como", "tokens": [51142, 9331, 556, 2151, 631, 13989, 25405, 1019, 23469, 11, 5295, 257, 1306, 2002, 43735, 14651, 2199, 2617, 51432], "temperature": 0.0, "avg_logprob": -0.3959006451545878, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.06698580831289291}, {"id": 330, "seek": 204668, "start": 2068.04, "end": 2073.2400000000002, "text": " para ver c\u00f3mo funciona esto, el entrenamiento de una red se da utilizando una t\u00e9cnica", "tokens": [51432, 1690, 1306, 12826, 26210, 7433, 11, 806, 45069, 16971, 368, 2002, 2182, 369, 1120, 19906, 1806, 2002, 45411, 51692], "temperature": 0.0, "avg_logprob": -0.3959006451545878, "compression_ratio": 1.6220095693779903, "no_speech_prob": 0.06698580831289291}, {"id": 331, "seek": 207324, "start": 2073.3199999999997, "end": 2078.56, "text": " llama de senso polgradiente, hay otras t\u00e9cnicas, pero estas por lejos la m\u00e1s utilizada de todas,", "tokens": [50368, 23272, 368, 3151, 539, 1180, 861, 345, 8413, 11, 4842, 20244, 25564, 40672, 11, 4768, 13897, 1515, 476, 19136, 635, 3573, 19906, 1538, 368, 10906, 11, 50630], "temperature": 0.0, "avg_logprob": -0.3528311956496466, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.12098284810781479}, {"id": 332, "seek": 207324, "start": 2078.56, "end": 2083.9199999999996, "text": " y la t\u00e9cnica de senso polgradiente funciona la siente manera, no, si yo tuviera una funci\u00f3n que", "tokens": [50630, 288, 635, 45411, 368, 3151, 539, 1180, 861, 345, 8413, 26210, 635, 262, 8413, 13913, 11, 572, 11, 1511, 5290, 38177, 10609, 2002, 43735, 631, 50898], "temperature": 0.0, "avg_logprob": -0.3528311956496466, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.12098284810781479}, {"id": 333, "seek": 207324, "start": 2083.9199999999996, "end": 2089.12, "text": " va solamente en una dimensi\u00f3n y quiero minimizarla y arranco con un punto por ac\u00e1, digo,", "tokens": [50898, 2773, 27814, 465, 2002, 5013, 694, 2560, 288, 16811, 4464, 9736, 875, 288, 50235, 1291, 416, 517, 14326, 1515, 23496, 11, 22990, 11, 51158], "temperature": 0.0, "avg_logprob": -0.3528311956496466, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.12098284810781479}, {"id": 334, "seek": 207324, "start": 2089.12, "end": 2094.08, "text": " bueno, mi peso inicial me dice que voy a terminar en este lado, entonces, yo puedo calcular", "tokens": [51158, 11974, 11, 2752, 28149, 44076, 385, 10313, 631, 7552, 257, 36246, 465, 4065, 11631, 11, 13003, 11, 5290, 21612, 2104, 17792, 51406], "temperature": 0.0, "avg_logprob": -0.3528311956496466, "compression_ratio": 1.676991150442478, "no_speech_prob": 0.12098284810781479}, {"id": 335, "seek": 209408, "start": 2095.04, "end": 2102.96, "text": " la derivada en ese lado y decir, bueno, para que lado voy a bajando mi funci\u00f3n de cost\u00f3n, o sea,", "tokens": [50412, 635, 10151, 1538, 465, 10167, 11631, 288, 10235, 11, 11974, 11, 1690, 631, 11631, 7552, 257, 23589, 1806, 2752, 43735, 368, 2063, 1801, 11, 277, 4158, 11, 50808], "temperature": 0.0, "avg_logprob": -0.4003267149994339, "compression_ratio": 2.0129310344827585, "no_speech_prob": 0.2742578983306885}, {"id": 336, "seek": 209408, "start": 2102.96, "end": 2107.6, "text": " suponiendo que esta es la funci\u00f3n de p\u00e9rdida, funciona de cost\u00f3n, puedo decir, para que el lado", "tokens": [50808, 9331, 266, 7304, 631, 5283, 785, 635, 43735, 368, 280, 4198, 67, 2887, 11, 26210, 368, 2063, 1801, 11, 21612, 10235, 11, 1690, 631, 806, 11631, 51040], "temperature": 0.0, "avg_logprob": -0.4003267149994339, "compression_ratio": 2.0129310344827585, "no_speech_prob": 0.2742578983306885}, {"id": 337, "seek": 209408, "start": 2107.6, "end": 2111.92, "text": " voy bajando mi funci\u00f3n de p\u00e9rdida y dice, bueno, lo voy bajando si bajo por esta dimensi\u00f3n,", "tokens": [51040, 7552, 23589, 1806, 2752, 43735, 368, 280, 4198, 67, 2887, 288, 10313, 11, 11974, 11, 450, 7552, 23589, 1806, 1511, 30139, 1515, 5283, 5013, 694, 2560, 11, 51256], "temperature": 0.0, "avg_logprob": -0.4003267149994339, "compression_ratio": 2.0129310344827585, "no_speech_prob": 0.2742578983306885}, {"id": 338, "seek": 209408, "start": 2111.92, "end": 2116.68, "text": " si bajo por esta direcci\u00f3n, entonces, ah\u00ed le digo, bueno, baja un poquito por ah\u00ed y cae", "tokens": [51256, 1511, 30139, 1515, 5283, 1264, 14735, 11, 13003, 11, 12571, 476, 22990, 11, 11974, 11, 49427, 517, 28229, 1515, 12571, 288, 1335, 68, 51494], "temperature": 0.0, "avg_logprob": -0.4003267149994339, "compression_ratio": 2.0129310344827585, "no_speech_prob": 0.2742578983306885}, {"id": 339, "seek": 209408, "start": 2116.68, "end": 2120.92, "text": " culame otro valor que va a estar ac\u00e1 y ah\u00ed le vuelto a ver a la derivada y bueno,", "tokens": [51494, 11021, 529, 11921, 15367, 631, 2773, 257, 8755, 23496, 288, 12571, 476, 20126, 1353, 257, 1306, 257, 635, 10151, 1538, 288, 11974, 11, 51706], "temperature": 0.0, "avg_logprob": -0.4003267149994339, "compression_ratio": 2.0129310344827585, "no_speech_prob": 0.2742578983306885}, {"id": 340, "seek": 212092, "start": 2120.92, "end": 2124.96, "text": " en qu\u00e9 sentido voy bajando y dice, voy bajando si me parallas, entonces, ah\u00ed me encuentro", "tokens": [50364, 465, 8057, 19850, 7552, 23589, 1806, 288, 10313, 11, 7552, 23589, 1806, 1511, 385, 971, 336, 296, 11, 13003, 11, 12571, 385, 23708, 340, 50566], "temperature": 0.0, "avg_logprob": -0.39677865164620535, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.01793217472732067}, {"id": 341, "seek": 212092, "start": 2124.96, "end": 2128.84, "text": " a tu valor que est\u00e9n en esa direcci\u00f3n, calculo de vuelta de la derivada y as\u00ed, o sea, yo puedo", "tokens": [50566, 257, 2604, 15367, 631, 871, 3516, 465, 11342, 1264, 14735, 11, 4322, 78, 368, 41542, 368, 635, 10151, 1538, 288, 8582, 11, 277, 4158, 11, 5290, 21612, 50760], "temperature": 0.0, "avg_logprob": -0.39677865164620535, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.01793217472732067}, {"id": 342, "seek": 212092, "start": 2128.84, "end": 2135.6800000000003, "text": " ir y tirando esta manera hasta llegar a un m\u00ednimo, bien, eso de ya m\u00e1s de cento por alguien,", "tokens": [50760, 3418, 288, 13807, 1806, 5283, 13913, 10764, 24892, 257, 517, 47393, 11, 3610, 11, 7287, 368, 2478, 3573, 368, 1489, 78, 1515, 25814, 11, 51102], "temperature": 0.0, "avg_logprob": -0.39677865164620535, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.01793217472732067}, {"id": 343, "seek": 212092, "start": 2135.6800000000003, "end": 2140.84, "text": " luego yo tengo, quiero encontrar el m\u00ednimo de una funci\u00f3n, supongamos que esta es mi funci\u00f3n", "tokens": [51102, 17222, 5290, 13989, 11, 16811, 17525, 806, 47393, 368, 2002, 43735, 11, 9331, 266, 70, 2151, 631, 5283, 785, 2752, 43735, 51360], "temperature": 0.0, "avg_logprob": -0.39677865164620535, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.01793217472732067}, {"id": 344, "seek": 212092, "start": 2140.84, "end": 2146.92, "text": " de p\u00e9rdida y empec\u00e9 teniendo este valor calculo donde est\u00e1 en la direcci\u00f3n en la cual", "tokens": [51360, 368, 280, 4198, 67, 2887, 288, 846, 494, 13523, 2064, 7304, 4065, 15367, 2104, 2444, 78, 10488, 3192, 465, 635, 1264, 14735, 465, 635, 10911, 51664], "temperature": 0.0, "avg_logprob": -0.39677865164620535, "compression_ratio": 1.7279411764705883, "no_speech_prob": 0.01793217472732067}, {"id": 345, "seek": 214692, "start": 2146.92, "end": 2153.92, "text": " le puedo bajar m\u00e1s y voy moviendo me por ah\u00ed hasta llegar al punto bajo, esta, esto es", "tokens": [50364, 476, 21612, 23589, 289, 3573, 288, 7552, 2402, 7304, 385, 1515, 12571, 10764, 24892, 419, 14326, 30139, 11, 5283, 11, 7433, 785, 50714], "temperature": 0.0, "avg_logprob": -0.3670814915707237, "compression_ratio": 1.754863813229572, "no_speech_prob": 0.11151576042175293}, {"id": 346, "seek": 214692, "start": 2153.92, "end": 2158.44, "text": " un caso ideal en el cual yo tengo una sola variable que estoy tratando de encontrar, en el", "tokens": [50714, 517, 9666, 7157, 465, 806, 10911, 5290, 13989, 2002, 34162, 7006, 631, 15796, 21507, 1806, 368, 17525, 11, 465, 806, 50940], "temperature": 0.0, "avg_logprob": -0.3670814915707237, "compression_ratio": 1.754863813229572, "no_speech_prob": 0.11151576042175293}, {"id": 347, "seek": 214692, "start": 2158.44, "end": 2164.64, "text": " caso real, yo estoy minimizando, digamos, minimizando esta funci\u00f3n respecto a doleb\u00e9, que", "tokens": [50940, 9666, 957, 11, 5290, 15796, 4464, 590, 1806, 11, 36430, 11, 4464, 590, 1806, 5283, 43735, 35694, 257, 360, 306, 27166, 11, 631, 51250], "temperature": 0.0, "avg_logprob": -0.3670814915707237, "compression_ratio": 1.754863813229572, "no_speech_prob": 0.11151576042175293}, {"id": 348, "seek": 214692, "start": 2164.64, "end": 2168.7200000000003, "text": " es una cosa que son muchas matrices con muchos pesos, con muchas cosas y pod\u00e9is llegar a", "tokens": [51250, 785, 2002, 10163, 631, 1872, 16072, 32284, 416, 17061, 33204, 11, 416, 16072, 12218, 288, 45728, 24892, 257, 51454], "temperature": 0.0, "avg_logprob": -0.3670814915707237, "compression_ratio": 1.754863813229572, "no_speech_prob": 0.11151576042175293}, {"id": 349, "seek": 214692, "start": 2168.7200000000003, "end": 2176.28, "text": " hacer miles de millones de pesos, pero vuelta, en un caso ideal si yo estuviera solamente", "tokens": [51454, 6720, 6193, 368, 22416, 368, 33204, 11, 4768, 41542, 11, 465, 517, 9666, 7157, 1511, 5290, 49777, 10609, 27814, 51832], "temperature": 0.0, "avg_logprob": -0.3670814915707237, "compression_ratio": 1.754863813229572, "no_speech_prob": 0.11151576042175293}, {"id": 350, "seek": 217628, "start": 2176.28, "end": 2180.36, "text": " minimizando una severidad de esta manera, cuando yo estoy minimizando, misiones de variables", "tokens": [50364, 4464, 590, 1806, 2002, 2802, 4580, 368, 5283, 13913, 11, 7767, 5290, 15796, 4464, 590, 1806, 11, 275, 1991, 279, 368, 9102, 50568], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 351, "seek": 217628, "start": 2180.36, "end": 2184.6800000000003, "text": " a la vez, lo que pasa es que esta superficie, lo que tengo ac\u00e1 no va a hacer una curva tan", "tokens": [50568, 257, 635, 5715, 11, 450, 631, 20260, 785, 631, 5283, 23881, 414, 11, 450, 631, 13989, 23496, 572, 2773, 257, 6720, 2002, 1262, 2757, 7603, 50784], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 352, "seek": 217628, "start": 2184.6800000000003, "end": 2189.8, "text": " linda, sino que va a hacer una superficie rusa que tiene un mont\u00f3n de \u00f3ptimos locales", "tokens": [50784, 287, 6837, 11, 18108, 631, 2773, 257, 6720, 2002, 23881, 414, 367, 20318, 631, 7066, 517, 45259, 368, 11857, 662, 8372, 2654, 279, 51040], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 353, "seek": 217628, "start": 2189.8, "end": 2193.0, "text": " que no me van a servir, pero cuando yo hago este algoritmo lo que va a hacer es caerse un", "tokens": [51040, 631, 572, 385, 3161, 257, 29463, 11, 4768, 7767, 5290, 38721, 4065, 3501, 50017, 3280, 450, 631, 2773, 257, 6720, 785, 1335, 260, 405, 517, 51200], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 354, "seek": 217628, "start": 2193.0, "end": 2199.1600000000003, "text": " \u00f3ptimo local, imag\u00ednense que si esta curva tuviera esta forma, entonces este algoritmo llegar\u00eda", "tokens": [51200, 11857, 662, 6934, 2654, 11, 2576, 10973, 1288, 631, 1511, 5283, 1262, 2757, 38177, 10609, 5283, 8366, 11, 13003, 4065, 3501, 50017, 3280, 11234, 21178, 51508], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 355, "seek": 217628, "start": 2199.1600000000003, "end": 2203.5600000000004, "text": " a un \u00f3ptimo local por ac\u00e1, pero se perder\u00eda el \u00f3ptimo global que est\u00e1 por ac\u00e1, bien,", "tokens": [51508, 257, 517, 11857, 662, 6934, 2654, 1515, 23496, 11, 4768, 369, 26971, 2686, 806, 11857, 662, 6934, 4338, 631, 3192, 1515, 23496, 11, 3610, 11, 51728], "temperature": 0.0, "avg_logprob": -0.24724132609817218, "compression_ratio": 1.985611510791367, "no_speech_prob": 0.0578947439789772}, {"id": 356, "seek": 220356, "start": 2203.56, "end": 2207.84, "text": " eso es algo que puede pasar, entonces bueno, no se asusten que cuando uno entre una reneoronal,", "tokens": [50364, 7287, 785, 8655, 631, 8919, 25344, 11, 13003, 11974, 11, 572, 369, 382, 381, 268, 631, 7767, 8526, 3962, 2002, 319, 716, 284, 21523, 11, 50578], "temperature": 0.0, "avg_logprob": -0.34651768793825244, "compression_ratio": 1.7849056603773585, "no_speech_prob": 0.01915430650115013}, {"id": 357, "seek": 220356, "start": 2207.84, "end": 2212.2, "text": " nunca va a estar seguro de que encontr\u00e9 el \u00f3ptimo posible de toda la red, de todas las", "tokens": [50578, 13768, 2773, 257, 8755, 31424, 368, 631, 10176, 10521, 806, 11857, 662, 6934, 26644, 368, 11687, 635, 2182, 11, 368, 10906, 2439, 50796], "temperature": 0.0, "avg_logprob": -0.34651768793825244, "compression_ratio": 1.7849056603773585, "no_speech_prob": 0.01915430650115013}, {"id": 358, "seek": 220356, "start": 2212.2, "end": 2217.48, "text": " posibles, sino que bueno, tengo que conformarme con encontrar una bastante buena probando varias veces,", "tokens": [50796, 1366, 14428, 11, 18108, 631, 11974, 11, 13989, 631, 18975, 35890, 416, 17525, 2002, 14651, 25710, 1239, 1806, 37496, 17054, 11, 51060], "temperature": 0.0, "avg_logprob": -0.34651768793825244, "compression_ratio": 1.7849056603773585, "no_speech_prob": 0.01915430650115013}, {"id": 359, "seek": 220356, "start": 2217.48, "end": 2227.2, "text": " bueno entonces, dec\u00edamos esto sobre entrenamiento, ok, el entrenamiento intentan encontrar", "tokens": [51060, 11974, 13003, 11, 979, 16275, 7433, 5473, 45069, 16971, 11, 3133, 11, 806, 45069, 16971, 8446, 282, 17525, 51546], "temperature": 0.0, "avg_logprob": -0.34651768793825244, "compression_ratio": 1.7849056603773585, "no_speech_prob": 0.01915430650115013}, {"id": 360, "seek": 220356, "start": 2227.2, "end": 2232.32, "text": " los pesos que minimizan esta funci\u00f3n de p\u00e9rdida, o sea la combinaci\u00f3n de matrices doleb\u00e9", "tokens": [51546, 1750, 33204, 631, 4464, 590, 282, 5283, 43735, 368, 280, 4198, 67, 2887, 11, 277, 4158, 635, 38514, 3482, 368, 32284, 360, 306, 27166, 51802], "temperature": 0.0, "avg_logprob": -0.34651768793825244, "compression_ratio": 1.7849056603773585, "no_speech_prob": 0.01915430650115013}, {"id": 361, "seek": 223232, "start": 2232.32, "end": 2238.7400000000002, "text": " que hace que esta funci\u00f3n sea lo menor posible, la t\u00e9cnica que se utiliza es en su pobre", "tokens": [50364, 631, 10032, 631, 5283, 43735, 4158, 450, 26343, 26644, 11, 635, 45411, 631, 369, 4976, 13427, 785, 465, 459, 40819, 50685], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 362, "seek": 223232, "start": 2238.7400000000002, "end": 2243.5, "text": " adiente, pero lo que est\u00e1 convencionando ac\u00e1, se usa una cosa de llamas de cienso por", "tokens": [50685, 614, 8413, 11, 4768, 450, 631, 3192, 7158, 10015, 1806, 23496, 11, 369, 29909, 2002, 10163, 368, 16848, 296, 368, 269, 1053, 539, 1515, 50923], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 363, "seek": 223232, "start": 2243.5, "end": 2250.44, "text": " antes esto castico que se trata de agarrar cada punto, se agarr\u00f3 cada punto de entrada y", "tokens": [50923, 11014, 7433, 4193, 2789, 631, 369, 31920, 368, 623, 2284, 289, 8411, 14326, 11, 369, 623, 2284, 812, 8411, 14326, 368, 37119, 288, 51270], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 364, "seek": 223232, "start": 2250.44, "end": 2253.7200000000003, "text": " trata de hacer el cienso por pobre adiente, considerando solamente ese punto y es pues", "tokens": [51270, 31920, 368, 6720, 806, 269, 1053, 539, 1515, 40819, 614, 8413, 11, 1949, 1806, 27814, 10167, 14326, 288, 785, 11059, 51434], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 365, "seek": 223232, "start": 2253.7200000000003, "end": 2257.88, "text": " agarr\u00f3 otro punto de entrada y luego varias veces, luego que tiene eso es que es s\u00faper lento,", "tokens": [51434, 623, 2284, 812, 11921, 14326, 368, 37119, 288, 17222, 37496, 17054, 11, 17222, 631, 7066, 7287, 785, 631, 785, 43282, 287, 15467, 11, 51642], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 366, "seek": 223232, "start": 2257.88, "end": 2261.1600000000003, "text": " o sea es como que tiene buena probidad de convergencia, pero s\u00faper lento, todo lo que", "tokens": [51642, 277, 4158, 785, 2617, 631, 7066, 25710, 1239, 4580, 368, 9652, 1766, 2755, 11, 4768, 43282, 287, 15467, 11, 5149, 450, 631, 51806], "temperature": 0.0, "avg_logprob": -0.4559104605896832, "compression_ratio": 1.935251798561151, "no_speech_prob": 0.09255782514810562}, {"id": 367, "seek": 226116, "start": 2261.24, "end": 2268.92, "text": " hace es hacer de cienso por adiente en lote o en batches que significa bueno, en vez de tomar", "tokens": [50368, 10032, 785, 6720, 368, 269, 1053, 539, 1515, 614, 8413, 465, 287, 1370, 277, 465, 15245, 279, 631, 19957, 11974, 11, 465, 5715, 368, 2916, 289, 50752], "temperature": 0.0, "avg_logprob": -0.3915581703186035, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.12520800530910492}, {"id": 368, "seek": 226116, "start": 2268.92, "end": 2274.0, "text": " todo el conjunto de entrenamiento que puede tener 100 millones de ejemplos, todo modea 120", "tokens": [50752, 5149, 806, 37776, 368, 45069, 16971, 631, 8919, 11640, 2319, 22416, 368, 10012, 5895, 329, 11, 5149, 4391, 64, 10411, 51006], "temperature": 0.0, "avg_logprob": -0.3915581703186035, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.12520800530910492}, {"id": 369, "seek": 226116, "start": 2274.0, "end": 2278.64, "text": " una cosa de cieno, no s\u00e9, 200, o el hijo un batch que digo bueno, tomo este conjunto de ejemplos", "tokens": [51006, 2002, 10163, 368, 269, 1053, 78, 11, 572, 7910, 11, 2331, 11, 277, 806, 38390, 517, 15245, 631, 22990, 11974, 11, 2916, 78, 4065, 37776, 368, 10012, 5895, 329, 51238], "temperature": 0.0, "avg_logprob": -0.3915581703186035, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.12520800530910492}, {"id": 370, "seek": 226116, "start": 2278.64, "end": 2285.2799999999997, "text": " y hago de cienso por dentro de ah\u00ed, pues tomo otro conjunto de cienso por adiente por ah\u00ed y hasta", "tokens": [51238, 288, 38721, 368, 269, 1053, 539, 1515, 10856, 368, 12571, 11, 11059, 2916, 78, 11921, 37776, 368, 269, 1053, 539, 1515, 614, 8413, 1515, 12571, 288, 10764, 51570], "temperature": 0.0, "avg_logprob": -0.3915581703186035, "compression_ratio": 1.7767441860465116, "no_speech_prob": 0.12520800530910492}, {"id": 371, "seek": 228528, "start": 2285.48, "end": 2294.0400000000004, "text": " llegar a llegar a un \u00f3ptimo, bien, los siguientes vachos para ello, entonces yo les dije hasta", "tokens": [50374, 24892, 257, 24892, 257, 517, 11857, 662, 6934, 11, 3610, 11, 1750, 21152, 20135, 371, 608, 329, 1690, 33549, 11, 13003, 5290, 1512, 39414, 10764, 50802], "temperature": 0.0, "avg_logprob": -0.38538824034131264, "compression_ratio": 1.8091603053435115, "no_speech_prob": 0.11815474182367325}, {"id": 372, "seek": 228528, "start": 2294.0400000000004, "end": 2300.4, "text": " ahora que todas las cosas ten\u00edan que ser derivables y el hecho es que sean derivables implica que", "tokens": [50802, 9923, 631, 10906, 2439, 12218, 47596, 631, 816, 10151, 2965, 288, 806, 13064, 785, 631, 37670, 10151, 2965, 8484, 2262, 631, 51120], "temperature": 0.0, "avg_logprob": -0.38538824034131264, "compression_ratio": 1.8091603053435115, "no_speech_prob": 0.11815474182367325}, {"id": 373, "seek": 228528, "start": 2300.4, "end": 2304.2000000000003, "text": " lo vamos a derivar en el momento, lo vamos a hacer ac\u00e1 ni una derivada deamos porque en realidad", "tokens": [51120, 450, 5295, 257, 10151, 289, 465, 806, 9333, 11, 450, 5295, 257, 6720, 23496, 3867, 2002, 10151, 1538, 368, 2151, 4021, 465, 25635, 51310], "temperature": 0.0, "avg_logprob": -0.38538824034131264, "compression_ratio": 1.8091603053435115, "no_speech_prob": 0.11815474182367325}, {"id": 374, "seek": 228528, "start": 2304.2000000000003, "end": 2309.88, "text": " los paquetes que se utilizan para trabajar con estas cosas en realidad son paquetes que", "tokens": [51310, 1750, 2502, 19343, 279, 631, 369, 19906, 282, 1690, 30793, 416, 13897, 12218, 465, 25635, 1872, 2502, 19343, 279, 631, 51594], "temperature": 0.0, "avg_logprob": -0.38538824034131264, "compression_ratio": 1.8091603053435115, "no_speech_prob": 0.11815474182367325}, {"id": 375, "seek": 228528, "start": 2309.88, "end": 2314.2000000000003, "text": " permiten hacer derivaciones autom\u00e1ticas, o sea toda la gracia de construir redes neuronales,", "tokens": [51594, 13423, 268, 6720, 10151, 9188, 3553, 44997, 11, 277, 4158, 11687, 635, 11625, 654, 368, 38445, 16762, 34090, 4229, 11, 51810], "temperature": 0.0, "avg_logprob": -0.38538824034131264, "compression_ratio": 1.8091603053435115, "no_speech_prob": 0.11815474182367325}, {"id": 376, "seek": 231420, "start": 2314.2, "end": 2318.3999999999996, "text": " utilizando ciertas librer\u00edas, es que las librer\u00edas permiten definir todas estas cosas como", "tokens": [50364, 19906, 1806, 49252, 296, 4939, 260, 10025, 11, 785, 631, 2439, 4939, 260, 10025, 13423, 268, 1561, 347, 10906, 13897, 12218, 2617, 50574], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 377, "seek": 231420, "start": 2318.3999999999996, "end": 2322.9199999999996, "text": " vectors y despu\u00e9s ellos hacen las derivadas autom\u00e1ticamente calculando autom\u00e1ticamente, pero en", "tokens": [50574, 18875, 288, 15283, 16353, 27434, 2439, 10151, 6872, 3553, 7656, 23653, 4322, 1806, 3553, 7656, 23653, 11, 4768, 465, 50800], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 378, "seek": 231420, "start": 2322.9199999999996, "end": 2328.24, "text": " definitiva, la tenia que se usa para que acular, se llama propaedition que implica que cuando yo", "tokens": [50800, 28781, 5931, 11, 635, 2064, 654, 631, 369, 29909, 1690, 631, 696, 425, 289, 11, 369, 23272, 447, 4306, 292, 849, 631, 8484, 2262, 631, 7767, 5290, 51066], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 379, "seek": 231420, "start": 2328.24, "end": 2333.96, "text": " voy calculando, los peces de una red, los valores de una red, yo digo, el momento en", "tokens": [51066, 7552, 2104, 2444, 1806, 11, 1750, 520, 887, 368, 2002, 2182, 11, 1750, 38790, 368, 2002, 2182, 11, 5290, 22990, 11, 806, 9333, 465, 51352], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 380, "seek": 231420, "start": 2333.96, "end": 2338.48, "text": " trav\u00e9s de x, lo multiplico por del eb, pues le pasa la funci\u00f3n de activaci\u00f3n, lo multiplico por", "tokens": [51352, 24463, 368, 2031, 11, 450, 12788, 2789, 1515, 1103, 308, 65, 11, 11059, 476, 20260, 635, 43735, 368, 2430, 3482, 11, 450, 12788, 2789, 1515, 51578], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 381, "seek": 231420, "start": 2338.48, "end": 2342.7599999999998, "text": " otrable ver, le pasa la funci\u00f3n de activaci\u00f3n, a medida que voy calculando eso voy dejando como", "tokens": [51578, 13623, 638, 1306, 11, 476, 20260, 635, 43735, 368, 2430, 3482, 11, 257, 32984, 631, 7552, 4322, 1806, 7287, 7552, 21259, 1806, 2617, 51792], "temperature": 0.0, "avg_logprob": -0.48936393044211646, "compression_ratio": 1.972318339100346, "no_speech_prob": 0.035822294652462006}, {"id": 382, "seek": 234276, "start": 2342.76, "end": 2348.0800000000004, "text": " todos los valores sin termedios, esos valores se usan de atr\u00e1s para adelante, por eso", "tokens": [50364, 6321, 1750, 38790, 3343, 1796, 1912, 2717, 11, 22411, 38790, 369, 505, 282, 368, 22906, 1690, 40214, 11, 1515, 7287, 50630], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 383, "seek": 234276, "start": 2348.0800000000004, "end": 2352.28, "text": " se llama propaedition para que acular las derivadas, porque en realidad todos los valores de", "tokens": [50630, 369, 23272, 447, 4306, 292, 849, 1690, 631, 696, 425, 289, 2439, 10151, 6872, 11, 4021, 465, 25635, 6321, 1750, 38790, 368, 50840], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 384, "seek": 234276, "start": 2352.28, "end": 2356.28, "text": " sumas multiplicaciones, etc\u00e9tera que yo fui llegando en el medio, si utilizan como que se", "tokens": [50840, 2408, 296, 17596, 9188, 11, 5183, 526, 23833, 631, 5290, 27863, 11234, 1806, 465, 806, 22123, 11, 1511, 19906, 282, 2617, 631, 369, 51040], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 385, "seek": 234276, "start": 2356.28, "end": 2360.1600000000003, "text": " precalculan para despu\u00e9s que acular la derivada, y el va a curar propaedition es una t\u00e9cnica que", "tokens": [51040, 4346, 304, 2444, 282, 1690, 15283, 631, 696, 425, 289, 635, 10151, 1538, 11, 288, 806, 2773, 257, 1262, 289, 447, 4306, 292, 849, 785, 2002, 45411, 631, 51234], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 386, "seek": 234276, "start": 2360.1600000000003, "end": 2366.2400000000002, "text": " me ayuda a ser eso r\u00e1pidamente. Bien, entonces, esta la pregunta que le dec\u00eda hoy, yo puedo", "tokens": [51234, 385, 30737, 257, 816, 7287, 18213, 49663, 13, 16956, 11, 13003, 11, 5283, 635, 24252, 631, 476, 37599, 13775, 11, 5290, 21612, 51538], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 387, "seek": 234276, "start": 2366.2400000000002, "end": 2370.1200000000003, "text": " encontrar la mejor funci\u00f3n posible, puedo encontrar la mejor red neuronal que explique mi", "tokens": [51538, 17525, 635, 11479, 43735, 26644, 11, 21612, 17525, 635, 11479, 2182, 12087, 21523, 631, 1490, 1925, 2752, 51732], "temperature": 0.0, "avg_logprob": -0.39735982189439745, "compression_ratio": 1.8223684210526316, "no_speech_prob": 0.050481054931879044}, {"id": 388, "seek": 237012, "start": 2370.12, "end": 2375.88, "text": " problema, 100% bien, la verdad es que no, porque en general este proceso se cae en optimos", "tokens": [50364, 12395, 11, 2319, 4, 3610, 11, 635, 13692, 785, 631, 572, 11, 4021, 465, 2674, 4065, 29314, 369, 1335, 68, 465, 5028, 329, 50652], "temperature": 0.0, "avg_logprob": -0.29444180297851563, "compression_ratio": 1.8492063492063493, "no_speech_prob": 0.1551257073879242}, {"id": 389, "seek": 237012, "start": 2375.88, "end": 2381.16, "text": " locales, y este tipo de funciones que tienen miles de millones de par\u00e1metros, lo que pasa que", "tokens": [50652, 2654, 279, 11, 288, 4065, 9746, 368, 1019, 23469, 631, 12536, 6193, 368, 22416, 368, 971, 842, 29570, 11, 450, 631, 20260, 631, 50916], "temperature": 0.0, "avg_logprob": -0.29444180297851563, "compression_ratio": 1.8492063492063493, "no_speech_prob": 0.1551257073879242}, {"id": 390, "seek": 237012, "start": 2381.16, "end": 2386.8399999999997, "text": " tienen much\u00edsimos optimos locales, y bueno, el entrenamiento se va a caer siempre en un", "tokens": [50916, 12536, 29353, 8372, 5028, 329, 2654, 279, 11, 288, 11974, 11, 806, 45069, 16971, 369, 2773, 257, 1335, 260, 12758, 465, 517, 51200], "temperature": 0.0, "avg_logprob": -0.29444180297851563, "compression_ratio": 1.8492063492063493, "no_speech_prob": 0.1551257073879242}, {"id": 391, "seek": 237012, "start": 2386.8399999999997, "end": 2392.2, "text": " optimo local, lo que no hace para evitar eso de alguna manera es, por ejemplo, entrenar varias veces,", "tokens": [51200, 5028, 78, 2654, 11, 450, 631, 572, 10032, 1690, 31326, 7287, 368, 20651, 13913, 785, 11, 1515, 13358, 11, 45069, 289, 37496, 17054, 11, 51468], "temperature": 0.0, "avg_logprob": -0.29444180297851563, "compression_ratio": 1.8492063492063493, "no_speech_prob": 0.1551257073879242}, {"id": 392, "seek": 237012, "start": 2392.2, "end": 2395.68, "text": " una misma red, diciendo bueno, tengo una misma red con los mismos par\u00e1metros, el entreno", "tokens": [51468, 2002, 24946, 2182, 11, 42797, 11974, 11, 13989, 2002, 24946, 2182, 416, 1750, 47458, 971, 842, 29570, 11, 806, 45069, 78, 51642], "temperature": 0.0, "avg_logprob": -0.29444180297851563, "compression_ratio": 1.8492063492063493, "no_speech_prob": 0.1551257073879242}, {"id": 393, "seek": 239568, "start": 2395.68, "end": 2399.96, "text": " muchas veces, y veo cu\u00e1l, cu\u00e1l le fue mejor, de todos los entrenamientos, esa es una de las formas,", "tokens": [50364, 16072, 17054, 11, 288, 41319, 44318, 11, 44318, 476, 9248, 11479, 11, 368, 6321, 1750, 45069, 43466, 11, 11342, 785, 2002, 368, 2439, 33463, 11, 50578], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 394, "seek": 239568, "start": 2399.96, "end": 2406.12, "text": " y el otro problema de tiene es el sobre ajuste, creo que no lo mencionamos en la clase anterior,", "tokens": [50578, 288, 806, 11921, 12395, 368, 7066, 785, 806, 5473, 41023, 68, 11, 14336, 631, 572, 450, 37030, 2151, 465, 635, 44578, 22272, 11, 50886], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 395, "seek": 239568, "start": 2406.12, "end": 2412.6, "text": " sobre ajuste significa que las renevernales tienen un problema que lo tienen otro m\u00e9todo de", "tokens": [50886, 5473, 41023, 68, 19957, 631, 2439, 319, 716, 331, 4660, 279, 12536, 517, 12395, 631, 450, 12536, 11921, 20275, 17423, 368, 51210], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 396, "seek": 239568, "start": 2412.6, "end": 2417.48, "text": " classificaci\u00f3n, pero las renevernales en particular, porque como que son muy vers\u00e1tiles, y es que", "tokens": [51210, 1508, 40802, 11, 4768, 2439, 319, 716, 331, 4660, 279, 465, 1729, 11, 4021, 2617, 631, 1872, 5323, 1774, 7656, 4680, 11, 288, 785, 631, 51454], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 397, "seek": 239568, "start": 2417.48, "end": 2421.3999999999996, "text": " se pueden aprender muy f\u00e1cil todo el conjunto de entrenamiento, yo puedo entrenar una red que se", "tokens": [51454, 369, 14714, 24916, 5323, 17474, 5149, 806, 37776, 368, 45069, 16971, 11, 5290, 21612, 45069, 289, 2002, 2182, 631, 369, 51650], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 398, "seek": 239568, "start": 2421.3999999999996, "end": 2425.24, "text": " aprenda muy bien en conjunto de entrenamiento y me diga, s\u00ed, parece que X le corresponde", "tokens": [51650, 21003, 64, 5323, 3610, 465, 37776, 368, 45069, 16971, 288, 385, 2528, 64, 11, 8600, 11, 14120, 631, 1783, 476, 6805, 68, 51842], "temperature": 0.0, "avg_logprob": -0.33401214599609375, "compression_ratio": 1.8983606557377048, "no_speech_prob": 0.11299023032188416}, {"id": 399, "seek": 242524, "start": 2425.24, "end": 2430.9199999999996, "text": " este ah\u00ed y anda barbaro y la funci\u00f3n de los me da casi cero, y sin embargo, lo prueba el conjunto de", "tokens": [50364, 4065, 12571, 288, 21851, 2159, 5356, 78, 288, 635, 43735, 368, 1750, 385, 1120, 22567, 269, 2032, 11, 288, 3343, 23955, 11, 450, 48241, 806, 37776, 368, 50648], "temperature": 0.0, "avg_logprob": -0.38437585612289776, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.009349667467176914}, {"id": 400, "seek": 242524, "start": 2430.9199999999996, "end": 2436.7999999999997, "text": " test y le va horrible, y eso es muy f\u00e1cil porque como les dec\u00eda, como la renevernales,", "tokens": [50648, 1500, 288, 476, 2773, 9263, 11, 288, 7287, 785, 5323, 17474, 4021, 2617, 1512, 37599, 11, 2617, 635, 319, 716, 331, 4660, 279, 11, 50942], "temperature": 0.0, "avg_logprob": -0.38437585612289776, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.009349667467176914}, {"id": 401, "seek": 242524, "start": 2436.7999999999997, "end": 2440.2999999999997, "text": " puede modelar cualquier tipo de funci\u00f3n, entonces es muy f\u00e1cil que se aprendan todo el conjunto de", "tokens": [50942, 8919, 2316, 289, 21004, 9746, 368, 43735, 11, 13003, 785, 5323, 17474, 631, 369, 21003, 282, 5149, 806, 37776, 368, 51117], "temperature": 0.0, "avg_logprob": -0.38437585612289776, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.009349667467176914}, {"id": 402, "seek": 242524, "start": 2440.2999999999997, "end": 2445.4799999999996, "text": " entrenamiento y despu\u00e9s, para el punto de telebasa, espantoso, esa es ese fen\u00f3meno de llamas", "tokens": [51117, 45069, 16971, 288, 15283, 11, 1690, 806, 14326, 368, 4304, 65, 9994, 11, 7089, 394, 9869, 11, 11342, 785, 10167, 26830, 812, 43232, 368, 16848, 296, 51376], "temperature": 0.0, "avg_logprob": -0.38437585612289776, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.009349667467176914}, {"id": 403, "seek": 242524, "start": 2445.4799999999996, "end": 2449.8399999999997, "text": " sobre ajuste, entonces bueno, hay como distintas t\u00e9cnicas para tratar de evitarlo y que la red", "tokens": [51376, 5473, 41023, 68, 11, 13003, 11974, 11, 4842, 2617, 31489, 296, 25564, 40672, 1690, 42549, 368, 31326, 752, 288, 631, 635, 2182, 51594], "temperature": 0.0, "avg_logprob": -0.38437585612289776, "compression_ratio": 1.7311827956989247, "no_speech_prob": 0.009349667467176914}, {"id": 404, "seek": 244984, "start": 2449.84, "end": 2458.6400000000003, "text": " no, digamos, no se ajustes a los datos, sino que se va a generalizar m\u00e1s, etc\u00e9tera, bien, entonces,", "tokens": [50364, 572, 11, 36430, 11, 572, 369, 41023, 279, 257, 1750, 27721, 11, 18108, 631, 369, 2773, 257, 2674, 9736, 3573, 11, 5183, 526, 23833, 11, 3610, 11, 13003, 11, 50804], "temperature": 0.0, "avg_logprob": -0.4794771873344809, "compression_ratio": 1.3509933774834437, "no_speech_prob": 0.020875776186585426}, {"id": 405, "seek": 244984, "start": 2458.6400000000003, "end": 2459.6400000000003, "text": " s\u00ed, dale.", "tokens": [50804, 8600, 11, 27326, 13, 50854], "temperature": 0.0, "avg_logprob": -0.4794771873344809, "compression_ratio": 1.3509933774834437, "no_speech_prob": 0.020875776186585426}, {"id": 406, "seek": 244984, "start": 2470.6400000000003, "end": 2475.4, "text": " Es una pregunta interesante, en realidad hay un conjunto de t\u00e9cnicas que sirven para decir", "tokens": [51404, 2313, 2002, 24252, 36396, 11, 465, 25635, 4842, 517, 37776, 368, 25564, 40672, 631, 4735, 553, 1690, 10235, 51642], "temperature": 0.0, "avg_logprob": -0.4794771873344809, "compression_ratio": 1.3509933774834437, "no_speech_prob": 0.020875776186585426}, {"id": 407, "seek": 247540, "start": 2475.4, "end": 2479.84, "text": " si yo puedo entrenar una red con un conjunto de datos m\u00e1s amplio que capaz que no est\u00e1", "tokens": [50364, 1511, 5290, 21612, 45069, 289, 2002, 2182, 416, 517, 37776, 368, 27721, 3573, 9731, 1004, 631, 35453, 631, 572, 3192, 50586], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 408, "seek": 247540, "start": 2479.84, "end": 2484.32, "text": " el todo correcto y despu\u00e9s una vez que tengo una red de entrenada, la entrena de vuelta", "tokens": [50586, 806, 5149, 3006, 78, 288, 15283, 2002, 5715, 631, 13989, 2002, 2182, 368, 45069, 1538, 11, 635, 45069, 64, 368, 41542, 50810], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 409, "seek": 247540, "start": 2484.32, "end": 2488.8, "text": " con un conjunto m\u00e1s chico pero que tiene mejor calidad y eso da mejor resultado que entrenarla", "tokens": [50810, 416, 517, 37776, 3573, 417, 2789, 4768, 631, 7066, 11479, 42955, 288, 7287, 1120, 11479, 28047, 631, 45069, 34148, 51034], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 410, "seek": 247540, "start": 2488.8, "end": 2493.76, "text": " directamente con un conjunto m\u00e1s chico o con otro tipo de datos, entonces, de ah\u00ed hay variantes,", "tokens": [51034, 46230, 416, 517, 37776, 3573, 417, 2789, 277, 416, 11921, 9746, 368, 27721, 11, 13003, 11, 368, 12571, 4842, 3034, 9327, 11, 51282], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 411, "seek": 247540, "start": 2493.76, "end": 2496.32, "text": " es decir, si yo tengo una red de una vez que ya consegu\u00ed los pesos de la red, lo puedo seguir", "tokens": [51282, 785, 10235, 11, 1511, 5290, 13989, 2002, 2182, 368, 2002, 5715, 631, 2478, 12706, 870, 1750, 33204, 368, 635, 2182, 11, 450, 21612, 18584, 51410], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 412, "seek": 247540, "start": 2496.32, "end": 2502.64, "text": " entrenando usando otros conjuntos y eso es valido, s\u00ed, o sea, se usa, es una t\u00e9cnica que se usa", "tokens": [51410, 45069, 1806, 29798, 16422, 20295, 2760, 329, 288, 7287, 785, 1323, 2925, 11, 8600, 11, 277, 4158, 11, 369, 29909, 11, 785, 2002, 45411, 631, 369, 29909, 51726], "temperature": 0.0, "avg_logprob": -0.33730993465501435, "compression_ratio": 2.00354609929078, "no_speech_prob": 0.08514554053544998}, {"id": 413, "seek": 250264, "start": 2502.64, "end": 2509.7999999999997, "text": " y est\u00e1 buena porque da buenos resultados, igual, en la tarea usted es, no s\u00e9, no s\u00e9 si va a", "tokens": [50364, 288, 3192, 25710, 4021, 1120, 49617, 36796, 11, 10953, 11, 465, 635, 256, 35425, 10467, 785, 11, 572, 7910, 11, 572, 7910, 1511, 2773, 257, 50722], "temperature": 0.0, "avg_logprob": -0.5646081589560472, "compression_ratio": 1.873015873015873, "no_speech_prob": 0.07275161147117615}, {"id": 414, "seek": 250264, "start": 2509.7999999999997, "end": 2514.04, "text": " la pena hacerlo, pero obviamente, si van a tener una red de una red de una red, lo han con", "tokens": [50722, 635, 29222, 32039, 11, 4768, 36325, 11, 1511, 3161, 257, 11640, 2002, 2182, 368, 2002, 2182, 368, 2002, 2182, 11, 450, 7276, 416, 50934], "temperature": 0.0, "avg_logprob": -0.5646081589560472, "compression_ratio": 1.873015873015873, "no_speech_prob": 0.07275161147117615}, {"id": 415, "seek": 250264, "start": 2514.04, "end": 2519.08, "text": " los datos que tienen, no creo que sean de salios a muchas cosas m\u00e1s, pero s\u00ed, tratar de ver", "tokens": [50934, 1750, 27721, 631, 12536, 11, 572, 14336, 631, 37670, 368, 1845, 2717, 257, 16072, 12218, 3573, 11, 4768, 8600, 11, 42549, 368, 1306, 51186], "temperature": 0.0, "avg_logprob": -0.5646081589560472, "compression_ratio": 1.873015873015873, "no_speech_prob": 0.07275161147117615}, {"id": 416, "seek": 250264, "start": 2519.08, "end": 2524.8399999999997, "text": " un poco lo vamos a ver ahora, que hasta ahora vieron que ya est\u00e1n moviendo n\u00famero real, no,", "tokens": [51186, 517, 10639, 450, 5295, 257, 1306, 9923, 11, 631, 10764, 9923, 371, 14440, 631, 2478, 10368, 2402, 7304, 14959, 957, 11, 572, 11, 51474], "temperature": 0.0, "avg_logprob": -0.5646081589560472, "compression_ratio": 1.873015873015873, "no_speech_prob": 0.07275161147117615}, {"id": 417, "seek": 250264, "start": 2524.8399999999997, "end": 2529.52, "text": " se ha entrado un vector de n\u00famero reales, sal\u00edan n\u00famero reales, vector de n\u00fameros reales, s\u00ed,", "tokens": [51474, 369, 324, 8041, 1573, 517, 8062, 368, 14959, 957, 279, 11, 1845, 11084, 14959, 957, 279, 11, 8062, 368, 36545, 957, 279, 11, 8600, 11, 51708], "temperature": 0.0, "avg_logprob": -0.5646081589560472, "compression_ratio": 1.873015873015873, "no_speech_prob": 0.07275161147117615}, {"id": 418, "seek": 252952, "start": 2529.52, "end": 2548.04, "text": " vale, s\u00ed, se usan a veces, en la pr\u00e1ctica, da mejor resultado, probar varias veces y", "tokens": [50364, 15474, 11, 8600, 11, 369, 505, 282, 257, 17054, 11, 465, 635, 27300, 29041, 11, 1120, 11479, 28047, 11, 1239, 289, 37496, 17054, 288, 51290], "temperature": 0.0, "avg_logprob": -0.562704153621898, "compression_ratio": 1.5642458100558658, "no_speech_prob": 0.012573360465466976}, {"id": 419, "seek": 252952, "start": 2548.04, "end": 2553.24, "text": " ya o hacer una prueba, digamos, tipo grid search, en el cual digo, tengo tantos par\u00e1metros y", "tokens": [51290, 2478, 277, 6720, 2002, 48241, 11, 36430, 11, 9746, 10748, 3164, 11, 465, 806, 10911, 22990, 11, 13989, 12095, 329, 971, 842, 29570, 288, 51550], "temperature": 0.0, "avg_logprob": -0.562704153621898, "compression_ratio": 1.5642458100558658, "no_speech_prob": 0.012573360465466976}, {"id": 420, "seek": 252952, "start": 2553.24, "end": 2559.12, "text": " probar con todos, o aleatoriamente probar, anas ampliando y tinto par\u00e1metros y entrenar, es cierto", "tokens": [51550, 1239, 289, 416, 6321, 11, 277, 6775, 1639, 16855, 1239, 289, 11, 364, 296, 9731, 72, 1806, 288, 256, 17246, 971, 842, 29570, 288, 45069, 289, 11, 785, 28558, 51844], "temperature": 0.0, "avg_logprob": -0.562704153621898, "compression_ratio": 1.5642458100558658, "no_speech_prob": 0.012573360465466976}, {"id": 421, "seek": 255912, "start": 2559.12, "end": 2563.52, "text": " que tambi\u00e9n se usan m\u00e9tabriticas, evolutivos y algunas otras, para adaptar a utilizar", "tokens": [50364, 631, 6407, 369, 505, 282, 20275, 455, 3210, 9150, 11, 7117, 325, 16501, 288, 27316, 20244, 11, 1690, 6231, 289, 257, 24060, 50584], "temperature": 0.0, "avg_logprob": -0.5178782503369829, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.0464264415204525}, {"id": 422, "seek": 255912, "start": 2563.52, "end": 2568.6, "text": " la red, pero no s\u00e9 en la pr\u00e1ctica, si es que dan tan buenos resultados o simplemente", "tokens": [50584, 635, 2182, 11, 4768, 572, 7910, 465, 635, 27300, 29041, 11, 1511, 785, 631, 3277, 7603, 49617, 36796, 277, 33190, 50838], "temperature": 0.0, "avg_logprob": -0.5178782503369829, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.0464264415204525}, {"id": 423, "seek": 255912, "start": 2568.6, "end": 2573.92, "text": " ir probando con distintas combinaciones, dando mejor, o general, en contas buenos resultados,", "tokens": [50838, 3418, 1239, 1806, 416, 31489, 296, 38514, 9188, 11, 29854, 11479, 11, 277, 2674, 11, 465, 660, 296, 49617, 36796, 11, 51104], "temperature": 0.0, "avg_logprob": -0.5178782503369829, "compression_ratio": 1.5056179775280898, "no_speech_prob": 0.0464264415204525}, {"id": 424, "seek": 257392, "start": 2573.92, "end": 2593.6, "text": " s\u00ed, s\u00ed, s\u00ed, tengo la funci\u00f3n de arriba, claro, pero el problema es que la funci\u00f3n", "tokens": [50364, 8600, 11, 8600, 11, 8600, 11, 13989, 635, 43735, 368, 28469, 11, 16742, 11, 4768, 806, 12395, 785, 631, 635, 43735, 51348], "temperature": 0.0, "avg_logprob": -0.48188855696697624, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.232434943318367}, {"id": 425, "seek": 257392, "start": 2593.6, "end": 2598.36, "text": " de verde ya no va a tener un optimo global, normalmente, no va a tener porque la funci\u00f3n de", "tokens": [51348, 368, 29653, 2478, 572, 2773, 257, 11640, 517, 5028, 78, 4338, 11, 38217, 11, 572, 2773, 257, 11640, 4021, 635, 43735, 368, 51586], "temperature": 0.0, "avg_logprob": -0.48188855696697624, "compression_ratio": 1.584070796460177, "no_speech_prob": 0.232434943318367}, {"id": 426, "seek": 259836, "start": 2598.36, "end": 2605.92, "text": " verde ya tiene esta cosa en el medio, estoy minimizando una cosa que es algo no el inial y que", "tokens": [50364, 29653, 2478, 7066, 5283, 10163, 465, 806, 22123, 11, 15796, 4464, 590, 1806, 2002, 10163, 631, 785, 8655, 572, 806, 294, 831, 288, 631, 50742], "temperature": 0.0, "avg_logprob": -0.4217389121888176, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.22891688346862793}, {"id": 427, "seek": 259836, "start": 2605.92, "end": 2608.96, "text": " tiene millones de par\u00e1metros, y yo puedo ir en la direcci\u00f3n de cualquiera de los millones de", "tokens": [50742, 7066, 22416, 368, 971, 842, 29570, 11, 288, 5290, 21612, 3418, 465, 635, 1264, 14735, 368, 10911, 35134, 368, 1750, 22416, 368, 50894], "temperature": 0.0, "avg_logprob": -0.4217389121888176, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.22891688346862793}, {"id": 428, "seek": 259836, "start": 2608.96, "end": 2613.6, "text": " par\u00e1metros, entonces por eso normalmente digamos, eso de generar su superficie, su perroboza", "tokens": [50894, 971, 842, 29570, 11, 13003, 1515, 7287, 38217, 36430, 11, 7287, 368, 1337, 289, 459, 23881, 414, 11, 459, 680, 340, 1763, 2394, 51126], "temperature": 0.0, "avg_logprob": -0.4217389121888176, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.22891688346862793}, {"id": 429, "seek": 259836, "start": 2613.6, "end": 2618.88, "text": " que tiene un mont\u00f3n de su d\u00eda, si bajaba por todos lados y justo a mocar la el optimo global", "tokens": [51126, 631, 7066, 517, 45259, 368, 459, 12271, 11, 1511, 23589, 5509, 1515, 6321, 40301, 288, 40534, 257, 705, 6166, 635, 806, 5028, 78, 4338, 51390], "temperature": 0.0, "avg_logprob": -0.4217389121888176, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.22891688346862793}, {"id": 430, "seek": 259836, "start": 2618.88, "end": 2627.6800000000003, "text": " es muy dif\u00edcil, entonces nada te garantiza que puedas tener un nuevo global, claro, s\u00ed,", "tokens": [51390, 785, 5323, 17258, 11, 13003, 8096, 535, 22251, 13427, 631, 10947, 296, 11640, 517, 18591, 4338, 11, 16742, 11, 8600, 11, 51830], "temperature": 0.0, "avg_logprob": -0.4217389121888176, "compression_ratio": 1.7333333333333334, "no_speech_prob": 0.22891688346862793}, {"id": 431, "seek": 262768, "start": 2627.68, "end": 2632.7599999999998, "text": " pero ac\u00e1 queremos esplicitamente que la funci\u00f3n de activaci\u00f3n sea algo que me deje la funci\u00f3n", "tokens": [50364, 4768, 23496, 26813, 785, 4770, 270, 3439, 631, 635, 43735, 368, 2430, 3482, 4158, 8655, 631, 385, 368, 2884, 635, 43735, 50618], "temperature": 0.0, "avg_logprob": -0.2887349168793494, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.052559684962034225}, {"id": 432, "seek": 262768, "start": 2632.7599999999998, "end": 2639.8799999999997, "text": " complicada, si vos, claro, si vos hace que la funci\u00f3n de activaci\u00f3n sea tan simple, que esto", "tokens": [50618, 16060, 1538, 11, 1511, 13845, 11, 16742, 11, 1511, 13845, 10032, 631, 635, 43735, 368, 2430, 3482, 4158, 7603, 2199, 11, 631, 7433, 50974], "temperature": 0.0, "avg_logprob": -0.2887349168793494, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.052559684962034225}, {"id": 433, "seek": 262768, "start": 2639.8799999999997, "end": 2647.44, "text": " queda como la funci\u00f3n con bexa, entonces pierde capacidad de generalizaci\u00f3n la red, por eso", "tokens": [50974, 23314, 2617, 635, 43735, 416, 312, 87, 64, 11, 13003, 9766, 1479, 43507, 368, 2674, 27603, 635, 2182, 11, 1515, 7287, 51352], "temperature": 0.0, "avg_logprob": -0.2887349168793494, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.052559684962034225}, {"id": 434, "seek": 262768, "start": 2647.44, "end": 2651.12, "text": " se dice tambi\u00e9n que esto es un problema de optimizaci\u00f3n no con bexa, no en optimizaci\u00f3n", "tokens": [51352, 369, 10313, 6407, 631, 7433, 785, 517, 12395, 368, 5028, 27603, 572, 416, 312, 87, 64, 11, 572, 465, 5028, 27603, 51536], "temperature": 0.0, "avg_logprob": -0.2887349168793494, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.052559684962034225}, {"id": 435, "seek": 262768, "start": 2651.12, "end": 2654.9199999999996, "text": " con bexa, uno pueda asegurar que siempre tenemos un optimo global y lo podr\u00edamos llegar", "tokens": [51536, 416, 312, 87, 64, 11, 8526, 31907, 38174, 28586, 631, 12758, 9914, 517, 5028, 78, 4338, 288, 450, 15305, 16275, 24892, 51726], "temperature": 0.0, "avg_logprob": -0.2887349168793494, "compression_ratio": 1.9416666666666667, "no_speech_prob": 0.052559684962034225}, {"id": 436, "seek": 265492, "start": 2654.92, "end": 2659.6800000000003, "text": " a encontrar con alguna t\u00e9cnica, pero esto es optimizaci\u00f3n no con bexa, la forma de la gr\u00e1fica", "tokens": [50364, 257, 17525, 416, 20651, 45411, 11, 4768, 7433, 785, 5028, 27603, 572, 416, 312, 87, 64, 11, 635, 8366, 368, 635, 34613, 64, 50602], "temperature": 0.0, "avg_logprob": -0.4267718195915222, "compression_ratio": 1.6570397111913358, "no_speech_prob": 0.1584714651107788}, {"id": 437, "seek": 265492, "start": 2659.6800000000003, "end": 2666.8, "text": " siempre va a tener su vida si bajaba, se no hay un lado, bien, m\u00e1s preguntas, \u00bftac\u00e1?", "tokens": [50602, 12758, 2773, 257, 11640, 459, 7644, 1511, 23589, 5509, 11, 369, 572, 4842, 517, 11631, 11, 3610, 11, 3573, 39722, 11, 3841, 83, 326, 842, 30, 50958], "temperature": 0.0, "avg_logprob": -0.4267718195915222, "compression_ratio": 1.6570397111913358, "no_speech_prob": 0.1584714651107788}, {"id": 438, "seek": 265492, "start": 2666.8, "end": 2673.88, "text": " Entonces pasemos a la parte del lenguaje, bien, dec\u00edamos, hasta el momento, ten\u00edamos una", "tokens": [50958, 15097, 1736, 4485, 257, 635, 6975, 1103, 35044, 84, 11153, 11, 3610, 11, 979, 16275, 11, 10764, 806, 9333, 11, 2064, 16275, 2002, 51312], "temperature": 0.0, "avg_logprob": -0.4267718195915222, "compression_ratio": 1.6570397111913358, "no_speech_prob": 0.1584714651107788}, {"id": 439, "seek": 265492, "start": 2673.88, "end": 2679.6, "text": " reneoronal que a la cual le entraban valores reales y sal\u00edan valores reales, pero nosotros", "tokens": [51312, 319, 716, 284, 21523, 631, 257, 635, 10911, 476, 8041, 18165, 1323, 2706, 957, 279, 288, 1845, 11084, 1323, 2706, 957, 279, 11, 4768, 13863, 51598], "temperature": 0.0, "avg_logprob": -0.4267718195915222, "compression_ratio": 1.6570397111913358, "no_speech_prob": 0.1584714651107788}, {"id": 440, "seek": 265492, "start": 2679.6, "end": 2683.76, "text": " en realidad nos interesa trabajar con texto, nos interesa trabajar con palabras, oraciones,", "tokens": [51598, 465, 25635, 3269, 728, 13708, 30793, 416, 35503, 11, 3269, 728, 13708, 30793, 416, 35240, 11, 420, 9188, 11, 51806], "temperature": 0.0, "avg_logprob": -0.4267718195915222, "compression_ratio": 1.6570397111913358, "no_speech_prob": 0.1584714651107788}, {"id": 441, "seek": 268376, "start": 2683.76, "end": 2690.48, "text": " documentos, tweets, en el caso del ol\u00edadorio, y el problema es que tenemos una red que", "tokens": [50364, 4166, 329, 11, 25671, 11, 465, 806, 9666, 1103, 2545, 870, 5409, 1004, 11, 288, 806, 12395, 785, 631, 9914, 2002, 2182, 631, 50700], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 442, "seek": 268376, "start": 2690.48, "end": 2693.96, "text": " le entraban valores reales, no es un problema raro, digamos, es un problema que le pasa", "tokens": [50700, 476, 8041, 18165, 1323, 2706, 957, 279, 11, 572, 785, 517, 12395, 367, 9708, 11, 36430, 11, 785, 517, 12395, 631, 476, 20260, 50874], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 443, "seek": 268376, "start": 2693.96, "end": 2696.7200000000003, "text": " a la mayor\u00eda de los m\u00e9todores de prensa autom\u00e1ticos, si estuvieron mirando algo de", "tokens": [50874, 257, 635, 35342, 368, 1750, 20275, 378, 2706, 368, 659, 3695, 64, 3553, 7656, 9940, 11, 1511, 49777, 14440, 3149, 1806, 8655, 368, 51012], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 444, "seek": 268376, "start": 2696.7200000000003, "end": 2701.1600000000003, "text": " reacci\u00f3n log\u00edstica, etc\u00e9tera, siempre yo tengo que mandarle valores reales a las cosas,", "tokens": [51012, 319, 49354, 3565, 19512, 2262, 11, 5183, 526, 23833, 11, 12758, 5290, 13989, 631, 48689, 306, 1323, 2706, 957, 279, 257, 2439, 12218, 11, 51234], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 445, "seek": 268376, "start": 2701.1600000000003, "end": 2705.8, "text": " salvo en una iglesia que m\u00e1s o menos uno puede decir, bueno, trabajo con palabras, como", "tokens": [51234, 1845, 3080, 465, 2002, 8508, 48507, 631, 3573, 277, 8902, 8526, 8919, 10235, 11, 11974, 11, 18099, 416, 35240, 11, 2617, 51466], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 446, "seek": 268376, "start": 2705.8, "end": 2709.6800000000003, "text": " en la abstracci\u00f3n, esto trabaja en un nivel de palabras, en el resto siempre est\u00e1 esperando", "tokens": [51466, 465, 635, 410, 9733, 49354, 11, 7433, 9618, 64, 465, 517, 24423, 368, 35240, 11, 465, 806, 28247, 12758, 3192, 46587, 51660], "temperature": 0.0, "avg_logprob": -0.40388388921750473, "compression_ratio": 1.7892976588628762, "no_speech_prob": 0.08661911636590958}, {"id": 447, "seek": 270968, "start": 2709.68, "end": 2715.08, "text": " que yo le mande valores num\u00e9ricos, entonces, yo necesito poder tener una buena representaci\u00f3n", "tokens": [50364, 631, 5290, 476, 7411, 68, 1323, 2706, 1031, 27578, 329, 11, 13003, 11, 5290, 11909, 3528, 8152, 11640, 2002, 25710, 2906, 3482, 50634], "temperature": 0.0, "avg_logprob": -0.2717517624553452, "compression_ratio": 1.9083333333333334, "no_speech_prob": 0.09277567267417908}, {"id": 448, "seek": 270968, "start": 2715.08, "end": 2722.44, "text": " num\u00e9rica de los textos, y de paso voy a pedir una propiedad m\u00e1s que es que esa representaci\u00f3n", "tokens": [50634, 1031, 32716, 368, 1750, 2487, 329, 11, 288, 368, 29212, 7552, 257, 33533, 2002, 2365, 1091, 345, 3573, 631, 785, 631, 11342, 2906, 3482, 51002], "temperature": 0.0, "avg_logprob": -0.2717517624553452, "compression_ratio": 1.9083333333333334, "no_speech_prob": 0.09277567267417908}, {"id": 449, "seek": 270968, "start": 2722.44, "end": 2727.48, "text": " num\u00e9rica tenga algunas propiedades interesantes, como por ejemplo, una metrica distancia que", "tokens": [51002, 1031, 32716, 36031, 27316, 2365, 1091, 2977, 20157, 9327, 11, 2617, 1515, 13358, 11, 2002, 1131, 15192, 1483, 22862, 631, 51254], "temperature": 0.0, "avg_logprob": -0.2717517624553452, "compression_ratio": 1.9083333333333334, "no_speech_prob": 0.09277567267417908}, {"id": 450, "seek": 270968, "start": 2727.48, "end": 2731.8799999999997, "text": " haga que las palabras m\u00e1s cercan, las palabras m\u00e1s similares, y b\u00e1sicamente este", "tokens": [51254, 46726, 631, 2439, 35240, 3573, 36099, 282, 11, 2439, 35240, 3573, 1034, 7371, 495, 11, 288, 48282, 4065, 51474], "temperature": 0.0, "avg_logprob": -0.2717517624553452, "compression_ratio": 1.9083333333333334, "no_speech_prob": 0.09277567267417908}, {"id": 451, "seek": 270968, "start": 2731.8799999999997, "end": 2738.04, "text": " m\u00e1s cerca, y la m\u00e1s diferente de este m\u00e1s lejos, por ejemplo, puedo pedir eso en una", "tokens": [51474, 3573, 26770, 11, 288, 635, 3573, 20973, 368, 4065, 3573, 476, 19136, 11, 1515, 13358, 11, 21612, 33533, 7287, 465, 2002, 51782], "temperature": 0.0, "avg_logprob": -0.2717517624553452, "compression_ratio": 1.9083333333333334, "no_speech_prob": 0.09277567267417908}, {"id": 452, "seek": 273804, "start": 2738.12, "end": 2744.24, "text": " representaci\u00f3n, entonces, vamos a ver una t\u00e9cnica de llamar Warden Medings, o", "tokens": [50368, 2906, 3482, 11, 13003, 11, 5295, 257, 1306, 2002, 45411, 368, 16848, 289, 23794, 268, 3982, 1109, 11, 277, 50674], "temperature": 0.0, "avg_logprob": -0.5317652263338604, "compression_ratio": 1.6654135338345866, "no_speech_prob": 0.04029681533575058}, {"id": 453, "seek": 273804, "start": 2744.24, "end": 2748.64, "text": " vectores de palabras que su utiliza para representar las palabras y despu\u00e9s de lo", "tokens": [50674, 8062, 279, 368, 35240, 631, 459, 4976, 13427, 1690, 2906, 289, 2439, 35240, 288, 15283, 368, 450, 50894], "temperature": 0.0, "avg_logprob": -0.5317652263338604, "compression_ratio": 1.6654135338345866, "no_speech_prob": 0.04029681533575058}, {"id": 454, "seek": 273804, "start": 2748.64, "end": 2753.52, "text": " pudilizar como entrada una red, y la t\u00e9cnica se basa en la hip\u00f3tesis distribucional", "tokens": [50894, 14166, 47043, 289, 2617, 8041, 1538, 2002, 2182, 11, 288, 635, 45411, 369, 987, 64, 465, 635, 8103, 812, 7269, 271, 4400, 1311, 1966, 51138], "temperature": 0.0, "avg_logprob": -0.5317652263338604, "compression_ratio": 1.6654135338345866, "no_speech_prob": 0.04029681533575058}, {"id": 455, "seek": 273804, "start": 2753.52, "end": 2760.32, "text": " que son de hip\u00f3tesis que surgi\u00f3 en los 50 con, con este firf que era un lista l\u00f3gico, etc\u00e9tera,", "tokens": [51138, 631, 1872, 368, 8103, 812, 7269, 271, 631, 19560, 7138, 465, 1750, 2625, 416, 11, 416, 4065, 12159, 69, 631, 4249, 517, 1329, 64, 48475, 2789, 11, 5183, 526, 23833, 11, 51478], "temperature": 0.0, "avg_logprob": -0.5317652263338604, "compression_ratio": 1.6654135338345866, "no_speech_prob": 0.04029681533575058}, {"id": 456, "seek": 273804, "start": 2760.32, "end": 2765.44, "text": " y dec\u00edan lo siguiente, bueno, las palabras que aparecen en contextos similares tenden a tener", "tokens": [51478, 288, 979, 11084, 450, 25666, 11, 11974, 11, 2439, 35240, 631, 15004, 13037, 465, 4319, 329, 1034, 7371, 495, 3928, 268, 257, 11640, 51734], "temperature": 0.0, "avg_logprob": -0.5317652263338604, "compression_ratio": 1.6654135338345866, "no_speech_prob": 0.04029681533575058}, {"id": 457, "seek": 276544, "start": 2765.44, "end": 2771.36, "text": " significados similares, y ac\u00e1 tenemos un ejemplo que dice que este ejemplo tiene como algunas", "tokens": [50364, 3350, 4181, 1034, 7371, 495, 11, 288, 23496, 9914, 517, 13358, 631, 10313, 631, 4065, 13358, 7066, 2617, 27316, 50660], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 458, "seek": 276544, "start": 2771.36, "end": 2775.48, "text": " palabras y algunas ideas de contexto, la milanesa, aunque eso m\u00e1s rica, el Uruguaya,", "tokens": [50660, 35240, 288, 27316, 3487, 368, 47685, 11, 635, 1962, 12779, 64, 11, 21962, 7287, 3573, 367, 2262, 11, 806, 9533, 13705, 320, 64, 11, 50866], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 459, "seek": 276544, "start": 2775.48, "end": 2780.2400000000002, "text": " s\u00ed es rica, la muruesa con queso, la milanesa, aunque eso musalelas le decimos una", "tokens": [50866, 8600, 785, 367, 2262, 11, 635, 5257, 1247, 64, 416, 421, 41189, 11, 635, 1962, 12779, 64, 11, 21962, 7287, 1038, 1220, 7743, 476, 979, 8372, 2002, 51104], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 460, "seek": 276544, "start": 2780.2400000000002, "end": 2785.0, "text": " politana, no s\u00e9 qu\u00e9, est\u00e1, eso como que est\u00e1 hablando de milanesa, muruesa comida, y despu\u00e9s", "tokens": [51104, 2453, 2095, 11, 572, 7910, 8057, 11, 3192, 11, 7287, 2617, 631, 3192, 29369, 368, 1962, 12779, 64, 11, 5257, 1247, 64, 30779, 11, 288, 15283, 51342], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 461, "seek": 276544, "start": 2785.0, "end": 2788.76, "text": " el otro dice, los do\u00f1os, una de las distaciones del a\u00f1o, el verano de mis estaciones favoritas,", "tokens": [51342, 806, 11921, 10313, 11, 1750, 360, 8242, 11, 2002, 368, 2439, 1483, 9188, 1103, 15984, 11, 806, 1306, 3730, 368, 3346, 871, 9188, 2294, 14182, 11, 51530], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 462, "seek": 276544, "start": 2788.76, "end": 2792.44, "text": " el invierno, en invierno se pide de fr\u00edo, en verano nunca se fr\u00edo y est\u00e1 hablando", "tokens": [51530, 806, 1048, 19689, 11, 465, 1048, 19689, 369, 280, 482, 368, 431, 20492, 11, 465, 1306, 3730, 13768, 369, 431, 20492, 288, 3192, 29369, 51714], "temperature": 0.0, "avg_logprob": -0.4423624038696289, "compression_ratio": 1.8858131487889274, "no_speech_prob": 0.12282963842153549}, {"id": 463, "seek": 279244, "start": 2792.44, "end": 2797.4, "text": " como de otra cosa, claramente las palabras rojas se parecen m\u00e1s entre s\u00ed, las palabras", "tokens": [50364, 2617, 368, 13623, 10163, 11, 6093, 3439, 2439, 35240, 744, 19221, 369, 7448, 13037, 3573, 3962, 8600, 11, 2439, 35240, 50612], "temperature": 0.0, "avg_logprob": -0.3233782581447326, "compression_ratio": 1.7959183673469388, "no_speech_prob": 0.1774798184633255}, {"id": 464, "seek": 279244, "start": 2797.4, "end": 2801.2000000000003, "text": " azules, se parecen m\u00e1s entre s\u00ed, entonces, idealmente yo querr\u00eda tener una representaci\u00f3n", "tokens": [50612, 7883, 3473, 11, 369, 7448, 13037, 3573, 3962, 8600, 11, 13003, 11, 7157, 4082, 5290, 7083, 37183, 11640, 2002, 2906, 3482, 50802], "temperature": 0.0, "avg_logprob": -0.3233782581447326, "compression_ratio": 1.7959183673469388, "no_speech_prob": 0.1774798184633255}, {"id": 465, "seek": 279244, "start": 2801.2000000000003, "end": 2807.36, "text": " que a las rojas, las dejemos o menos cerca y a las azules violetas, las dejemos o menos", "tokens": [50802, 631, 257, 2439, 744, 19221, 11, 2439, 21259, 4485, 277, 8902, 26770, 288, 257, 2439, 7883, 3473, 3448, 35120, 11, 2439, 21259, 4485, 277, 8902, 51110], "temperature": 0.0, "avg_logprob": -0.3233782581447326, "compression_ratio": 1.7959183673469388, "no_speech_prob": 0.1774798184633255}, {"id": 466, "seek": 279244, "start": 2807.36, "end": 2815.76, "text": " en otro lado, bueno, una primera idea que surg\u00eda es lo que se conoce como matriz", "tokens": [51110, 465, 11921, 11631, 11, 11974, 11, 2002, 17382, 1558, 631, 19560, 2686, 785, 450, 631, 369, 33029, 384, 2617, 3803, 24959, 51530], "temperature": 0.0, "avg_logprob": -0.3233782581447326, "compression_ratio": 1.7959183673469388, "no_speech_prob": 0.1774798184633255}, {"id": 467, "seek": 281576, "start": 2815.76, "end": 2824.32, "text": " termin\u00f3, termino, que se realiza contando palabras, contando cu\u00e1ndo una palabra parecen,", "tokens": [50364, 10761, 812, 11, 1433, 2982, 11, 631, 369, 957, 13427, 660, 1806, 35240, 11, 660, 1806, 2702, 18606, 78, 2002, 31702, 7448, 13037, 11, 50792], "temperature": 0.0, "avg_logprob": -0.3317864735921224, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.22594508528709412}, {"id": 468, "seek": 281576, "start": 2824.32, "end": 2827.1600000000003, "text": " \u00bfcu\u00e1nta vez aparece una palabra en el contexto de otra?", "tokens": [50792, 3841, 12032, 27525, 64, 5715, 37863, 2002, 31702, 465, 806, 47685, 368, 13623, 30, 50934], "temperature": 0.0, "avg_logprob": -0.3317864735921224, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.22594508528709412}, {"id": 469, "seek": 281576, "start": 2827.1600000000003, "end": 2832.3, "text": " Entonces, por ejemplo, en este caso yo digo, yo tomo alrededor de una palabra en", "tokens": [50934, 15097, 11, 1515, 13358, 11, 465, 4065, 9666, 5290, 22990, 11, 5290, 2916, 78, 43663, 368, 2002, 31702, 465, 51191], "temperature": 0.0, "avg_logprob": -0.3317864735921224, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.22594508528709412}, {"id": 470, "seek": 281576, "start": 2832.3, "end": 2837.0400000000004, "text": " palabras de contexto alrededor y cuento, \u00bfcu\u00e1nta vez aparece otra en ese contexto?", "tokens": [51191, 35240, 368, 47685, 43663, 288, 2702, 15467, 11, 3841, 12032, 27525, 64, 5715, 37863, 13623, 465, 10167, 47685, 30, 51428], "temperature": 0.0, "avg_logprob": -0.3317864735921224, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.22594508528709412}, {"id": 471, "seek": 281576, "start": 2837.0400000000004, "end": 2842.0800000000004, "text": " Entonces, como es ejemplo, tenemos, bueno, estos son los ejemplos anteriores, no, la milanesa", "tokens": [51428, 15097, 11, 2617, 785, 13358, 11, 9914, 11, 11974, 11, 12585, 1872, 1750, 10012, 5895, 329, 364, 34345, 2706, 11, 572, 11, 635, 1962, 12779, 64, 51680], "temperature": 0.0, "avg_logprob": -0.3317864735921224, "compression_ratio": 1.933649289099526, "no_speech_prob": 0.22594508528709412}, {"id": 472, "seek": 284208, "start": 2842.08, "end": 2847.64, "text": " con queso m\u00e1s rica, la hamburguesa no s\u00e9 qu\u00e9, el ot\u00f3\u00f1o, tal cosa y pregunta, \u00bfc\u00f3mo", "tokens": [50364, 416, 421, 41189, 3573, 367, 2262, 11, 635, 25172, 5476, 1247, 64, 572, 7910, 8057, 11, 806, 4337, 812, 7716, 11, 4023, 10163, 288, 24252, 11, 3841, 46614, 50642], "temperature": 0.0, "avg_logprob": -0.3283945719401042, "compression_ratio": 1.780590717299578, "no_speech_prob": 0.24411346018314362}, {"id": 473, "seek": 284208, "start": 2847.64, "end": 2851.96, "text": " quedar\u00eda la matriz utilizando un contexto de cuatro palabras?", "tokens": [50642, 13617, 21178, 635, 3803, 24959, 19906, 1806, 517, 47685, 368, 28795, 35240, 30, 50858], "temperature": 0.0, "avg_logprob": -0.3283945719401042, "compression_ratio": 1.780590717299578, "no_speech_prob": 0.24411346018314362}, {"id": 474, "seek": 284208, "start": 2851.96, "end": 2859.64, "text": " Y ac\u00e1 no s\u00e9 si lo llevan a ver todos, pero me aparece que, por ejemplo, la palabra milanesa", "tokens": [50858, 398, 23496, 572, 7910, 1511, 450, 12038, 9768, 257, 1306, 6321, 11, 4768, 385, 37863, 631, 11, 1515, 13358, 11, 635, 31702, 1962, 12779, 64, 51242], "temperature": 0.0, "avg_logprob": -0.3283945719401042, "compression_ratio": 1.780590717299578, "no_speech_prob": 0.24411346018314362}, {"id": 475, "seek": 284208, "start": 2859.64, "end": 2864.2799999999997, "text": " tiene las palabras ricas y queso en su contexto, la palabra hamburguesa tambi\u00e9n, pero", "tokens": [51242, 7066, 2439, 35240, 367, 9150, 288, 421, 41189, 465, 459, 47685, 11, 635, 31702, 25172, 5476, 1247, 64, 6407, 11, 4768, 51474], "temperature": 0.0, "avg_logprob": -0.3283945719401042, "compression_ratio": 1.780590717299578, "no_speech_prob": 0.24411346018314362}, {"id": 476, "seek": 284208, "start": 2864.2799999999997, "end": 2869.4, "text": " la palabra ot\u00f3\u00f1o, no, la palabra ot\u00f3\u00f1o tiene en su contexto, bueno, ac\u00e1 justo, como", "tokens": [51474, 635, 31702, 4337, 812, 7716, 11, 572, 11, 635, 31702, 4337, 812, 7716, 7066, 465, 459, 47685, 11, 11974, 11, 23496, 40534, 11, 2617, 51730], "temperature": 0.0, "avg_logprob": -0.3283945719401042, "compression_ratio": 1.780590717299578, "no_speech_prob": 0.24411346018314362}, {"id": 477, "seek": 286940, "start": 2869.4, "end": 2873.6800000000003, "text": " esto tomando en igual a cuatro no pasa, pero las palabras ver\u00e1n o invierno tienen en su contexto,", "tokens": [50364, 7433, 2916, 1806, 465, 10953, 257, 28795, 572, 20260, 11, 4768, 2439, 35240, 1306, 7200, 277, 1048, 19689, 12536, 465, 459, 47685, 11, 50578], "temperature": 0.0, "avg_logprob": -0.362820904664319, "compression_ratio": 1.733644859813084, "no_speech_prob": 0.06634750217199326}, {"id": 478, "seek": 286940, "start": 2873.6800000000003, "end": 2882.1600000000003, "text": " la palabra fr\u00edo y no tienen ni rica ni queso, entonces eso es con en igual a cuatro, \u00bfno?", "tokens": [50578, 635, 31702, 431, 20492, 288, 572, 12536, 3867, 367, 2262, 3867, 421, 41189, 11, 13003, 7287, 785, 416, 465, 10953, 257, 28795, 11, 3841, 1771, 30, 51002], "temperature": 0.0, "avg_logprob": -0.362820904664319, "compression_ratio": 1.733644859813084, "no_speech_prob": 0.06634750217199326}, {"id": 479, "seek": 286940, "start": 2882.1600000000003, "end": 2886.48, "text": " contando cuatro palabras alrededor, si yo considerar\u00e1 en igual sin go, entonces ah\u00ed s\u00ed,", "tokens": [51002, 660, 1806, 28795, 35240, 43663, 11, 1511, 5290, 1949, 289, 842, 465, 10953, 3343, 352, 11, 13003, 12571, 8600, 11, 51218], "temperature": 0.0, "avg_logprob": -0.362820904664319, "compression_ratio": 1.733644859813084, "no_speech_prob": 0.06634750217199326}, {"id": 480, "seek": 286940, "start": 2886.48, "end": 2894.2400000000002, "text": " aparecer\u00eda, ot\u00f3\u00f1o tiene la palabra estaciones en su contexto y ver\u00e1 no tambi\u00e9n tiene", "tokens": [51218, 43336, 2686, 11, 4337, 812, 7716, 7066, 635, 31702, 871, 9188, 465, 459, 47685, 288, 1306, 842, 572, 6407, 7066, 51606], "temperature": 0.0, "avg_logprob": -0.362820904664319, "compression_ratio": 1.733644859813084, "no_speech_prob": 0.06634750217199326}, {"id": 481, "seek": 289424, "start": 2894.24, "end": 2899.0, "text": " detaciones en su contexto, entonces es como que me van quedando zonas de la matriz que est\u00e1n", "tokens": [50364, 1141, 9188, 465, 459, 47685, 11, 13003, 785, 2617, 631, 385, 3161, 13617, 1806, 710, 38027, 368, 635, 3803, 24959, 631, 10368, 50602], "temperature": 0.0, "avg_logprob": -0.32177463247756327, "compression_ratio": 1.7782101167315174, "no_speech_prob": 0.13575242459774017}, {"id": 482, "seek": 289424, "start": 2899.0, "end": 2904.3599999999997, "text": " como m\u00e1s acopladas entre s\u00ed, no, como que tienen mayor nivel de proximida y otras zonas que", "tokens": [50602, 2617, 3573, 696, 33224, 6872, 3962, 8600, 11, 572, 11, 2617, 631, 12536, 10120, 24423, 368, 447, 3081, 2887, 288, 20244, 710, 38027, 631, 50870], "temperature": 0.0, "avg_logprob": -0.32177463247756327, "compression_ratio": 1.7782101167315174, "no_speech_prob": 0.13575242459774017}, {"id": 483, "seek": 289424, "start": 2904.3599999999997, "end": 2911.6, "text": " no, entonces ah\u00ed ya tendr\u00eda como una especie de primera aproximaci\u00f3n a lo que ser\u00eda", "tokens": [50870, 572, 11, 13003, 12571, 2478, 3928, 37183, 2617, 2002, 49368, 368, 17382, 31270, 3482, 257, 450, 631, 23679, 51232], "temperature": 0.0, "avg_logprob": -0.32177463247756327, "compression_ratio": 1.7782101167315174, "no_speech_prob": 0.13575242459774017}, {"id": 484, "seek": 289424, "start": 2911.6, "end": 2915.2799999999997, "text": " mi doctor de palabras, que es decir, bueno, yo puedo representar cada palabra con una fila de", "tokens": [51232, 2752, 4631, 368, 35240, 11, 631, 785, 10235, 11, 11974, 11, 5290, 21612, 2906, 289, 8411, 31702, 416, 2002, 1387, 64, 368, 51416], "temperature": 0.0, "avg_logprob": -0.32177463247756327, "compression_ratio": 1.7782101167315174, "no_speech_prob": 0.13575242459774017}, {"id": 485, "seek": 289424, "start": 2915.2799999999997, "end": 2919.08, "text": " esta matriz y esa fila de la matriz va a tener ciertas propiedades cosa de que palabras", "tokens": [51416, 5283, 3803, 24959, 288, 11342, 1387, 64, 368, 635, 3803, 24959, 2773, 257, 11640, 49252, 296, 2365, 1091, 2977, 10163, 368, 631, 35240, 51606], "temperature": 0.0, "avg_logprob": -0.32177463247756327, "compression_ratio": 1.7782101167315174, "no_speech_prob": 0.13575242459774017}, {"id": 486, "seek": 291908, "start": 2919.16, "end": 2925.04, "text": " que est\u00e1n cerca, se manticamente similares van a estar cerca en esas filas, un problema", "tokens": [50368, 631, 10368, 26770, 11, 369, 10845, 23653, 1034, 7371, 495, 3161, 257, 8755, 26770, 465, 23388, 1387, 296, 11, 517, 12395, 50662], "temperature": 0.0, "avg_logprob": -0.3717587378717238, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.17667488753795624}, {"id": 487, "seek": 291908, "start": 2925.04, "end": 2928.68, "text": " que tiene esta representaci\u00f3n que dice abajo es que son sectores muy grandes, yo tengo", "tokens": [50662, 631, 7066, 5283, 2906, 3482, 631, 10313, 30613, 785, 631, 1872, 22610, 2706, 5323, 16640, 11, 5290, 13989, 50844], "temperature": 0.0, "avg_logprob": -0.3717587378717238, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.17667488753795624}, {"id": 488, "seek": 291908, "start": 2928.68, "end": 2933.84, "text": " sectores de tama\u00f1o b\u00e1sicamente el tama\u00f1o del vocabulario, si yo tengo consigueros 10.000", "tokens": [50844, 22610, 2706, 368, 45342, 7716, 48282, 806, 45342, 7716, 1103, 2329, 455, 1040, 1004, 11, 1511, 5290, 13989, 1014, 16397, 16771, 1266, 13, 1360, 51102], "temperature": 0.0, "avg_logprob": -0.3717587378717238, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.17667488753795624}, {"id": 489, "seek": 291908, "start": 2933.84, "end": 2939.04, "text": " para el vocabulario, o tener sectores de tama\u00f1o 10.000, donde la mayor\u00eda de los n\u00fameros van a ser", "tokens": [51102, 1690, 806, 2329, 455, 1040, 1004, 11, 277, 11640, 22610, 2706, 368, 45342, 7716, 1266, 13, 1360, 11, 10488, 635, 35342, 368, 1750, 36545, 3161, 257, 816, 51362], "temperature": 0.0, "avg_logprob": -0.3717587378717238, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.17667488753795624}, {"id": 490, "seek": 291908, "start": 2939.04, "end": 2943.44, "text": " cero y algunos van a ser valores distintos de cero, entonces me va a pasar que los sectores", "tokens": [51362, 269, 2032, 288, 21078, 3161, 257, 816, 38790, 49337, 368, 269, 2032, 11, 13003, 385, 2773, 257, 25344, 631, 1750, 22610, 2706, 51582], "temperature": 0.0, "avg_logprob": -0.3717587378717238, "compression_ratio": 1.7868217054263567, "no_speech_prob": 0.17667488753795624}, {"id": 491, "seek": 294344, "start": 2943.44, "end": 2951.76, "text": " son dispersos o sparse, bien, entonces, ah\u00ed como refinaciones est\u00e1 t\u00e9cnico que se utiliza", "tokens": [50364, 1872, 24631, 329, 277, 637, 11668, 11, 3610, 11, 13003, 11, 12571, 2617, 44395, 9188, 3192, 25564, 77, 2789, 631, 369, 4976, 13427, 50780], "temperature": 0.0, "avg_logprob": -0.4501982189360119, "compression_ratio": 1.7252747252747254, "no_speech_prob": 0.12301333248615265}, {"id": 492, "seek": 294344, "start": 2951.76, "end": 2957.56, "text": " bastante, o sea, est\u00e1 t\u00e9cnica de construir matriz y hasta el menos t\u00e9rmino, se puede usar como", "tokens": [50780, 14651, 11, 277, 4158, 11, 3192, 45411, 368, 38445, 3803, 24959, 288, 10764, 806, 8902, 45198, 78, 11, 369, 8919, 14745, 2617, 51070], "temperature": 0.0, "avg_logprob": -0.4501982189360119, "compression_ratio": 1.7252747252747254, "no_speech_prob": 0.12301333248615265}, {"id": 493, "seek": 294344, "start": 2957.56, "end": 2961.92, "text": " va a ser para calcular ciertos tipos del problema de palabra, el algoritmo globo, se va a", "tokens": [51070, 2773, 257, 816, 1690, 2104, 17792, 49252, 329, 37105, 1103, 12395, 368, 31702, 11, 806, 3501, 50017, 3280, 3114, 1763, 11, 369, 2773, 257, 51288], "temperature": 0.0, "avg_logprob": -0.4501982189360119, "compression_ratio": 1.7252747252747254, "no_speech_prob": 0.12301333248615265}, {"id": 494, "seek": 294344, "start": 2961.92, "end": 2968.48, "text": " hacer en comentarios comenzar en esta matriz, los algoritmos de PCR, principal componentan\u00e1lisis", "tokens": [51288, 6720, 465, 36842, 29564, 289, 465, 5283, 3803, 24959, 11, 1750, 3501, 50017, 3415, 368, 44022, 11, 9716, 6542, 282, 11447, 28436, 51616], "temperature": 0.0, "avg_logprob": -0.4501982189360119, "compression_ratio": 1.7252747252747254, "no_speech_prob": 0.12301333248615265}, {"id": 495, "seek": 294344, "start": 2968.48, "end": 2972.84, "text": " se puede usar para reducir la dimensionalidad de esta matriz, en talidad este tipo de matriz", "tokens": [51616, 369, 8919, 14745, 1690, 2783, 23568, 635, 10139, 304, 4580, 368, 5283, 3803, 24959, 11, 465, 4023, 4580, 4065, 9746, 368, 3803, 24959, 51834], "temperature": 0.0, "avg_logprob": -0.4501982189360119, "compression_ratio": 1.7252747252747254, "no_speech_prob": 0.12301333248615265}, {"id": 496, "seek": 297284, "start": 2972.84, "end": 2979.2000000000003, "text": " es tiene sus usos, pero la que vamos a ver es una t\u00e9cnica un poco posterior a las matriz", "tokens": [50364, 785, 7066, 3291, 505, 329, 11, 4768, 635, 631, 5295, 257, 1306, 785, 2002, 45411, 517, 10639, 33529, 257, 2439, 3803, 24959, 50682], "temperature": 0.0, "avg_logprob": -0.48992996831094066, "compression_ratio": 1.6690909090909092, "no_speech_prob": 0.05410332977771759}, {"id": 497, "seek": 297284, "start": 2979.2000000000003, "end": 2985.76, "text": " est\u00e1 el menos t\u00e9rmino que digamos que est\u00e1 como en el inicio de lo que fue la la revoluci\u00f3n", "tokens": [50682, 3192, 806, 8902, 45198, 78, 631, 36430, 631, 3192, 2617, 465, 806, 294, 18322, 368, 450, 631, 9248, 635, 635, 16908, 30813, 51010], "temperature": 0.0, "avg_logprob": -0.48992996831094066, "compression_ratio": 1.6690909090909092, "no_speech_prob": 0.05410332977771759}, {"id": 498, "seek": 297284, "start": 2985.76, "end": 2990.96, "text": " que se han dado en pelea en los \u00faltimos a\u00f1os, este es un trabajo de 2013, un trabajo", "tokens": [51010, 631, 369, 7276, 29568, 465, 41615, 64, 465, 1750, 33013, 11424, 11, 4065, 785, 517, 18099, 368, 9012, 11, 517, 18099, 51270], "temperature": 0.0, "avg_logprob": -0.48992996831094066, "compression_ratio": 1.6690909090909092, "no_speech_prob": 0.05410332977771759}, {"id": 499, "seek": 297284, "start": 2990.96, "end": 2997.04, "text": " de un investigador de San Francisco Log, un que propuso en 2013, una t\u00e9cnica que en realidad", "tokens": [51270, 368, 517, 4557, 5409, 368, 5271, 12279, 10824, 11, 517, 631, 2365, 24431, 465, 9012, 11, 2002, 45411, 631, 465, 25635, 51574], "temperature": 0.0, "avg_logprob": -0.48992996831094066, "compression_ratio": 1.6690909090909092, "no_speech_prob": 0.05410332977771759}, {"id": 500, "seek": 297284, "start": 2997.04, "end": 3001.8, "text": " son dos algoritmos distintos, que se llama hortubec, o sea, el algoritmo para ir de palabras", "tokens": [51574, 1872, 4491, 3501, 50017, 3415, 49337, 11, 631, 369, 23272, 276, 477, 1977, 66, 11, 277, 4158, 11, 806, 3501, 50017, 3280, 1690, 3418, 368, 35240, 51812], "temperature": 0.0, "avg_logprob": -0.48992996831094066, "compression_ratio": 1.6690909090909092, "no_speech_prob": 0.05410332977771759}, {"id": 501, "seek": 300180, "start": 3001.8, "end": 3008.6000000000004, "text": " a los aspectores, y que su idea era construir vectores de enzos, o sea, a vectores que tuviera", "tokens": [50364, 257, 1750, 4171, 2706, 11, 288, 631, 459, 1558, 4249, 38445, 8062, 279, 368, 465, 27681, 11, 277, 4158, 11, 257, 8062, 279, 631, 38177, 10609, 50704], "temperature": 0.0, "avg_logprob": -0.4499030659216961, "compression_ratio": 1.7734375, "no_speech_prob": 0.1567838042974472}, {"id": 502, "seek": 300180, "start": 3008.6000000000004, "end": 3013.2000000000003, "text": " una dimensi\u00f3n, mucho m\u00e1s chica del vocabulario, un vector de tama\u00f1o 10.000, un vector de tama\u00f1o", "tokens": [50704, 2002, 5013, 694, 2560, 11, 9824, 3573, 417, 2262, 1103, 2329, 455, 1040, 1004, 11, 517, 8062, 368, 45342, 7716, 1266, 13, 1360, 11, 517, 8062, 368, 45342, 7716, 50934], "temperature": 0.0, "avg_logprob": -0.4499030659216961, "compression_ratio": 1.7734375, "no_speech_prob": 0.1567838042974472}, {"id": 503, "seek": 300180, "start": 3013.2000000000003, "end": 3019.6000000000004, "text": " 100 o 150 o 300, y por el hecho de comprimir todo el vocabulario en esos vectores m\u00e1s", "tokens": [50934, 2319, 277, 8451, 277, 6641, 11, 288, 1515, 806, 13064, 368, 715, 5565, 347, 5149, 806, 2329, 455, 1040, 1004, 465, 22411, 8062, 279, 3573, 51254], "temperature": 0.0, "avg_logprob": -0.4499030659216961, "compression_ratio": 1.7734375, "no_speech_prob": 0.1567838042974472}, {"id": 504, "seek": 300180, "start": 3019.6000000000004, "end": 3025.42, "text": " densos, entonces gan\u00f3 esas propiedades de que palabras m\u00e1s cercanas son sim\u00e1ticamente", "tokens": [51254, 24505, 329, 11, 13003, 7574, 812, 23388, 2365, 1091, 2977, 368, 631, 35240, 3573, 36099, 14292, 1872, 1034, 7656, 23653, 51545], "temperature": 0.0, "avg_logprob": -0.4499030659216961, "compression_ratio": 1.7734375, "no_speech_prob": 0.1567838042974472}, {"id": 505, "seek": 300180, "start": 3025.42, "end": 3030.04, "text": " similares, entonces bueno obviamente no lo van solo por comprimir sino por c\u00f3mo se", "tokens": [51545, 1034, 7371, 495, 11, 13003, 11974, 36325, 572, 450, 3161, 6944, 1515, 715, 5565, 347, 18108, 1515, 12826, 369, 51776], "temperature": 0.0, "avg_logprob": -0.4499030659216961, "compression_ratio": 1.7734375, "no_speech_prob": 0.1567838042974472}, {"id": 506, "seek": 303004, "start": 3030.04, "end": 3038.7, "text": " entra en esto, entonces la idea de los algoritmos de hortubec es decir bueno en vez de contar", "tokens": [50364, 22284, 465, 7433, 11, 13003, 635, 1558, 368, 1750, 3501, 50017, 3415, 368, 276, 477, 1977, 66, 785, 10235, 11974, 465, 5715, 368, 27045, 50797], "temperature": 0.0, "avg_logprob": -0.3753618352553424, "compression_ratio": 1.6772727272727272, "no_speech_prob": 0.16968543827533722}, {"id": 507, "seek": 303004, "start": 3038.7, "end": 3041.9, "text": " como la matriz de t\u00e9rmino termin\u00f3 las palabras, dentro de un contexto yo lo voy a ver", "tokens": [50797, 2617, 635, 3803, 24959, 368, 45198, 78, 10761, 812, 2439, 35240, 11, 10856, 368, 517, 47685, 5290, 450, 7552, 257, 1306, 50957], "temperature": 0.0, "avg_logprob": -0.3753618352553424, "compression_ratio": 1.6772727272727272, "no_speech_prob": 0.16968543827533722}, {"id": 508, "seek": 303004, "start": 3041.9, "end": 3047.58, "text": " con un problema de clasificaci\u00f3n, un problema de provabil\u00edstico en el cual voy a predecir", "tokens": [50957, 416, 517, 12395, 368, 596, 296, 40802, 11, 517, 12395, 368, 1439, 455, 388, 19512, 2789, 465, 806, 10911, 7552, 257, 24874, 23568, 51241], "temperature": 0.0, "avg_logprob": -0.3753618352553424, "compression_ratio": 1.6772727272727272, "no_speech_prob": 0.16968543827533722}, {"id": 509, "seek": 303004, "start": 3047.58, "end": 3054.62, "text": " qu\u00e9 tan probable es que la palabra C aparezca el en contexto de la palabra WB, voy a tener una", "tokens": [51241, 8057, 7603, 21759, 785, 631, 635, 31702, 383, 15004, 89, 496, 806, 465, 47685, 368, 635, 31702, 343, 33, 11, 7552, 257, 11640, 2002, 51593], "temperature": 0.0, "avg_logprob": -0.3753618352553424, "compression_ratio": 1.6772727272727272, "no_speech_prob": 0.16968543827533722}, {"id": 510, "seek": 305462, "start": 3054.62, "end": 3060.3199999999997, "text": " producci\u00f3n, la producci\u00f3n de que es cierto que aparece la palabra WB en el contexto", "tokens": [50364, 48586, 11, 635, 48586, 368, 631, 785, 28558, 631, 37863, 635, 31702, 343, 33, 465, 806, 47685, 50649], "temperature": 0.0, "avg_logprob": -0.291785393991778, "compression_ratio": 1.9404255319148935, "no_speech_prob": 0.10238612443208694}, {"id": 511, "seek": 305462, "start": 3060.3199999999997, "end": 3065.72, "text": " de la palabra C, en el contexto de la palabra WB, eso ser\u00eda P de m\u00e1s WB, pero a su vez", "tokens": [50649, 368, 635, 31702, 383, 11, 465, 806, 47685, 368, 635, 31702, 343, 33, 11, 7287, 23679, 430, 368, 3573, 343, 33, 11, 4768, 257, 459, 5715, 50919], "temperature": 0.0, "avg_logprob": -0.291785393991778, "compression_ratio": 1.9404255319148935, "no_speech_prob": 0.10238612443208694}, {"id": 512, "seek": 305462, "start": 3065.72, "end": 3069.52, "text": " tengo que tener una producci\u00f3n negativa, o sea yo tengo que saber cu\u00e1les son los ejemplos", "tokens": [50919, 13989, 631, 11640, 2002, 48586, 2485, 18740, 11, 277, 4158, 5290, 13989, 631, 12489, 2702, 842, 904, 1872, 1750, 10012, 5895, 329, 51109], "temperature": 0.0, "avg_logprob": -0.291785393991778, "compression_ratio": 1.9404255319148935, "no_speech_prob": 0.10238612443208694}, {"id": 513, "seek": 305462, "start": 3069.52, "end": 3075.66, "text": " positivos y cu\u00e1les son los ejemplos negativos, entonces lo que se hace para esto decir bueno", "tokens": [51109, 11218, 16501, 288, 2702, 842, 904, 1872, 1750, 10012, 5895, 329, 2485, 36945, 11, 13003, 450, 631, 369, 10032, 1690, 7433, 10235, 11974, 51416], "temperature": 0.0, "avg_logprob": -0.291785393991778, "compression_ratio": 1.9404255319148935, "no_speech_prob": 0.10238612443208694}, {"id": 514, "seek": 305462, "start": 3075.66, "end": 3081.68, "text": " yo tengo un gran corbus, una gran colecci\u00f3n de palabras y yo puedo medir, puedo llegar a medir", "tokens": [51416, 5290, 13989, 517, 9370, 1181, 21441, 11, 2002, 9370, 45139, 14735, 368, 35240, 288, 5290, 21612, 1205, 347, 11, 21612, 24892, 257, 1205, 347, 51717], "temperature": 0.0, "avg_logprob": -0.291785393991778, "compression_ratio": 1.9404255319148935, "no_speech_prob": 0.10238612443208694}, {"id": 515, "seek": 308168, "start": 3081.68, "end": 3087.24, "text": " cu\u00e1les son los contextos donde aparece la palabra C en el contexto de la palabra WB, pero", "tokens": [50364, 2702, 842, 904, 1872, 1750, 4319, 329, 10488, 37863, 635, 31702, 383, 465, 806, 47685, 368, 635, 31702, 343, 33, 11, 4768, 50642], "temperature": 0.0, "avg_logprob": -0.28102345620432206, "compression_ratio": 2.026431718061674, "no_speech_prob": 0.16994574666023254}, {"id": 516, "seek": 308168, "start": 3087.24, "end": 3092.04, "text": " adem\u00e1s puedo llegar a medir los casos en los cuales no pasa, o sea yo puedo soltearte", "tokens": [50642, 21251, 21612, 24892, 257, 1205, 347, 1750, 25135, 465, 1750, 46932, 572, 20260, 11, 277, 4158, 5290, 21612, 1404, 975, 11026, 50882], "temperature": 0.0, "avg_logprob": -0.28102345620432206, "compression_ratio": 2.026431718061674, "no_speech_prob": 0.16994574666023254}, {"id": 517, "seek": 308168, "start": 3092.04, "end": 3096.2, "text": " a la palabra celebratorias, y decir bueno una palabra aleatoria no siempre est\u00e1 en el contexto", "tokens": [50882, 257, 635, 31702, 3886, 1639, 4609, 11, 288, 10235, 11974, 2002, 31702, 6775, 1639, 654, 572, 12758, 3192, 465, 806, 47685, 51090], "temperature": 0.0, "avg_logprob": -0.28102345620432206, "compression_ratio": 2.026431718061674, "no_speech_prob": 0.16994574666023254}, {"id": 518, "seek": 308168, "start": 3096.2, "end": 3101.48, "text": " de una palabra WB, entonces con eso me invento ejemplos negativos, tengo ejemplos positivos que", "tokens": [51090, 368, 2002, 31702, 343, 33, 11, 13003, 416, 7287, 385, 7962, 78, 10012, 5895, 329, 2485, 36945, 11, 13989, 10012, 5895, 329, 11218, 16501, 631, 51354], "temperature": 0.0, "avg_logprob": -0.28102345620432206, "compression_ratio": 2.026431718061674, "no_speech_prob": 0.16994574666023254}, {"id": 519, "seek": 308168, "start": 3101.48, "end": 3107.56, "text": " son la palabra queso, aparece en el contexto de la palabra muruesa, ejemplos negativos son", "tokens": [51354, 1872, 635, 31702, 421, 41189, 11, 37863, 465, 806, 47685, 368, 635, 31702, 5257, 1247, 64, 11, 10012, 5895, 329, 2485, 36945, 1872, 51658], "temperature": 0.0, "avg_logprob": -0.28102345620432206, "compression_ratio": 2.026431718061674, "no_speech_prob": 0.16994574666023254}, {"id": 520, "seek": 310756, "start": 3107.64, "end": 3113.48, "text": " de una palabra cualquiera, y sali\u00f3 yo que se \u00e1rbol, bueno la palabra \u00c1rbol no aparece en el contexto", "tokens": [50368, 368, 2002, 31702, 10911, 35134, 11, 288, 1845, 7138, 5290, 631, 369, 35349, 17460, 11, 11974, 635, 31702, 24205, 81, 17460, 572, 37863, 465, 806, 47685, 50660], "temperature": 0.0, "avg_logprob": -0.36525747316692947, "compression_ratio": 1.7064220183486238, "no_speech_prob": 0.035676829516887665}, {"id": 521, "seek": 310756, "start": 3113.48, "end": 3122.16, "text": " de la palabra muruesa, bien, entonces el algoritmoschip, gran que es uno de los algoritmos de", "tokens": [50660, 368, 635, 31702, 5257, 1247, 64, 11, 3610, 11, 13003, 806, 3501, 50017, 3415, 339, 647, 11, 9370, 631, 785, 8526, 368, 1750, 3501, 50017, 3415, 368, 51094], "temperature": 0.0, "avg_logprob": -0.36525747316692947, "compression_ratio": 1.7064220183486238, "no_speech_prob": 0.035676829516887665}, {"id": 522, "seek": 310756, "start": 3122.16, "end": 3129.68, "text": " WB m\u00e1s utilizados, utiliza este ese principio y lo ve como una red neuronal, intenta", "tokens": [51094, 343, 33, 3573, 19906, 4181, 11, 4976, 13427, 4065, 10167, 34308, 288, 450, 1241, 2617, 2002, 2182, 12087, 21523, 11, 8446, 64, 51470], "temperature": 0.0, "avg_logprob": -0.36525747316692947, "compression_ratio": 1.7064220183486238, "no_speech_prob": 0.035676829516887665}, {"id": 523, "seek": 310756, "start": 3129.68, "end": 3134.4, "text": " modelar esto como una red neuronal, en la cual yo tengo una capa de entrada y la capa de", "tokens": [51470, 2316, 289, 7433, 2617, 2002, 2182, 12087, 21523, 11, 465, 635, 10911, 5290, 13989, 2002, 1410, 64, 368, 37119, 288, 635, 1410, 64, 368, 51706], "temperature": 0.0, "avg_logprob": -0.36525747316692947, "compression_ratio": 1.7064220183486238, "no_speech_prob": 0.035676829516887665}, {"id": 524, "seek": 313440, "start": 3134.4, "end": 3138.8, "text": " entrada va a ser una representaci\u00f3n Juanjote, esto lo mencionamos la de pasar, la representaci\u00f3n", "tokens": [50364, 37119, 2773, 257, 816, 2002, 2906, 3482, 17064, 73, 1370, 11, 7433, 450, 37030, 2151, 635, 368, 25344, 11, 635, 2906, 3482, 50584], "temperature": 0.0, "avg_logprob": -0.35525746021455934, "compression_ratio": 1.8860103626943006, "no_speech_prob": 0.05216104909777641}, {"id": 525, "seek": 313440, "start": 3138.8, "end": 3145.64, "text": " Juanjote y es as\u00ed, no, en la representaci\u00f3n Juanjote, yo voy a tener un vector para la palabra queso", "tokens": [50584, 17064, 73, 1370, 288, 785, 8582, 11, 572, 11, 465, 635, 2906, 3482, 17064, 73, 1370, 11, 5290, 7552, 257, 11640, 517, 8062, 1690, 635, 31702, 421, 41189, 50926], "temperature": 0.0, "avg_logprob": -0.35525746021455934, "compression_ratio": 1.8860103626943006, "no_speech_prob": 0.05216104909777641}, {"id": 526, "seek": 313440, "start": 3145.64, "end": 3155.8, "text": " y un vector para la palabra hamburguesa, donde voy a tener una columna para c\u00e1unas", "tokens": [50926, 288, 517, 8062, 1690, 635, 31702, 25172, 5476, 1247, 64, 11, 10488, 7552, 257, 11640, 2002, 5970, 629, 1690, 269, 842, 409, 296, 51434], "temperature": 0.0, "avg_logprob": -0.35525746021455934, "compression_ratio": 1.8860103626943006, "no_speech_prob": 0.05216104909777641}, {"id": 527, "seek": 313440, "start": 3155.8, "end": 3164.36, "text": " las palabras posibles, entonces voy a tener la capa de arbol y ac\u00e1 va a estar", "tokens": [51434, 2439, 35240, 1366, 14428, 11, 13003, 7552, 257, 11640, 635, 1410, 64, 368, 594, 17460, 288, 23496, 2773, 257, 8755, 51862], "temperature": 0.0, "avg_logprob": -0.35525746021455934, "compression_ratio": 1.8860103626943006, "no_speech_prob": 0.05216104909777641}, {"id": 528, "seek": 316436, "start": 3164.36, "end": 3171.08, "text": " que son agulado y ac\u00e1 va a estar hamburguesa en otro lado y ac\u00e1 va a armas cosas, y entonces", "tokens": [50364, 631, 1872, 623, 425, 1573, 288, 23496, 2773, 257, 8755, 25172, 5476, 1247, 64, 465, 11921, 11631, 288, 23496, 2773, 257, 3726, 296, 12218, 11, 288, 13003, 50700], "temperature": 0.0, "avg_logprob": -0.32142610040329794, "compression_ratio": 2.031111111111111, "no_speech_prob": 0.028415488079190254}, {"id": 529, "seek": 316436, "start": 3171.08, "end": 3176.92, "text": " la representaci\u00f3n de la palabra queso es cero en todos lados y un uno ac\u00e1 y cero en todo", "tokens": [50700, 635, 2906, 3482, 368, 635, 31702, 421, 41189, 785, 269, 2032, 465, 6321, 40301, 288, 517, 8526, 23496, 288, 269, 2032, 465, 5149, 50992], "temperature": 0.0, "avg_logprob": -0.32142610040329794, "compression_ratio": 2.031111111111111, "no_speech_prob": 0.028415488079190254}, {"id": 530, "seek": 316436, "start": 3176.92, "end": 3182.96, "text": " resto, la palabra muruesa es cero en todos lados, cero ac\u00e1 y un uno en hamburguesa y cero", "tokens": [50992, 28247, 11, 635, 31702, 5257, 1247, 64, 785, 269, 2032, 465, 6321, 40301, 11, 269, 2032, 23496, 288, 517, 8526, 465, 25172, 5476, 1247, 64, 288, 269, 2032, 51294], "temperature": 0.0, "avg_logprob": -0.32142610040329794, "compression_ratio": 2.031111111111111, "no_speech_prob": 0.028415488079190254}, {"id": 531, "seek": 316436, "start": 3182.96, "end": 3188.4, "text": " en todo resto, eso es la representaci\u00f3n Juanjote, entonces esta red neuronal en realidad", "tokens": [51294, 465, 5149, 28247, 11, 7287, 785, 635, 2906, 3482, 17064, 73, 1370, 11, 13003, 5283, 2182, 12087, 21523, 465, 25635, 51566], "temperature": 0.0, "avg_logprob": -0.32142610040329794, "compression_ratio": 2.031111111111111, "no_speech_prob": 0.028415488079190254}, {"id": 532, "seek": 316436, "start": 3188.4, "end": 3193.76, "text": " digamos, es una red neuronal que intenta predecir este problema pero a el\u00edstico toma como", "tokens": [51566, 36430, 11, 785, 2002, 2182, 12087, 21523, 631, 8446, 64, 24874, 23568, 4065, 12395, 4768, 257, 806, 19512, 2789, 39728, 2617, 51834], "temperature": 0.0, "avg_logprob": -0.32142610040329794, "compression_ratio": 2.031111111111111, "no_speech_prob": 0.028415488079190254}, {"id": 533, "seek": 319376, "start": 3193.76, "end": 3199.28, "text": " entrada ese vector de cero cibunos, ese vector Juanjote donde la entrada es todo el vocabulario", "tokens": [50364, 37119, 10167, 8062, 368, 269, 2032, 269, 897, 409, 329, 11, 10167, 8062, 17064, 73, 1370, 10488, 635, 37119, 785, 5149, 806, 2329, 455, 1040, 1004, 50640], "temperature": 0.0, "avg_logprob": -0.2381922712603819, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.029995150864124298}, {"id": 534, "seek": 319376, "start": 3199.28, "end": 3205.6000000000004, "text": " posible, tiene una capa oculta en el medio, es una red que tiene una sola capa oculta y como", "tokens": [50640, 26644, 11, 7066, 2002, 1410, 64, 10409, 723, 64, 465, 806, 22123, 11, 785, 2002, 2182, 631, 7066, 2002, 34162, 1410, 64, 10409, 723, 64, 288, 2617, 50956], "temperature": 0.0, "avg_logprob": -0.2381922712603819, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.029995150864124298}, {"id": 535, "seek": 319376, "start": 3205.6000000000004, "end": 3211.48, "text": " salida tiene una distribuci\u00f3n de probabilidades de todas las palabras en contexto, entonces", "tokens": [50956, 1845, 2887, 7066, 2002, 4400, 30813, 368, 31959, 10284, 368, 10906, 2439, 35240, 465, 47685, 11, 13003, 51250], "temperature": 0.0, "avg_logprob": -0.2381922712603819, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.029995150864124298}, {"id": 536, "seek": 319376, "start": 3211.48, "end": 3219.0, "text": " la entrada es supongamos que esto tiene tama\u00f1o 10 mil, no, tengo 10 mil palabras posibles y", "tokens": [51250, 635, 37119, 785, 9331, 556, 2151, 631, 7433, 7066, 45342, 7716, 1266, 1962, 11, 572, 11, 13989, 1266, 1962, 35240, 1366, 14428, 288, 51626], "temperature": 0.0, "avg_logprob": -0.2381922712603819, "compression_ratio": 1.7641509433962264, "no_speech_prob": 0.029995150864124298}, {"id": 537, "seek": 321900, "start": 3219.0, "end": 3227.4, "text": " esp\u00edn palabras en el vocabulario, entonces la entrada de la red va a ser una cosa de tama\u00f1o", "tokens": [50364, 7089, 10973, 35240, 465, 806, 2329, 455, 1040, 1004, 11, 13003, 635, 37119, 368, 635, 2182, 2773, 257, 816, 2002, 10163, 368, 45342, 7716, 50784], "temperature": 0.0, "avg_logprob": -0.32530139405050396, "compression_ratio": 1.6257309941520468, "no_speech_prob": 0.04366099461913109}, {"id": 538, "seek": 321900, "start": 3227.4, "end": 3240.68, "text": " 10 mil, entrada tiene tama\u00f1o 10 mil y la salida va a tener c por 10 mil, c es cu\u00e1nta", "tokens": [50784, 1266, 1962, 11, 37119, 7066, 45342, 7716, 1266, 1962, 288, 635, 1845, 2887, 2773, 257, 11640, 269, 1515, 1266, 1962, 11, 269, 785, 44256, 64, 51448], "temperature": 0.0, "avg_logprob": -0.32530139405050396, "compression_ratio": 1.6257309941520468, "no_speech_prob": 0.04366099461913109}, {"id": 539, "seek": 321900, "start": 3240.68, "end": 3244.92, "text": " que para la verdad es el contexto estoy contando, o sea si yo estoy contando, no s\u00e9, 10 palabras", "tokens": [51448, 631, 1690, 635, 13692, 785, 806, 47685, 15796, 660, 1806, 11, 277, 4158, 1511, 5290, 15796, 660, 1806, 11, 572, 7910, 11, 1266, 35240, 51660], "temperature": 0.0, "avg_logprob": -0.32530139405050396, "compression_ratio": 1.6257309941520468, "no_speech_prob": 0.04366099461913109}, {"id": 540, "seek": 324492, "start": 3244.92, "end": 3250.4, "text": " al rededor de la que estoy mirando, entonces va a ser una salida hace por 10 mil, esto se", "tokens": [50364, 419, 2182, 34897, 368, 635, 631, 15796, 3149, 1806, 11, 13003, 2773, 257, 816, 2002, 1845, 2887, 10032, 1515, 1266, 1962, 11, 7433, 369, 50638], "temperature": 0.0, "avg_logprob": -0.2746676783407888, "compression_ratio": 1.8814432989690721, "no_speech_prob": 0.092088483273983}, {"id": 541, "seek": 324492, "start": 3250.4, "end": 3255.64, "text": " por 10 mil representan, cu\u00e1l es la probabilidad de que una palabra cualquiera por ejemplo", "tokens": [50638, 1515, 1266, 1962, 2906, 282, 11, 44318, 785, 635, 31959, 4580, 368, 631, 2002, 31702, 10911, 35134, 1515, 13358, 50900], "temperature": 0.0, "avg_logprob": -0.2746676783407888, "compression_ratio": 1.8814432989690721, "no_speech_prob": 0.092088483273983}, {"id": 542, "seek": 324492, "start": 3255.64, "end": 3262.08, "text": " hamburguesa est\u00e9 en un contexto de tres palabras para atr\u00e1s de la palabra queso, cu\u00e1l es la", "tokens": [50900, 25172, 5476, 1247, 64, 34584, 465, 517, 47685, 368, 15890, 35240, 1690, 22906, 368, 635, 31702, 421, 41189, 11, 44318, 785, 635, 51222], "temperature": 0.0, "avg_logprob": -0.2746676783407888, "compression_ratio": 1.8814432989690721, "no_speech_prob": 0.092088483273983}, {"id": 543, "seek": 324492, "start": 3262.08, "end": 3265.08, "text": " probabilidad que la palabra perro est\u00e9 en un contexto de dos palabras para adelante y la", "tokens": [51222, 31959, 4580, 631, 635, 31702, 680, 340, 34584, 465, 517, 47685, 368, 4491, 35240, 1690, 40214, 288, 635, 51372], "temperature": 0.0, "avg_logprob": -0.2746676783407888, "compression_ratio": 1.8814432989690721, "no_speech_prob": 0.092088483273983}, {"id": 544, "seek": 326508, "start": 3265.08, "end": 3274.7999999999997, "text": " palabra queso y as\u00ed eso es las se por 10 mil sal\u00edas y en el medio tiene una capa que ah\u00ed", "tokens": [50364, 31702, 421, 41189, 288, 8582, 7287, 785, 2439, 369, 1515, 1266, 1962, 1845, 10025, 288, 465, 806, 22123, 7066, 2002, 1410, 64, 631, 12571, 50850], "temperature": 0.0, "avg_logprob": -0.3229408264160156, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.1305759847164154}, {"id": 545, "seek": 326508, "start": 3274.7999999999997, "end": 3287.96, "text": " se enedim la capa oculta que tiene tama\u00f1o 10 mil por dime y dime es la dimensi\u00f3n de los", "tokens": [50850, 369, 465, 292, 332, 635, 1410, 64, 10409, 723, 64, 631, 7066, 45342, 7716, 1266, 1962, 1515, 36330, 288, 36330, 785, 635, 5013, 694, 2560, 368, 1750, 51508], "temperature": 0.0, "avg_logprob": -0.3229408264160156, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.1305759847164154}, {"id": 546, "seek": 326508, "start": 3287.96, "end": 3292.16, "text": " sectores que eso es lo que le dec\u00eda que pod\u00eda ser dimensi\u00f3n 100 o dimensi\u00f3n 300 o", "tokens": [51508, 22610, 2706, 631, 7287, 785, 450, 631, 476, 37599, 631, 45588, 816, 5013, 694, 2560, 2319, 277, 5013, 694, 2560, 6641, 277, 51718], "temperature": 0.0, "avg_logprob": -0.3229408264160156, "compression_ratio": 1.6898734177215189, "no_speech_prob": 0.1305759847164154}, {"id": 547, "seek": 329216, "start": 3292.16, "end": 3299.08, "text": " dimensi\u00f3n 150, es un n\u00famero mucho m\u00e1s chico que vocabulario, entonces pensemoslo como", "tokens": [50364, 5013, 694, 2560, 8451, 11, 785, 517, 14959, 9824, 3573, 417, 2789, 631, 2329, 455, 1040, 1004, 11, 13003, 11209, 3415, 752, 2617, 50710], "temperature": 0.0, "avg_logprob": -0.3407153701782227, "compression_ratio": 1.5814977973568283, "no_speech_prob": 0.04389786347746849}, {"id": 548, "seek": 329216, "start": 3299.08, "end": 3305.8799999999997, "text": " esto la tano mientras es un vector o anjote que tiene uno y un mont\u00f3n de seros y despu\u00e9s", "tokens": [50710, 7433, 635, 7603, 78, 26010, 785, 517, 8062, 277, 364, 73, 1370, 631, 7066, 8526, 288, 517, 45259, 368, 816, 329, 288, 15283, 51050], "temperature": 0.0, "avg_logprob": -0.3407153701782227, "compression_ratio": 1.5814977973568283, "no_speech_prob": 0.04389786347746849}, {"id": 549, "seek": 329216, "start": 3305.8799999999997, "end": 3311.3199999999997, "text": " lo paso por una matriz de pesos que tiene este tama\u00f1o 10 mil por por ejemplo 300, 10 mil", "tokens": [51050, 450, 29212, 1515, 2002, 3803, 24959, 368, 33204, 631, 7066, 4065, 45342, 7716, 1266, 1962, 1515, 1515, 13358, 6641, 11, 1266, 1962, 51322], "temperature": 0.0, "avg_logprob": -0.3407153701782227, "compression_ratio": 1.5814977973568283, "no_speech_prob": 0.04389786347746849}, {"id": 550, "seek": 329216, "start": 3311.3199999999997, "end": 3318.04, "text": " por 300, entonces al multiplicar eso por mi vector ac\u00e1 esto me devuelve una sola fila de", "tokens": [51322, 1515, 6641, 11, 13003, 419, 17596, 289, 7287, 1515, 2752, 8062, 23496, 7433, 385, 1905, 3483, 303, 2002, 34162, 1387, 64, 368, 51658], "temperature": 0.0, "avg_logprob": -0.3407153701782227, "compression_ratio": 1.5814977973568283, "no_speech_prob": 0.04389786347746849}, {"id": 551, "seek": 331804, "start": 3318.04, "end": 3322.08, "text": " esa matriz que tiene dimensi\u00f3n 300 y eso se lo voy a pasar a la funci\u00f3n de activaci\u00f3n,", "tokens": [50364, 11342, 3803, 24959, 631, 7066, 5013, 694, 2560, 6641, 288, 7287, 369, 450, 7552, 257, 25344, 257, 635, 43735, 368, 2430, 3482, 11, 50566], "temperature": 0.0, "avg_logprob": -0.3723023037950532, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.06984506547451019}, {"id": 552, "seek": 331804, "start": 3325.08, "end": 3330.68, "text": " a su vez eso tiene como una especie de segunda capa en la cual aparece en m\u00e1s pesos para", "tokens": [50716, 257, 459, 5715, 7287, 7066, 2617, 2002, 49368, 368, 21978, 1410, 64, 465, 635, 10911, 37863, 465, 3573, 33204, 1690, 50996], "temperature": 0.0, "avg_logprob": -0.3723023037950532, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.06984506547451019}, {"id": 553, "seek": 331804, "start": 3330.68, "end": 3335.08, "text": " poder calcular estas alidas pero en realidad al m\u00e9todo despu\u00e9s de que se entra en la columna", "tokens": [50996, 8152, 2104, 17792, 13897, 419, 11382, 4768, 465, 25635, 419, 20275, 17423, 15283, 368, 631, 369, 22284, 465, 635, 5970, 629, 51216], "temperature": 0.0, "avg_logprob": -0.3723023037950532, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.06984506547451019}, {"id": 554, "seek": 331804, "start": 3335.08, "end": 3339.72, "text": " un mont\u00f3n de valores positivos, un mont\u00f3n de valores negativos dice bueno que eso aparece en", "tokens": [51216, 517, 45259, 368, 38790, 11218, 16501, 11, 517, 45259, 368, 38790, 2485, 36945, 10313, 11974, 631, 7287, 37863, 465, 51448], "temperature": 0.0, "avg_logprob": -0.3723023037950532, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.06984506547451019}, {"id": 555, "seek": 331804, "start": 3339.72, "end": 3344.12, "text": " contexto de amor y esa pero perro no parece en el contexto de amor y esa etc\u00e9tera tengo un mont\u00f3n de", "tokens": [51448, 47685, 368, 15543, 288, 11342, 4768, 680, 340, 572, 14120, 465, 806, 47685, 368, 15543, 288, 11342, 5183, 526, 23833, 13989, 517, 45259, 368, 51668], "temperature": 0.0, "avg_logprob": -0.3723023037950532, "compression_ratio": 1.865612648221344, "no_speech_prob": 0.06984506547451019}, {"id": 556, "seek": 334412, "start": 3344.12, "end": 3350.48, "text": " valores de este estilo, cuando termina entrenar y se bueno llegue al mejor c\u00e1rculo de probabilidades", "tokens": [50364, 38790, 368, 4065, 37470, 11, 7767, 1433, 1426, 45069, 289, 288, 369, 11974, 11234, 622, 419, 11479, 6476, 81, 25436, 368, 31959, 10284, 50682], "temperature": 0.0, "avg_logprob": -0.32607305617559523, "compression_ratio": 1.7739463601532568, "no_speech_prob": 0.06913307309150696}, {"id": 557, "seek": 334412, "start": 3350.48, "end": 3354.96, "text": " en realidad yo tiro todo el resto de las capas y me quedo solamente con esta ac\u00e1 con la capa", "tokens": [50682, 465, 25635, 5290, 44188, 5149, 806, 28247, 368, 2439, 1410, 296, 288, 385, 13617, 78, 27814, 416, 5283, 23496, 416, 635, 1410, 64, 50906], "temperature": 0.0, "avg_logprob": -0.32607305617559523, "compression_ratio": 1.7739463601532568, "no_speech_prob": 0.06913307309150696}, {"id": 558, "seek": 334412, "start": 3354.96, "end": 3361.2799999999997, "text": " oculta, la capa oculta es una tabla que me dice para cada una de las palabras hay 300", "tokens": [50906, 10409, 723, 64, 11, 635, 1410, 64, 10409, 723, 64, 785, 2002, 4421, 875, 631, 385, 10313, 1690, 8411, 2002, 368, 2439, 35240, 4842, 6641, 51222], "temperature": 0.0, "avg_logprob": -0.32607305617559523, "compression_ratio": 1.7739463601532568, "no_speech_prob": 0.06913307309150696}, {"id": 559, "seek": 334412, "start": 3361.2799999999997, "end": 3366.52, "text": " valores reales que lo representan, entonces me dice bueno para la palabra que eso esto", "tokens": [51222, 38790, 957, 279, 631, 450, 2906, 282, 11, 13003, 385, 10313, 11974, 1690, 635, 31702, 631, 7287, 7433, 51484], "temperature": 0.0, "avg_logprob": -0.32607305617559523, "compression_ratio": 1.7739463601532568, "no_speech_prob": 0.06913307309150696}, {"id": 560, "seek": 334412, "start": 3366.52, "end": 3371.24, "text": " es 300 valores vamos a hacer menos uno, 3 con 4 o 8 con 6 y no se quede tanto as\u00ed 300 valores", "tokens": [51484, 785, 6641, 38790, 5295, 257, 6720, 8902, 8526, 11, 805, 416, 1017, 277, 1649, 416, 1386, 288, 572, 369, 421, 4858, 10331, 8582, 6641, 38790, 51720], "temperature": 0.0, "avg_logprob": -0.32607305617559523, "compression_ratio": 1.7739463601532568, "no_speech_prob": 0.06913307309150696}, {"id": 561, "seek": 337124, "start": 3371.4799999999996, "end": 3376.3999999999996, "text": " y para la palabra la moreza, menos 2, 3 con 1 etc\u00e9tera, o sea voy a tener un mont\u00f3n de valores", "tokens": [50376, 288, 1690, 635, 31702, 635, 544, 2394, 11, 8902, 568, 11, 805, 416, 502, 5183, 526, 23833, 11, 277, 4158, 7552, 257, 11640, 517, 45259, 368, 38790, 50622], "temperature": 0.0, "avg_logprob": -0.40281202278885186, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.031310029327869415}, {"id": 562, "seek": 337124, "start": 3376.3999999999996, "end": 3382.12, "text": " reales que lo representan, que representan esos n\u00fameros no lo s\u00e9 y nadie lo sabe pero sabemos que", "tokens": [50622, 957, 279, 631, 450, 2906, 282, 11, 631, 2906, 282, 22411, 36545, 572, 450, 7910, 288, 28060, 450, 12275, 4768, 27200, 631, 50908], "temperature": 0.0, "avg_logprob": -0.40281202278885186, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.031310029327869415}, {"id": 563, "seek": 337124, "start": 3382.12, "end": 3387.9599999999996, "text": " ah\u00ed est\u00e1n codificadas la informaci\u00f3n importante para poder despu\u00e9s trabajar con esos n\u00fameros,", "tokens": [50908, 12571, 10368, 17656, 1089, 6872, 635, 21660, 9416, 1690, 8152, 15283, 30793, 416, 22411, 36545, 11, 51200], "temperature": 0.0, "avg_logprob": -0.40281202278885186, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.031310029327869415}, {"id": 564, "seek": 337124, "start": 3387.9599999999996, "end": 3396.08, "text": " con esas palabras, bien, a eso se le llama Urdembeddings esta capa oculta que est\u00e1 ac\u00e1 en esta", "tokens": [51200, 416, 23388, 35240, 11, 3610, 11, 257, 7287, 369, 476, 23272, 624, 7800, 443, 2883, 29432, 5283, 1410, 64, 10409, 723, 64, 631, 3192, 23496, 465, 5283, 51606], "temperature": 0.0, "avg_logprob": -0.40281202278885186, "compression_ratio": 1.6131687242798354, "no_speech_prob": 0.031310029327869415}, {"id": 565, "seek": 339608, "start": 3396.08, "end": 3405.0, "text": " t\u00e9cnica de Urdembeddings, a la capa oculta que entrenan despu\u00e9s de esto, bien, preguntas,", "tokens": [50364, 45411, 368, 624, 7800, 443, 2883, 29432, 11, 257, 635, 1410, 64, 10409, 723, 64, 631, 45069, 282, 15283, 368, 7433, 11, 3610, 11, 39722, 11, 50810], "temperature": 0.0, "avg_logprob": -0.6094104397681451, "compression_ratio": 1.3586206896551725, "no_speech_prob": 0.020389242097735405}, {"id": 566, "seek": 339608, "start": 3405.0, "end": 3421.2799999999997, "text": " est\u00e1 ac\u00e1, s\u00ed, es por el producto, porque la matriz dole beso, la matriz de 10 mil por dimensiones y mi", "tokens": [50810, 3192, 23496, 11, 8600, 11, 785, 1515, 806, 47583, 11, 4021, 635, 3803, 24959, 360, 306, 4097, 78, 11, 635, 3803, 24959, 368, 1266, 1962, 1515, 10139, 279, 288, 2752, 51624], "temperature": 0.0, "avg_logprob": -0.6094104397681451, "compression_ratio": 1.3586206896551725, "no_speech_prob": 0.020389242097735405}, {"id": 567, "seek": 342128, "start": 3421.28, "end": 3425.44, "text": " doctor Juan Jot, es un vector que tiene tama\u00f1o de 10 mil pero hay un solo uno, son todos", "tokens": [50364, 4631, 17064, 508, 310, 11, 785, 517, 8062, 631, 7066, 45342, 7716, 368, 1266, 1962, 4768, 4842, 517, 6944, 8526, 11, 1872, 6321, 50572], "temperature": 0.0, "avg_logprob": -0.5266514587402343, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.06798595190048218}, {"id": 568, "seek": 342128, "start": 3425.44, "end": 3431.88, "text": " zeros y uno, entonces a la C-block tome queda exclusivamente la fila que representa la", "tokens": [50572, 35193, 288, 8526, 11, 13003, 257, 635, 383, 12, 28830, 281, 1398, 23314, 15085, 23957, 635, 1387, 64, 631, 49823, 635, 50894], "temperature": 0.0, "avg_logprob": -0.5266514587402343, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.06798595190048218}, {"id": 569, "seek": 342128, "start": 3431.88, "end": 3444.52, "text": " palabra que eso, bien entonces, con esto se le obra con, con esa t\u00e9cnica Urdembeddings,", "tokens": [50894, 31702, 631, 7287, 11, 3610, 13003, 11, 416, 7433, 369, 476, 22798, 416, 11, 416, 11342, 45411, 624, 7800, 443, 2883, 29432, 11, 51526], "temperature": 0.0, "avg_logprob": -0.5266514587402343, "compression_ratio": 1.440217391304348, "no_speech_prob": 0.06798595190048218}, {"id": 570, "seek": 344452, "start": 3444.72, "end": 3455.08, "text": " no, el resultado de la copa oculta, se lo pasas en esta t\u00e9cnica por lo menos, le pasas,", "tokens": [50374, 572, 11, 806, 28047, 368, 635, 2971, 64, 10409, 723, 64, 11, 369, 450, 1736, 296, 465, 5283, 45411, 1515, 450, 8902, 11, 476, 1736, 296, 11, 50892], "temperature": 0.0, "avg_logprob": -0.38881039169599424, "compression_ratio": 1.8, "no_speech_prob": 0.1486569046974182}, {"id": 571, "seek": 344452, "start": 3455.08, "end": 3459.52, "text": " a la copa oculta a otros pesos que van a ir a la salida y esos pesos son lo que calculan", "tokens": [50892, 257, 635, 2971, 64, 10409, 723, 64, 257, 16422, 33204, 631, 3161, 257, 3418, 257, 635, 1845, 2887, 288, 22411, 33204, 1872, 450, 631, 4322, 282, 51114], "temperature": 0.0, "avg_logprob": -0.38881039169599424, "compression_ratio": 1.8, "no_speech_prob": 0.1486569046974182}, {"id": 572, "seek": 344452, "start": 3459.52, "end": 3464.8, "text": " la probabilidad de salida pero en realidad despu\u00e9s estos pesos que aparecen despu\u00e9s no me importa,", "tokens": [51114, 635, 31959, 4580, 368, 1845, 2887, 4768, 465, 25635, 15283, 12585, 33204, 631, 15004, 13037, 15283, 572, 385, 33218, 11, 51378], "temperature": 0.0, "avg_logprob": -0.38881039169599424, "compression_ratio": 1.8, "no_speech_prob": 0.1486569046974182}, {"id": 573, "seek": 344452, "start": 3464.8, "end": 3469.08, "text": " o sea despu\u00e9s de que yo termino entrenar todo, la \u00fanica capa con la que voy a quedar con", "tokens": [51378, 277, 4158, 15283, 368, 631, 5290, 1433, 2982, 45069, 289, 5149, 11, 635, 30104, 1410, 64, 416, 635, 631, 7552, 257, 39244, 416, 51592], "temperature": 0.0, "avg_logprob": -0.38881039169599424, "compression_ratio": 1.8, "no_speech_prob": 0.1486569046974182}, {"id": 574, "seek": 346908, "start": 3469.08, "end": 3473.72, "text": " la del medio que es la que me interesaba entrenar, el resto es como una especie de escusa que se", "tokens": [50364, 635, 1103, 22123, 631, 785, 635, 631, 385, 20157, 5509, 45069, 289, 11, 806, 28247, 785, 2617, 2002, 49368, 368, 4721, 20318, 631, 369, 50596], "temperature": 0.0, "avg_logprob": -0.28708630879720054, "compression_ratio": 1.5815217391304348, "no_speech_prob": 0.05413970351219177}, {"id": 575, "seek": 346908, "start": 3473.72, "end": 3481.84, "text": " usa para la estataria para poder encontrar la capa del medio, la salida tiene C por 10 mil que", "tokens": [50596, 29909, 1690, 635, 30883, 9831, 1690, 8152, 17525, 635, 1410, 64, 1103, 22123, 11, 635, 1845, 2887, 7066, 383, 1515, 1266, 1962, 631, 51002], "temperature": 0.0, "avg_logprob": -0.28708630879720054, "compression_ratio": 1.5815217391304348, "no_speech_prob": 0.05413970351219177}, {"id": 576, "seek": 346908, "start": 3481.84, "end": 3487.16, "text": " significa yo estoy prediciendo cu\u00e1l es la probabilidad en todas las C palabras de contexto de capa", "tokens": [51002, 19957, 5290, 15796, 47336, 7304, 44318, 785, 635, 31959, 4580, 465, 10906, 2439, 383, 35240, 368, 47685, 368, 1410, 64, 51268], "temperature": 0.0, "avg_logprob": -0.28708630879720054, "compression_ratio": 1.5815217391304348, "no_speech_prob": 0.05413970351219177}, {"id": 577, "seek": 348716, "start": 3487.24, "end": 3497.3599999999997, "text": " parece alguna palabra, bien entonces le hicimos, logramos nuestro objetivo que era decir que", "tokens": [50368, 14120, 20651, 31702, 11, 3610, 13003, 476, 23697, 8372, 11, 31013, 2151, 14726, 29809, 631, 4249, 10235, 631, 50874], "temperature": 0.0, "avg_logprob": -0.36064785473967254, "compression_ratio": 1.8523489932885906, "no_speech_prob": 0.14324374496936798}, {"id": 578, "seek": 348716, "start": 3497.3599999999997, "end": 3504.08, "text": " hago que puedo asociar a una palabra a un string un vector de valores reales, no, entonces tengo", "tokens": [50874, 38721, 631, 21612, 382, 78, 537, 289, 257, 2002, 31702, 257, 517, 6798, 517, 8062, 368, 38790, 957, 279, 11, 572, 11, 13003, 13989, 51210], "temperature": 0.0, "avg_logprob": -0.36064785473967254, "compression_ratio": 1.8523489932885906, "no_speech_prob": 0.14324374496936798}, {"id": 579, "seek": 348716, "start": 3504.08, "end": 3510.16, "text": " la palabra perro y me va a dar un vector de valores reales, la palabra comer y me va a", "tokens": [51210, 635, 31702, 680, 340, 288, 385, 2773, 257, 4072, 517, 8062, 368, 38790, 957, 279, 11, 635, 31702, 16510, 288, 385, 2773, 257, 51514], "temperature": 0.0, "avg_logprob": -0.36064785473967254, "compression_ratio": 1.8523489932885906, "no_speech_prob": 0.14324374496936798}, {"id": 580, "seek": 351016, "start": 3510.16, "end": 3517.3599999999997, "text": " dar otro vector de valores reales, etc\u00e9tera, adem\u00e1s se cumple que los vectores cuanto m\u00e1s cercanos", "tokens": [50364, 4072, 11921, 8062, 368, 38790, 957, 279, 11, 5183, 526, 23833, 11, 21251, 369, 12713, 781, 631, 1750, 1241, 349, 2706, 36685, 3573, 36099, 31035, 50724], "temperature": 0.0, "avg_logprob": -0.43954437009749875, "compression_ratio": 1.7054545454545456, "no_speech_prob": 0.1281365007162094}, {"id": 581, "seek": 351016, "start": 3517.3599999999997, "end": 3522.16, "text": " est\u00e1n en ese espacio de dimension 300, entonces significa las palabras son m\u00e1s similares en alg\u00fan", "tokens": [50724, 10368, 465, 10167, 33845, 368, 10139, 6641, 11, 13003, 19957, 2439, 35240, 1872, 3573, 1034, 7371, 495, 465, 26300, 50964], "temperature": 0.0, "avg_logprob": -0.43954437009749875, "compression_ratio": 1.7054545454545456, "no_speech_prob": 0.1281365007162094}, {"id": 582, "seek": 351016, "start": 3522.16, "end": 3529.16, "text": " sentido, o si est\u00e1n m\u00e1s lejanos, entonces son m\u00e1s dec\u00edmiles, puedo utilizar, por ejemplo,", "tokens": [50964, 19850, 11, 277, 1511, 10368, 3573, 476, 73, 31035, 11, 13003, 1872, 3573, 979, 14569, 4680, 11, 21612, 24060, 11, 1515, 13358, 11, 51314], "temperature": 0.0, "avg_logprob": -0.43954437009749875, "compression_ratio": 1.7054545454545456, "no_speech_prob": 0.1281365007162094}, {"id": 583, "seek": 351016, "start": 3529.16, "end": 3532.66, "text": " la similidad, similaridad coseno, para eso si yo cariculen el coseno del \u00e1ngulo del", "tokens": [51314, 635, 1034, 388, 4580, 11, 1034, 388, 289, 4580, 3792, 5808, 11, 1690, 7287, 1511, 5290, 1032, 72, 2444, 268, 806, 3792, 5808, 1103, 7352, 37308, 1103, 51489], "temperature": 0.0, "avg_logprob": -0.43954437009749875, "compression_ratio": 1.7054545454545456, "no_speech_prob": 0.1281365007162094}, {"id": 584, "seek": 351016, "start": 3532.66, "end": 3536.44, "text": " doctor de doctor es eso es una buena medida para saber qu\u00e9 tan parecidos son o incluso", "tokens": [51489, 4631, 368, 4631, 785, 7287, 785, 2002, 25710, 32984, 1690, 12489, 8057, 7603, 7448, 46579, 1872, 277, 24018, 51678], "temperature": 0.0, "avg_logprob": -0.43954437009749875, "compression_ratio": 1.7054545454545456, "no_speech_prob": 0.1281365007162094}, {"id": 585, "seek": 353644, "start": 3536.48, "end": 3540.2400000000002, "text": " usa la distancia utilidad tambi\u00e9n para calcular eso, pero la similaridad coseno es la que", "tokens": [50366, 29909, 635, 1483, 22862, 4976, 4580, 6407, 1690, 2104, 17792, 7287, 11, 4768, 635, 1034, 388, 289, 4580, 3792, 5808, 785, 635, 631, 50554], "temperature": 0.0, "avg_logprob": -0.30851702854551116, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.05619167909026146}, {"id": 586, "seek": 353644, "start": 3540.2400000000002, "end": 3546.6, "text": " m\u00e1s se usa y adem\u00e1s de que tiene esa propiedad de que las palabras m\u00e1s cercanas son", "tokens": [50554, 3573, 369, 29909, 288, 21251, 368, 631, 7066, 11342, 2365, 1091, 345, 368, 631, 2439, 35240, 3573, 36099, 14292, 1872, 50872], "temperature": 0.0, "avg_logprob": -0.30851702854551116, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.05619167909026146}, {"id": 587, "seek": 353644, "start": 3546.6, "end": 3553.84, "text": " m\u00e1s parecidas, ya alguna manera estas t\u00e9cnicas descubren cosas interesantes que uno no", "tokens": [50872, 3573, 7448, 66, 11382, 11, 2478, 20651, 13913, 13897, 25564, 40672, 32592, 1095, 12218, 20157, 9327, 631, 8526, 572, 51234], "temperature": 0.0, "avg_logprob": -0.30851702854551116, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.05619167909026146}, {"id": 588, "seek": 353644, "start": 3553.84, "end": 3558.76, "text": " es la centreno para que las descubran digamos sino que aparecen como de japa y aparecen cosas", "tokens": [51234, 785, 635, 1489, 1095, 78, 1690, 631, 2439, 32592, 4257, 36430, 18108, 631, 15004, 13037, 2617, 368, 361, 7961, 288, 15004, 13037, 12218, 51480], "temperature": 0.0, "avg_logprob": -0.30851702854551116, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.05619167909026146}, {"id": 589, "seek": 353644, "start": 3558.76, "end": 3562.28, "text": " como que por ejemplo yo puedo hacer operaciones entre los sectores, entonces si yo tengo el", "tokens": [51480, 2617, 631, 1515, 13358, 5290, 21612, 6720, 2208, 9188, 3962, 1750, 22610, 2706, 11, 13003, 1511, 5290, 13989, 806, 51656], "temperature": 0.0, "avg_logprob": -0.30851702854551116, "compression_ratio": 1.772549019607843, "no_speech_prob": 0.05619167909026146}, {"id": 590, "seek": 356228, "start": 3562.28, "end": 3566.1200000000003, "text": " lector de rey y le resto el lector de hombre y le sumo el lector de mujer me queda el", "tokens": [50364, 476, 1672, 368, 319, 88, 288, 476, 28247, 806, 476, 1672, 368, 26102, 288, 476, 2408, 78, 806, 476, 1672, 368, 32032, 385, 23314, 806, 50556], "temperature": 0.0, "avg_logprob": -0.46377844559518916, "compression_ratio": 1.9598214285714286, "no_speech_prob": 0.14396372437477112}, {"id": 591, "seek": 356228, "start": 3566.1200000000003, "end": 3570.6800000000003, "text": " lector de rey y eso es una propiedad que aparece despu\u00e9s de que yo entre los sectores", "tokens": [50556, 476, 1672, 368, 319, 88, 288, 7287, 785, 2002, 2365, 1091, 345, 631, 37863, 15283, 368, 631, 5290, 3962, 1750, 22610, 2706, 50784], "temperature": 0.0, "avg_logprob": -0.46377844559518916, "compression_ratio": 1.9598214285714286, "no_speech_prob": 0.14396372437477112}, {"id": 592, "seek": 356228, "start": 3570.6800000000003, "end": 3579.0800000000004, "text": " suele ser a la idea de estas colecciones del lector es que haga el lector de mujer le resto de", "tokens": [50784, 459, 16884, 816, 257, 635, 1558, 368, 13897, 45139, 35560, 1103, 476, 1672, 785, 631, 46726, 806, 476, 1672, 368, 32032, 476, 28247, 368, 51204], "temperature": 0.0, "avg_logprob": -0.46377844559518916, "compression_ratio": 1.9598214285714286, "no_speech_prob": 0.14396372437477112}, {"id": 593, "seek": 356228, "start": 3579.0800000000004, "end": 3583.0, "text": " hombre y le sumo rey y me queda rey, o haga el lector de uruguay, le arrega un", "tokens": [51204, 26102, 288, 476, 2408, 78, 319, 88, 288, 385, 23314, 319, 88, 11, 277, 46726, 806, 476, 1672, 368, 4038, 13705, 320, 11, 476, 594, 3375, 64, 517, 51400], "temperature": 0.0, "avg_logprob": -0.46377844559518916, "compression_ratio": 1.9598214285714286, "no_speech_prob": 0.14396372437477112}, {"id": 594, "seek": 356228, "start": 3583.0, "end": 3588.2400000000002, "text": " TV, le sumo Francia me da paris, entonces ah\u00ed en un caso estoy haciendo una transformaci\u00f3n", "tokens": [51400, 3558, 11, 476, 2408, 78, 17288, 2755, 385, 1120, 971, 271, 11, 13003, 12571, 465, 517, 9666, 15796, 20509, 2002, 4088, 3482, 51662], "temperature": 0.0, "avg_logprob": -0.46377844559518916, "compression_ratio": 1.9598214285714286, "no_speech_prob": 0.14396372437477112}, {"id": 595, "seek": 358824, "start": 3588.24, "end": 3593.24, "text": " en un poco morphol\u00f3gica decir bueno este hombre es a mujer como rey esa reina y", "tokens": [50364, 465, 517, 10639, 25778, 27629, 2262, 10235, 11974, 4065, 26102, 785, 257, 32032, 2617, 319, 88, 11342, 319, 1426, 288, 50614], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 596, "seek": 358824, "start": 3593.24, "end": 3596.68, "text": " no estoy haciendo una transformaci\u00f3n m\u00e1s sem\u00e1ntica como decir en la capital de uruguay", "tokens": [50614, 572, 15796, 20509, 2002, 4088, 3482, 3573, 4361, 27525, 2262, 2617, 10235, 465, 635, 4238, 368, 4038, 13705, 320, 50786], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 597, "seek": 358824, "start": 3596.68, "end": 3601.16, "text": " en un TV, la capital de Francia Par\u00eds y a alguna forma yo nunca le dije al sistema que", "tokens": [50786, 465, 517, 3558, 11, 635, 4238, 368, 17288, 2755, 3457, 5113, 288, 257, 20651, 8366, 5290, 13768, 476, 39414, 419, 13245, 631, 51010], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 598, "seek": 358824, "start": 3601.16, "end": 3605.68, "text": " tiene que aprender eso pero por la forma que aqu\u00ed han creado los sectores suelen tener", "tokens": [51010, 7066, 631, 24916, 7287, 4768, 1515, 635, 8366, 631, 6661, 7276, 1197, 1573, 1750, 22610, 2706, 459, 14818, 11640, 51236], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 599, "seek": 358824, "start": 3605.68, "end": 3611.52, "text": " propiedad de este estilo, bien eso fue como lo primero sorprendente que encontraba una", "tokens": [51236, 2365, 1091, 345, 368, 4065, 37470, 11, 3610, 7287, 9248, 2617, 450, 21289, 9359, 32725, 1576, 631, 43621, 4231, 2002, 51528], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 600, "seek": 358824, "start": 3611.52, "end": 3617.12, "text": " cerca de estos metos que se pueden como que derreg\u00f3 de aprender esas cosas pero no est\u00e1n", "tokens": [51528, 26770, 368, 12585, 1131, 329, 631, 369, 14714, 2617, 631, 1163, 3375, 812, 368, 24916, 23388, 12218, 4768, 572, 10368, 51808], "temperature": 0.0, "avg_logprob": -0.39289929973545357, "compression_ratio": 1.7350993377483444, "no_speech_prob": 0.1164584532380104}, {"id": 601, "seek": 361712, "start": 3617.12, "end": 3621.64, "text": " acceptos de problemas, como por ejemplo si yo tengo una palabra la palabra vela voy a tener", "tokens": [50364, 3241, 329, 368, 20720, 11, 2617, 1515, 13358, 1511, 5290, 13989, 2002, 31702, 635, 31702, 14610, 64, 7552, 257, 11640, 50590], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 602, "seek": 361712, "start": 3621.64, "end": 3625.48, "text": " un solo vector que representa la palabra vela y vela es una palabra que es a m\u00ed bueno", "tokens": [50590, 517, 6944, 8062, 631, 49823, 635, 31702, 14610, 64, 288, 14610, 64, 785, 2002, 31702, 631, 785, 257, 14692, 11974, 50782], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 603, "seek": 361712, "start": 3625.48, "end": 3632.68, "text": " o sea es polic\u00e9mica yo puedo tener una vela para aprender una vela de la velita de", "tokens": [50782, 277, 4158, 785, 1180, 299, 4011, 2262, 5290, 21612, 11640, 2002, 14610, 64, 1690, 24916, 2002, 14610, 64, 368, 635, 14610, 2786, 368, 51142], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 604, "seek": 361712, "start": 3632.68, "end": 3637.3199999999997, "text": " cumplea a\u00f1os o sea una pag\u00f3n o puedo tener un barco a vela y bueno en los dos casos tengo", "tokens": [51142, 12713, 781, 64, 11424, 277, 4158, 2002, 11812, 1801, 277, 21612, 11640, 517, 2159, 1291, 257, 14610, 64, 288, 11974, 465, 1750, 4491, 25135, 13989, 51374], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 605, "seek": 361712, "start": 3637.3199999999997, "end": 3641.3599999999997, "text": " la misma representaci\u00f3n o el gato hidr\u00e1ulico y el gato animal tambi\u00e9n tengo la misma", "tokens": [51374, 635, 24946, 2906, 3482, 277, 806, 290, 2513, 16253, 30218, 425, 2789, 288, 806, 290, 2513, 5496, 6407, 13989, 635, 24946, 51576], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 606, "seek": 361712, "start": 3641.3599999999997, "end": 3646.52, "text": " representaci\u00f3n el banco de sentarse y el banco de financiero tambi\u00e9n con la misma representaci\u00f3n", "tokens": [51576, 2906, 3482, 806, 45498, 368, 2279, 11668, 288, 806, 45498, 368, 24323, 2032, 6407, 416, 635, 24946, 2906, 3482, 51834], "temperature": 0.0, "avg_logprob": -0.33293033653581644, "compression_ratio": 2.10077519379845, "no_speech_prob": 0.23084190487861633}, {"id": 607, "seek": 364652, "start": 3646.52, "end": 3650.88, "text": " etc\u00e9tera entonces eso es un problema y bien estos estas t\u00e9cnicas y es que yo no tengo", "tokens": [50364, 5183, 526, 23833, 13003, 7287, 785, 517, 12395, 288, 3610, 12585, 13897, 25564, 40672, 288, 785, 631, 5290, 572, 13989, 50582], "temperature": 0.0, "avg_logprob": -0.45929343483664775, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.02635650709271431}, {"id": 608, "seek": 364652, "start": 3650.88, "end": 3655.84, "text": " digamos no estoy usando por ejemplo guarnet que vienen guarnet a su una acci\u00f3n es clase no", "tokens": [50582, 36430, 572, 15796, 29798, 1515, 13358, 695, 1083, 302, 631, 49298, 695, 1083, 302, 257, 459, 2002, 696, 5687, 785, 44578, 572, 50830], "temperature": 0.0, "avg_logprob": -0.45929343483664775, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.02635650709271431}, {"id": 609, "seek": 364652, "start": 3655.84, "end": 3660.84, "text": " no tengo un repositorio significado de guarnet que me ayud\u00e9 a decir cu\u00e1les cual sino que ac\u00e1", "tokens": [50830, 572, 13989, 517, 1085, 329, 3029, 1004, 3350, 1573, 368, 695, 1083, 302, 631, 385, 20333, 526, 257, 10235, 2702, 842, 904, 10911, 18108, 631, 23496, 51080], "temperature": 0.0, "avg_logprob": -0.45929343483664775, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.02635650709271431}, {"id": 610, "seek": 364652, "start": 3660.84, "end": 3668.84, "text": " solamente tengo un representante para cada palabra bien y bueno esta t\u00e9cnica tiene ese", "tokens": [51080, 27814, 13989, 517, 2906, 2879, 1690, 8411, 31702, 3610, 288, 11974, 5283, 45411, 7066, 10167, 51480], "temperature": 0.0, "avg_logprob": -0.45929343483664775, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.02635650709271431}, {"id": 611, "seek": 364652, "start": 3668.84, "end": 3672.2, "text": " problema despu\u00e9s hay otras t\u00e9cnicas me permiten crear vectores contextuales que", "tokens": [51480, 12395, 15283, 4842, 20244, 25564, 40672, 385, 13423, 268, 31984, 8062, 279, 35526, 279, 631, 51648], "temperature": 0.0, "avg_logprob": -0.45929343483664775, "compression_ratio": 1.7588932806324111, "no_speech_prob": 0.02635650709271431}, {"id": 612, "seek": 367220, "start": 3672.3999999999996, "end": 3679.2, "text": " bueno es la palabra gato en esta oraci\u00f3n donde probablemente sea un gato animal y no un gato hidr\u00e1ulico", "tokens": [50374, 11974, 785, 635, 31702, 290, 2513, 465, 5283, 420, 3482, 10488, 21759, 4082, 4158, 517, 290, 2513, 5496, 288, 572, 517, 290, 2513, 16253, 30218, 425, 2789, 50714], "temperature": 0.0, "avg_logprob": -0.340077744316809, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.06272925436496735}, {"id": 613, "seek": 367220, "start": 3679.2, "end": 3687.72, "text": " cosas as\u00ed bien entonces una vez que construimos esta colecci\u00f3n de vectores como los", "tokens": [50714, 12218, 8582, 3610, 13003, 2002, 5715, 631, 12946, 8372, 5283, 45139, 14735, 368, 8062, 279, 2617, 1750, 51140], "temperature": 0.0, "avg_logprob": -0.340077744316809, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.06272925436496735}, {"id": 614, "seek": 367220, "start": 3687.72, "end": 3692.8399999999997, "text": " evaluamos c\u00f3mo sabemos si est\u00e1n bien bueno hay como dos formas de evaluarlos bastante comunes", "tokens": [51140, 6133, 2151, 12826, 27200, 1511, 10368, 3610, 11974, 4842, 2617, 4491, 33463, 368, 6133, 39734, 14651, 11040, 279, 51396], "temperature": 0.0, "avg_logprob": -0.340077744316809, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.06272925436496735}, {"id": 615, "seek": 367220, "start": 3692.8399999999997, "end": 3698.72, "text": " se habla de test intr\u00ednsecos y test en extr\u00ednsecos que significan cosas distintas intr\u00ednsecos", "tokens": [51396, 369, 42135, 368, 1500, 17467, 10973, 8159, 329, 288, 1500, 465, 16455, 10973, 8159, 329, 631, 3350, 282, 12218, 31489, 296, 17467, 10973, 8159, 329, 51690], "temperature": 0.0, "avg_logprob": -0.340077744316809, "compression_ratio": 1.7142857142857142, "no_speech_prob": 0.06272925436496735}, {"id": 616, "seek": 369872, "start": 3698.72, "end": 3705.3999999999996, "text": " significa yo mido propiedad es del conjunto de vectores que constru\u00ed entonces una de las que se", "tokens": [50364, 19957, 5290, 275, 2925, 2365, 1091, 345, 785, 1103, 37776, 368, 8062, 279, 631, 12946, 870, 13003, 2002, 368, 2439, 631, 369, 50698], "temperature": 0.0, "avg_logprob": -0.36911144662410655, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06526684015989304}, {"id": 617, "seek": 369872, "start": 3705.3999999999996, "end": 3711.64, "text": " mide en es exactamente lo que dec\u00eda no reci\u00e9n med\u00edamos que aparece una propia que es que yo", "tokens": [50698, 275, 482, 465, 785, 48686, 450, 631, 37599, 572, 4214, 3516, 1205, 16275, 631, 37863, 2002, 40464, 631, 785, 631, 5290, 51010], "temperature": 0.0, "avg_logprob": -0.36911144662410655, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06526684015989304}, {"id": 618, "seek": 369872, "start": 3711.64, "end": 3717.2799999999997, "text": " puedo hacer dibujar como una especie para el logramos en el cual digo que hombres a mujer como", "tokens": [51010, 21612, 6720, 46621, 289, 2617, 2002, 49368, 1690, 806, 3565, 30227, 465, 806, 10911, 22990, 631, 37988, 257, 32032, 2617, 51292], "temperature": 0.0, "avg_logprob": -0.36911144662410655, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06526684015989304}, {"id": 619, "seek": 369872, "start": 3717.2799999999997, "end": 3723.52, "text": " rey esa y espero que en mi colecci\u00f3n de vectores haya quedado reina digamos como resultado", "tokens": [51292, 319, 88, 11342, 288, 26823, 631, 465, 2752, 45139, 14735, 368, 8062, 279, 24693, 13617, 1573, 319, 1426, 36430, 2617, 28047, 51604], "temperature": 0.0, "avg_logprob": -0.36911144662410655, "compression_ratio": 1.726027397260274, "no_speech_prob": 0.06526684015989304}, {"id": 620, "seek": 372352, "start": 3723.52, "end": 3728.8, "text": " de la operaci\u00f3n o uruguay esa montevideo como Francia y espero que haya quedado paris en", "tokens": [50364, 368, 635, 2208, 3482, 277, 4038, 13705, 320, 11342, 8143, 13379, 24589, 2617, 17288, 2755, 288, 26823, 631, 24693, 13617, 1573, 971, 271, 465, 50628], "temperature": 0.0, "avg_logprob": -0.43060563739977387, "compression_ratio": 1.8393574297188755, "no_speech_prob": 0.11879339069128036}, {"id": 621, "seek": 372352, "start": 3728.8, "end": 3735.44, "text": " ese lugar entonces bueno una forma de evaluar estos estos sistemas es construir una colecci\u00f3n grande", "tokens": [50628, 10167, 11467, 13003, 11974, 2002, 8366, 368, 6133, 289, 12585, 12585, 48720, 785, 38445, 2002, 45139, 14735, 8883, 50960], "temperature": 0.0, "avg_logprob": -0.43060563739977387, "compression_ratio": 1.8393574297188755, "no_speech_prob": 0.11879339069128036}, {"id": 622, "seek": 372352, "start": 3735.44, "end": 3741.68, "text": " de estos test se llaman test de analog\u00edas entonces me puedo hacer una colecci\u00f3n de grandes", "tokens": [50960, 368, 12585, 1500, 369, 16848, 282, 1500, 368, 2624, 664, 10025, 13003, 385, 21612, 6720, 2002, 45139, 14735, 368, 16640, 51272], "temperature": 0.0, "avg_logprob": -0.43060563739977387, "compression_ratio": 1.8393574297188755, "no_speech_prob": 0.11879339069128036}, {"id": 623, "seek": 372352, "start": 3741.68, "end": 3745.68, "text": " estos test y ver a cu\u00e1ntos le moca mi colecci\u00f3n entonces tengo varias colecciones en", "tokens": [51272, 12585, 1500, 288, 1306, 257, 44256, 329, 476, 705, 496, 2752, 45139, 14735, 13003, 13989, 37496, 45139, 35560, 465, 51472], "temperature": 0.0, "avg_logprob": -0.43060563739977387, "compression_ratio": 1.8393574297188755, "no_speech_prob": 0.11879339069128036}, {"id": 624, "seek": 372352, "start": 3745.68, "end": 3751.44, "text": " ve distinta veo que este le invoco m\u00e1s veces y de lo invoco menos veces otros son los", "tokens": [51472, 1241, 1483, 16071, 41319, 631, 4065, 476, 1048, 11198, 3573, 17054, 288, 368, 450, 1048, 11198, 8902, 17054, 16422, 1872, 1750, 51760], "temperature": 0.0, "avg_logprob": -0.43060563739977387, "compression_ratio": 1.8393574297188755, "no_speech_prob": 0.11879339069128036}, {"id": 625, "seek": 375144, "start": 3751.44, "end": 3758.2000000000003, "text": " tests de similitud o similiaridad que estos se hacen con intervenci\u00f3n humana un poco m\u00e1s fuerte que", "tokens": [50364, 6921, 368, 1034, 388, 21875, 277, 1034, 4600, 4580, 631, 12585, 369, 27434, 416, 17104, 5687, 1952, 64, 517, 10639, 3573, 37129, 631, 50702], "temperature": 0.0, "avg_logprob": -0.32765276569965457, "compression_ratio": 1.871212121212121, "no_speech_prob": 0.1353381723165512}, {"id": 626, "seek": 375144, "start": 3758.2000000000003, "end": 3763.7000000000003, "text": " es preguntarlo un mont\u00f3n de personas por ejemplo que es m\u00e1s parecido a Honduras no una silla o una", "tokens": [50702, 785, 19860, 19457, 517, 45259, 368, 12019, 1515, 13358, 631, 785, 3573, 7448, 17994, 257, 45260, 12907, 572, 2002, 262, 5291, 277, 2002, 50977], "temperature": 0.0, "avg_logprob": -0.32765276569965457, "compression_ratio": 1.871212121212121, "no_speech_prob": 0.1353381723165512}, {"id": 627, "seek": 375144, "start": 3763.7000000000003, "end": 3770.2400000000002, "text": " mesa o una manzana o una bestruso o cosas de estilo entonces dale dice en la gente trata de arranquear", "tokens": [50977, 37024, 277, 2002, 587, 89, 2095, 277, 2002, 1151, 81, 24431, 277, 12218, 368, 37470, 13003, 27326, 10313, 465, 635, 3788, 31920, 368, 50235, 1077, 289, 51304], "temperature": 0.0, "avg_logprob": -0.32765276569965457, "compression_ratio": 1.871212121212121, "no_speech_prob": 0.1353381723165512}, {"id": 628, "seek": 375144, "start": 3770.2400000000002, "end": 3774.44, "text": " esta cuatro cinco palabras de cu\u00e1l es m\u00e1s parecida menos parecida entonces le preguntaron", "tokens": [51304, 5283, 28795, 21350, 35240, 368, 44318, 785, 3573, 7448, 37200, 8902, 7448, 37200, 13003, 476, 19860, 6372, 51514], "temperature": 0.0, "avg_logprob": -0.32765276569965457, "compression_ratio": 1.871212121212121, "no_speech_prob": 0.1353381723165512}, {"id": 629, "seek": 375144, "start": 3774.44, "end": 3778.76, "text": " un mont\u00f3n de personas las personas hacen sus listas y despu\u00e9s miras dentro de tu colecci\u00f3n de", "tokens": [51514, 517, 45259, 368, 12019, 2439, 12019, 27434, 3291, 1329, 296, 288, 15283, 3149, 296, 10856, 368, 2604, 45139, 14735, 368, 51730], "temperature": 0.0, "avg_logprob": -0.32765276569965457, "compression_ratio": 1.871212121212121, "no_speech_prob": 0.1353381723165512}, {"id": 630, "seek": 377876, "start": 3778.76, "end": 3783.82, "text": " vectores si las distancias regrativas entre esas palabras son similares o no a la que esperaban los humanos", "tokens": [50364, 1241, 349, 2706, 1511, 2439, 1483, 282, 12046, 1121, 4481, 24759, 3962, 23388, 35240, 1872, 1034, 7371, 495, 277, 572, 257, 635, 631, 10045, 18165, 1750, 34555, 50617], "temperature": 0.0, "avg_logprob": -0.4260668653122922, "compression_ratio": 1.8913857677902621, "no_speech_prob": 0.02981717512011528}, {"id": 631, "seek": 377876, "start": 3783.82, "end": 3788.7400000000002, "text": " entonces cuanto m\u00e1s similares se hacen el test de espirman para eso el test de correlaci\u00f3n de", "tokens": [50617, 13003, 36685, 3573, 1034, 7371, 495, 369, 27434, 806, 1500, 368, 7089, 347, 1601, 1690, 7287, 806, 1500, 368, 13983, 3482, 368, 50863], "temperature": 0.0, "avg_logprob": -0.4260668653122922, "compression_ratio": 1.8913857677902621, "no_speech_prob": 0.02981717512011528}, {"id": 632, "seek": 377876, "start": 3788.7400000000002, "end": 3794.0600000000004, "text": " espirman se puede sacar una medida de qu\u00e9 tanto se parece a la intuici\u00f3n humana lo que el sistema", "tokens": [50863, 7089, 347, 1601, 369, 8919, 43823, 2002, 32984, 368, 8057, 10331, 369, 14120, 257, 635, 560, 84, 15534, 1952, 64, 450, 631, 806, 13245, 51129], "temperature": 0.0, "avg_logprob": -0.4260668653122922, "compression_ratio": 1.8913857677902621, "no_speech_prob": 0.02981717512011528}, {"id": 633, "seek": 377876, "start": 3794.0600000000004, "end": 3799.48, "text": " dice eso es la mont\u00e9s intr\u00ednsecos pues yo estoy abarrando en la colecci\u00f3n de vectores que constru\u00ed y", "tokens": [51129, 10313, 7287, 785, 635, 8143, 2191, 17467, 10973, 8159, 329, 11059, 5290, 15796, 410, 289, 19845, 465, 635, 45139, 14735, 368, 1241, 349, 2706, 631, 12946, 870, 288, 51400], "temperature": 0.0, "avg_logprob": -0.4260668653122922, "compression_ratio": 1.8913857677902621, "no_speech_prob": 0.02981717512011528}, {"id": 634, "seek": 377876, "start": 3799.48, "end": 3807.0400000000004, "text": " la estoy testiando sola los testes extr\u00ednsecos se refieren a agarro mi colecci\u00f3n de vectores y", "tokens": [51400, 635, 15796, 1500, 72, 1806, 34162, 1750, 1500, 279, 16455, 10973, 8159, 329, 369, 1895, 5695, 257, 623, 289, 340, 2752, 45139, 14735, 368, 1241, 349, 2706, 288, 51778], "temperature": 0.0, "avg_logprob": -0.4260668653122922, "compression_ratio": 1.8913857677902621, "no_speech_prob": 0.02981717512011528}, {"id": 635, "seek": 380704, "start": 3807.04, "end": 3811.32, "text": " la meto en una tarea de peleen en un poco m\u00e1s grande y veo que tal le va", "tokens": [50364, 635, 1131, 78, 465, 2002, 256, 35425, 368, 41615, 268, 465, 517, 10639, 3573, 8883, 288, 41319, 631, 4023, 476, 2773, 50578], "temperature": 0.0, "avg_logprob": -0.34054620856912726, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.1336166113615036}, {"id": 636, "seek": 380704, "start": 3811.32, "end": 3817.36, "text": " entonces ac\u00e1 significa bueno yo supongo que tengo un sistema de peleen que hace traducci\u00f3n", "tokens": [50578, 13003, 23496, 19957, 11974, 5290, 9331, 25729, 631, 13989, 517, 13245, 368, 41615, 268, 631, 10032, 2479, 1311, 5687, 50880], "temperature": 0.0, "avg_logprob": -0.34054620856912726, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.1336166113615036}, {"id": 637, "seek": 380704, "start": 3817.36, "end": 3822.56, "text": " autom\u00e1tica o analisis de sentimiento o recuperaci\u00f3n de informaci\u00f3n o un chat bot o lo que sea", "tokens": [50880, 3553, 23432, 277, 2624, 28436, 368, 2279, 14007, 277, 25692, 3482, 368, 21660, 277, 517, 5081, 10592, 277, 450, 631, 4158, 51140], "temperature": 0.0, "avg_logprob": -0.34054620856912726, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.1336166113615036}, {"id": 638, "seek": 380704, "start": 3823.56, "end": 3828.64, "text": " si yo tengo un sistema que ya funciona y le cambio su capa de medings su colecci\u00f3n de", "tokens": [51190, 1511, 5290, 13989, 517, 13245, 631, 2478, 26210, 288, 476, 28731, 459, 1410, 64, 368, 1205, 1109, 459, 45139, 14735, 368, 51444], "temperature": 0.0, "avg_logprob": -0.34054620856912726, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.1336166113615036}, {"id": 639, "seek": 380704, "start": 3828.64, "end": 3832.6, "text": " vectores por la m\u00eda que yo entren\u00e9 y el sistema mejora en superformas entonces digo que", "tokens": [51444, 1241, 349, 2706, 1515, 635, 275, 2686, 631, 5290, 45069, 526, 288, 806, 13245, 11479, 64, 465, 1687, 837, 296, 13003, 22990, 631, 51642], "temperature": 0.0, "avg_logprob": -0.34054620856912726, "compression_ratio": 1.7813765182186234, "no_speech_prob": 0.1336166113615036}, {"id": 640, "seek": 383260, "start": 3832.6, "end": 3837.68, "text": " puedo decir que mi colecci\u00f3n de vectores mejoro la performance esto es puedo decir que la colecci\u00f3n", "tokens": [50364, 21612, 10235, 631, 2752, 45139, 14735, 368, 1241, 349, 2706, 11479, 78, 635, 3389, 7433, 785, 21612, 10235, 631, 635, 45139, 14735, 50618], "temperature": 0.0, "avg_logprob": -0.343097592963547, "compression_ratio": 1.83206106870229, "no_speech_prob": 0.04540780931711197}, {"id": 641, "seek": 383260, "start": 3837.68, "end": 3842.68, "text": " de vectores buena eso de llamas test extr\u00ednsecos se ha no estoy probando directamente las propiedades", "tokens": [50618, 368, 1241, 349, 2706, 25710, 7287, 368, 16848, 296, 1500, 16455, 10973, 8159, 329, 369, 324, 572, 15796, 1239, 1806, 46230, 2439, 2365, 1091, 2977, 50868], "temperature": 0.0, "avg_logprob": -0.343097592963547, "compression_ratio": 1.83206106870229, "no_speech_prob": 0.04540780931711197}, {"id": 642, "seek": 383260, "start": 3842.68, "end": 3846.12, "text": " de los en vectores y no que estoy probando c\u00f3mo se comportan en un sistema m\u00e1s grande", "tokens": [50868, 368, 1750, 465, 1241, 349, 2706, 288, 572, 631, 15796, 1239, 1806, 12826, 369, 25883, 282, 465, 517, 13245, 3573, 8883, 51040], "temperature": 0.0, "avg_logprob": -0.343097592963547, "compression_ratio": 1.83206106870229, "no_speech_prob": 0.04540780931711197}, {"id": 643, "seek": 383260, "start": 3850.7599999999998, "end": 3855.92, "text": " bien entonces otra forma de evaluar esto m\u00e1s bien no creo que lleguen a ver nada porque", "tokens": [51272, 3610, 13003, 13623, 8366, 368, 6133, 289, 7433, 3573, 3610, 572, 14336, 631, 11234, 7801, 257, 1306, 8096, 4021, 51530], "temperature": 0.0, "avg_logprob": -0.343097592963547, "compression_ratio": 1.83206106870229, "no_speech_prob": 0.04540780931711197}, {"id": 644, "seek": 383260, "start": 3855.92, "end": 3860.7599999999998, "text": " est\u00e1 muy chiquito pero bueno vamos a mencionarlo es visualizar los en vectores recuerden que esto", "tokens": [51530, 3192, 5323, 417, 3221, 3528, 4768, 11974, 5295, 257, 37030, 19457, 785, 5056, 9736, 1750, 465, 1241, 349, 2706, 39092, 1556, 631, 7433, 51772], "temperature": 0.0, "avg_logprob": -0.343097592963547, "compression_ratio": 1.83206106870229, "no_speech_prob": 0.04540780931711197}, {"id": 645, "seek": 386076, "start": 3860.76, "end": 3866.8, "text": " ten\u00eda de dimensi\u00f3n 100, 350 que era una dimensi\u00f3n mucho m\u00e1s chica que el vocabulario", "tokens": [50364, 23718, 368, 5013, 694, 2560, 2319, 11, 18065, 631, 4249, 2002, 5013, 694, 2560, 9824, 3573, 417, 2262, 631, 806, 2329, 455, 1040, 1004, 50666], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 646, "seek": 386076, "start": 3868.0, "end": 3871.4, "text": " pero igual es una dimensi\u00f3n muy grande o sea los humanos podemos visualizar dos 3", "tokens": [50726, 4768, 10953, 785, 2002, 5013, 694, 2560, 5323, 8883, 277, 4158, 1750, 34555, 12234, 5056, 9736, 4491, 805, 50896], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 647, "seek": 386076, "start": 3871.4, "end": 3875.4, "text": " dimensiones a los humos m\u00e1s de eso ya nos mariamos y estos son vectores de 300", "tokens": [50896, 5013, 694, 5411, 257, 1750, 1484, 329, 3573, 368, 7287, 2478, 3269, 1849, 72, 2151, 288, 12585, 1872, 1241, 349, 2706, 368, 6641, 51096], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 648, "seek": 386076, "start": 3875.4, "end": 3879.84, "text": " dimensiones pero una forma de visualizar los es usar las t\u00e9cnicas de reducciones", "tokens": [51096, 5013, 694, 5411, 4768, 2002, 8366, 368, 5056, 9736, 1750, 785, 14745, 2439, 25564, 40672, 368, 2783, 35560, 51318], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 649, "seek": 386076, "start": 3879.84, "end": 3886.48, "text": " dimensionalidad por ejemplo PCR y TSNS son de las m\u00e1s comunes son t\u00e9cnicas que me permiten", "tokens": [51318, 5013, 694, 1966, 4580, 1515, 13358, 44022, 288, 314, 32481, 50, 1872, 368, 2439, 3573, 11040, 279, 1872, 25564, 40672, 631, 385, 13423, 268, 51650], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 650, "seek": 386076, "start": 3886.48, "end": 3890.44, "text": " agarrar 300 dimensiones y bajar las 2 para poder dibujarlo en un plano entonces ac\u00e1 no", "tokens": [51650, 623, 2284, 289, 6641, 5013, 694, 5411, 288, 23589, 289, 2439, 568, 1690, 8152, 46621, 19457, 465, 517, 40259, 13003, 23496, 572, 51848], "temperature": 0.0, "avg_logprob": -0.3560094766683512, "compression_ratio": 1.7542662116040955, "no_speech_prob": 0.06364255398511887}, {"id": 651, "seek": 389044, "start": 3890.52, "end": 3894.6, "text": " llegan a ver, estos son dos trabajos que hicimos en el grupo para distintos colecciones", "tokens": [50368, 11234, 282, 257, 1306, 11, 12585, 1872, 4491, 9618, 329, 631, 23697, 8372, 465, 806, 20190, 1690, 49337, 45139, 35560, 50572], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 652, "seek": 389044, "start": 3894.6, "end": 3898.84, "text": " de en veintis en distintos idiomas voy a arreglar esto as\u00ed s\u00ed queda", "tokens": [50572, 368, 465, 1241, 686, 271, 465, 49337, 18014, 7092, 7552, 257, 594, 3375, 2200, 7433, 8582, 8600, 23314, 50784], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 653, "seek": 389044, "start": 3899.84, "end": 3904.36, "text": " bien entonces en este tenemos un trabajo hecho para el espa\u00f1ol son vectores de", "tokens": [50834, 3610, 13003, 465, 4065, 9914, 517, 18099, 13064, 1690, 806, 31177, 1872, 1241, 349, 2706, 368, 51060], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 654, "seek": 389044, "start": 3904.36, "end": 3908.68, "text": " palabras en espa\u00f1ol y tal y no van a llegar a verlo lo que est\u00e1n ac\u00e1 porque se", "tokens": [51060, 35240, 465, 31177, 288, 4023, 288, 572, 3161, 257, 24892, 257, 1306, 752, 450, 631, 10368, 23496, 4021, 369, 51276], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 655, "seek": 389044, "start": 3908.68, "end": 3913.52, "text": " es muy chiquito pero por ejemplo ac\u00e1 aparece un claster de a\u00f1os que est\u00e1n todos juntos", "tokens": [51276, 785, 5323, 417, 3221, 3528, 4768, 1515, 13358, 23496, 37863, 517, 596, 296, 391, 368, 11424, 631, 10368, 6321, 33868, 51518], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 656, "seek": 389044, "start": 3914.52, "end": 3918.76, "text": " ac\u00e1 aparecen nombres de personas que est\u00e1n todos juntos abajo aparece en lugares pero", "tokens": [51568, 23496, 15004, 13037, 297, 29947, 368, 12019, 631, 10368, 6321, 33868, 30613, 37863, 465, 33105, 4768, 51780], "temperature": 0.0, "avg_logprob": -0.4595389017244665, "compression_ratio": 1.868421052631579, "no_speech_prob": 0.02288716845214367}, {"id": 657, "seek": 391876, "start": 3918.84, "end": 3923.96, "text": " Uruguay, Bolivia que aparecen como clasterizados todos juntos entonces es una espera que una", "tokens": [50368, 9533, 13705, 320, 11, 14331, 18503, 631, 15004, 13037, 2617, 596, 296, 391, 590, 4181, 6321, 33868, 13003, 785, 2002, 37862, 631, 2002, 50624], "temperature": 0.0, "avg_logprob": -0.35208021799723305, "compression_ratio": 1.829268292682927, "no_speech_prob": 0.030358275398612022}, {"id": 658, "seek": 391876, "start": 3923.96, "end": 3928.48, "text": " colecci\u00f3n de vectores que haya quedado bien entrenada aparecen como clasters con cosas que", "tokens": [50624, 45139, 14735, 368, 1241, 349, 2706, 631, 24693, 13617, 1573, 3610, 45069, 1538, 15004, 13037, 2617, 596, 296, 1559, 416, 12218, 631, 50850], "temperature": 0.0, "avg_logprob": -0.35208021799723305, "compression_ratio": 1.829268292682927, "no_speech_prob": 0.030358275398612022}, {"id": 659, "seek": 391876, "start": 3928.48, "end": 3933.0800000000004, "text": " son semanficamente similares y el trabajo de la derecha es un trabajo similares pero que est\u00e1", "tokens": [50850, 1872, 369, 1601, 1786, 3439, 1034, 7371, 495, 288, 806, 18099, 368, 635, 15969, 4413, 785, 517, 18099, 1034, 7371, 495, 4768, 631, 3192, 51080], "temperature": 0.0, "avg_logprob": -0.35208021799723305, "compression_ratio": 1.829268292682927, "no_speech_prob": 0.030358275398612022}, {"id": 660, "seek": 391876, "start": 3933.0800000000004, "end": 3937.32, "text": " yo para igual a ni y bueno ya que se ve tambi\u00e9n m\u00e1s claro que aparecen cosas como", "tokens": [51080, 5290, 1690, 10953, 257, 3867, 288, 11974, 2478, 631, 369, 1241, 6407, 3573, 16742, 631, 15004, 13037, 12218, 2617, 51292], "temperature": 0.0, "avg_logprob": -0.35208021799723305, "compression_ratio": 1.829268292682927, "no_speech_prob": 0.030358275398612022}, {"id": 661, "seek": 391876, "start": 3937.32, "end": 3944.0400000000004, "text": " relacionadas con fechas est\u00e1n enero las relacionadas con colores est\u00e1n en encian las", "tokens": [51292, 27189, 6872, 416, 579, 41299, 10368, 465, 2032, 2439, 27189, 6872, 416, 1173, 2706, 10368, 465, 465, 537, 282, 2439, 51628], "temperature": 0.0, "avg_logprob": -0.35208021799723305, "compression_ratio": 1.829268292682927, "no_speech_prob": 0.030358275398612022}, {"id": 662, "seek": 394404, "start": 3944.04, "end": 3953.6, "text": " relacionadas con no se bien que hay a animales est\u00e1n en verde etc\u00e9tera pa\u00edses est\u00e1n en azul", "tokens": [50364, 27189, 6872, 416, 572, 369, 3610, 631, 4842, 257, 45102, 10368, 465, 29653, 5183, 526, 23833, 23070, 10368, 465, 39580, 50842], "temperature": 0.0, "avg_logprob": -0.4501648373074002, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.01965745911002159}, {"id": 663, "seek": 394404, "start": 3953.6, "end": 3958.04, "text": " etc\u00e9tera como que no puede estar en esas regiones obviamente esto no es perfecto en", "tokens": [50842, 5183, 526, 23833, 2617, 631, 572, 8919, 8755, 465, 23388, 4458, 279, 36325, 7433, 572, 785, 2176, 78, 465, 51064], "temperature": 0.0, "avg_logprob": -0.4501648373074002, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.01965745911002159}, {"id": 664, "seek": 394404, "start": 3958.04, "end": 3962.8, "text": " a que algunas cosas por fuera etc\u00e9tera pero si uno logra ver que m\u00e1s o menos se", "tokens": [51064, 257, 631, 27316, 12218, 1515, 24818, 5183, 526, 23833, 4768, 1511, 8526, 3565, 424, 1306, 631, 3573, 277, 8902, 369, 51302], "temperature": 0.0, "avg_logprob": -0.4501648373074002, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.01965745911002159}, {"id": 665, "seek": 394404, "start": 3962.8, "end": 3966.88, "text": " clasterizan entonces tiene como cierta cidadan tuici\u00f3n de que andan mejor y", "tokens": [51302, 596, 296, 391, 590, 282, 13003, 7066, 2617, 39769, 1328, 269, 4580, 282, 2604, 15534, 368, 631, 293, 282, 11479, 288, 51506], "temperature": 0.0, "avg_logprob": -0.4501648373074002, "compression_ratio": 1.6376811594202898, "no_speech_prob": 0.01965745911002159}, {"id": 666, "seek": 396688, "start": 3966.88, "end": 3977.92, "text": " sus efectores bien preguntas entonces los g\u00f3rden veings fueron en definitiva una de las", "tokens": [50364, 3291, 22565, 2706, 3610, 39722, 13003, 1750, 290, 15614, 1556, 1241, 1109, 28739, 465, 28781, 5931, 2002, 368, 2439, 50916], "temperature": 0.0, "avg_logprob": -0.4418991936577691, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.1375253051519394}, {"id": 667, "seek": 396688, "start": 3977.92, "end": 3983.28, "text": " primeras revoluciones que ocurrieron los \u00faltimos a\u00f1os lo cual es peleene y posible que despu\u00e9s", "tokens": [50916, 2886, 6985, 16908, 46649, 631, 26430, 7326, 266, 1750, 33013, 11424, 450, 10911, 785, 41615, 1450, 288, 26644, 631, 15283, 51184], "temperature": 0.0, "avg_logprob": -0.4418991936577691, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.1375253051519394}, {"id": 668, "seek": 396688, "start": 3983.28, "end": 3989.12, "text": " siempre empezaron a utilizar arquitecturas arredas m\u00e1s complejas o sea gracias a que tenemos en", "tokens": [51184, 12758, 18730, 6372, 257, 24060, 40258, 5739, 12907, 594, 986, 296, 3573, 44424, 19221, 277, 4158, 16611, 257, 631, 9914, 465, 51476], "temperature": 0.0, "avg_logprob": -0.4418991936577691, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.1375253051519394}, {"id": 669, "seek": 396688, "start": 3989.12, "end": 3993.6400000000003, "text": " medings y decimos puedo representar una palabra como un vector de 300 dimensiones ese vector de", "tokens": [51476, 1205, 1109, 288, 979, 8372, 21612, 2906, 289, 2002, 31702, 2617, 517, 8062, 368, 6641, 10139, 279, 10167, 8062, 368, 51702], "temperature": 0.0, "avg_logprob": -0.4418991936577691, "compression_ratio": 1.5661157024793388, "no_speech_prob": 0.1375253051519394}, {"id": 670, "seek": 399364, "start": 3993.64, "end": 3997.56, "text": " 300 dimensiones que son numeros reales se lo puedo enchufar como entrada a una red neuronal y", "tokens": [50364, 6641, 10139, 279, 631, 1872, 7866, 329, 957, 279, 369, 450, 21612, 465, 29013, 21196, 2617, 37119, 257, 2002, 2182, 12087, 21523, 288, 50560], "temperature": 0.0, "avg_logprob": -0.4162258279734644, "compression_ratio": 1.7718631178707225, "no_speech_prob": 0.04517849162220955}, {"id": 671, "seek": 399364, "start": 3997.56, "end": 4003.72, "text": " puedo obtener cosas m\u00e1s complicadas a m\u00ed me interesaba de hace un rato dijimos tener", "tokens": [50560, 21612, 28326, 260, 12218, 3573, 16060, 6872, 257, 14692, 385, 20157, 5509, 368, 10032, 517, 367, 2513, 47709, 8372, 11640, 50868], "temperature": 0.0, "avg_logprob": -0.4162258279734644, "compression_ratio": 1.7718631178707225, "no_speech_prob": 0.04517849162220955}, {"id": 672, "seek": 399364, "start": 4003.72, "end": 4010.56, "text": " representaciones de palabras pero adem\u00e1s de oraciones o de tweets o de documentos enteros y bueno", "tokens": [50868, 2906, 9188, 368, 35240, 4768, 21251, 368, 420, 9188, 277, 368, 25671, 277, 368, 4166, 329, 3242, 329, 288, 11974, 51210], "temperature": 0.0, "avg_logprob": -0.4162258279734644, "compression_ratio": 1.7718631178707225, "no_speech_prob": 0.04517849162220955}, {"id": 673, "seek": 399364, "start": 4010.56, "end": 4013.6, "text": " por lo menos yo tengo representaci\u00f3n de palabras no usando bora en medings como que eso", "tokens": [51210, 1515, 450, 8902, 5290, 13989, 2906, 3482, 368, 35240, 572, 29798, 272, 3252, 465, 1205, 1109, 2617, 631, 7287, 51362], "temperature": 0.0, "avg_logprob": -0.4162258279734644, "compression_ratio": 1.7718631178707225, "no_speech_prob": 0.04517849162220955}, {"id": 674, "seek": 399364, "start": 4013.6, "end": 4020.08, "text": " est\u00e1 bastante bien resuelto y gracias a que ahora tengo bora en medings puede usar arquitecturas", "tokens": [51362, 3192, 14651, 3610, 725, 3483, 1353, 288, 16611, 257, 631, 9923, 13989, 272, 3252, 465, 1205, 1109, 8919, 14745, 40258, 5739, 12907, 51686], "temperature": 0.0, "avg_logprob": -0.4162258279734644, "compression_ratio": 1.7718631178707225, "no_speech_prob": 0.04517849162220955}, {"id": 675, "seek": 402008, "start": 4020.08, "end": 4024.48, "text": " m\u00e1s complejas como las redes como lusionales las redes LCDM y las redes tipo transformers", "tokens": [50364, 3573, 44424, 19221, 2617, 2439, 16762, 2617, 287, 301, 1966, 279, 2439, 16762, 33158, 44, 288, 2439, 16762, 9746, 4088, 433, 50584], "temperature": 0.0, "avg_logprob": -0.47295777410523504, "compression_ratio": 1.7807692307692307, "no_speech_prob": 0.17177799344062805}, {"id": 676, "seek": 402008, "start": 4024.48, "end": 4029.52, "text": " que los transformers son lo que m\u00e1s utiliza bien d\u00eda pero adem\u00e1s puedo hacer una cosa en", "tokens": [50584, 631, 1750, 4088, 433, 1872, 450, 631, 3573, 4976, 13427, 3610, 12271, 4768, 21251, 21612, 6720, 2002, 10163, 465, 50836], "temperature": 0.0, "avg_logprob": -0.47295777410523504, "compression_ratio": 1.7807692307692307, "no_speech_prob": 0.17177799344062805}, {"id": 677, "seek": 402008, "start": 4029.52, "end": 4035.7599999999998, "text": " los embedings algo un poco m\u00e1s simple pero que a su vez me sirve para resolver estos problemas", "tokens": [50836, 1750, 846, 2883, 1109, 8655, 517, 10639, 3573, 2199, 4768, 631, 257, 459, 5715, 385, 4735, 303, 1690, 34480, 12585, 20720, 51148], "temperature": 0.0, "avg_logprob": -0.47295777410523504, "compression_ratio": 1.7807692307692307, "no_speech_prob": 0.17177799344062805}, {"id": 678, "seek": 402008, "start": 4035.7599999999998, "end": 4041.56, "text": " y es usar la t\u00e9cnica de Centroide que es as\u00ed est\u00e1 les va a servir en la tarea salvo y", "tokens": [51148, 288, 785, 14745, 635, 45411, 368, 3408, 340, 482, 631, 785, 8582, 3192, 1512, 2773, 257, 29463, 465, 635, 256, 35425, 1845, 3080, 288, 51438], "temperature": 0.0, "avg_logprob": -0.47295777410523504, "compression_ratio": 1.7807692307692307, "no_speech_prob": 0.17177799344062805}, {"id": 679, "seek": 402008, "start": 4041.56, "end": 4045.92, "text": " quieren entrenar una red m\u00e1s compleja que tambi\u00e9n son bienvenidos y quieren entrenar una LCDM", "tokens": [51438, 36706, 45069, 289, 2002, 2182, 3573, 44424, 2938, 631, 6407, 1872, 3610, 40668, 288, 36706, 45069, 289, 2002, 33158, 44, 51656], "temperature": 0.0, "avg_logprob": -0.47295777410523504, "compression_ratio": 1.7807692307692307, "no_speech_prob": 0.17177799344062805}, {"id": 680, "seek": 404592, "start": 4045.92, "end": 4051.04, "text": " en un transformer pero el Centroide es una t\u00e9cnica es muy sencilla supongo que yo tengo", "tokens": [50364, 465, 517, 4088, 260, 4768, 806, 3408, 340, 482, 785, 2002, 45411, 785, 5323, 3151, 66, 5291, 9331, 25729, 631, 5290, 13989, 50620], "temperature": 0.0, "avg_logprob": -0.3994167645772298, "compression_ratio": 1.7790262172284643, "no_speech_prob": 0.16141153872013092}, {"id": 681, "seek": 404592, "start": 4051.04, "end": 4056.04, "text": " mi capa de embedings que tiene bueno dice que eso se lo presenta as\u00ed a hamburguesa de representaci\u00f3n", "tokens": [50620, 2752, 1410, 64, 368, 846, 2883, 1109, 631, 7066, 11974, 10313, 631, 7287, 369, 450, 1974, 64, 8582, 257, 25172, 5476, 1247, 64, 368, 2906, 3482, 50870], "temperature": 0.0, "avg_logprob": -0.3994167645772298, "compression_ratio": 1.7790262172284643, "no_speech_prob": 0.16141153872013092}, {"id": 682, "seek": 404592, "start": 4056.04, "end": 4064.44, "text": " pero es as\u00ed el gato es as\u00ed etc\u00e9tera tengo vectors para cada palabra y tengo ahora un tweet que", "tokens": [50870, 4768, 785, 8582, 806, 290, 2513, 785, 8582, 5183, 526, 23833, 13989, 18875, 1690, 8411, 31702, 288, 13989, 9923, 517, 15258, 631, 51290], "temperature": 0.0, "avg_logprob": -0.3994167645772298, "compression_ratio": 1.7790262172284643, "no_speech_prob": 0.16141153872013092}, {"id": 683, "seek": 404592, "start": 4064.44, "end": 4069.12, "text": " quiere representar utilizando la colecci\u00f3n de embedings yo simplemente puedo agarrar todas las", "tokens": [51290, 23877, 2906, 289, 19906, 1806, 635, 45139, 14735, 368, 846, 2883, 1109, 5290, 33190, 21612, 623, 2284, 289, 10906, 2439, 51524], "temperature": 0.0, "avg_logprob": -0.3994167645772298, "compression_ratio": 1.7790262172284643, "no_speech_prob": 0.16141153872013092}, {"id": 684, "seek": 404592, "start": 4069.12, "end": 4073.6, "text": " palabras del tweet buscar todos los vectors correspondientes y hacer el promedio a eso de", "tokens": [51524, 35240, 1103, 15258, 26170, 6321, 1750, 18875, 6805, 20135, 288, 6720, 806, 2234, 292, 1004, 257, 7287, 368, 51748], "temperature": 0.0, "avg_logprob": -0.3994167645772298, "compression_ratio": 1.7790262172284643, "no_speech_prob": 0.16141153872013092}, {"id": 685, "seek": 407360, "start": 4073.6, "end": 4079.52, "text": " llamar a ser un Centroide de todos los embedings del tweet y no dice esta apreciado el promedio", "tokens": [50364, 16848, 289, 257, 816, 517, 3408, 340, 482, 368, 6321, 1750, 846, 2883, 1109, 1103, 15258, 288, 572, 10313, 5283, 1882, 3326, 1573, 806, 2234, 292, 1004, 50660], "temperature": 0.0, "avg_logprob": -0.4071043226453993, "compression_ratio": 1.7753623188405796, "no_speech_prob": 0.04547234624624252}, {"id": 686, "seek": 407360, "start": 4079.52, "end": 4087.04, "text": " de perro o gato no se al tweet dice no me gust\u00f3 la pel\u00edcula se va el promedio no me gust\u00f3 la pel\u00edcula", "tokens": [50660, 368, 680, 340, 277, 290, 2513, 572, 369, 419, 15258, 10313, 572, 385, 9679, 812, 635, 40154, 369, 2773, 806, 2234, 292, 1004, 572, 385, 9679, 812, 635, 40154, 51036], "temperature": 0.0, "avg_logprob": -0.4071043226453993, "compression_ratio": 1.7753623188405796, "no_speech_prob": 0.04547234624624252}, {"id": 687, "seek": 407360, "start": 4087.04, "end": 4091.68, "text": " de un promedio todo el embeding me dear papapafrita pero sin embargo funcionos bastante bien es", "tokens": [51036, 368, 517, 2234, 292, 1004, 5149, 806, 846, 2883, 278, 385, 368, 289, 5806, 569, 2792, 81, 2786, 4768, 3343, 23955, 14186, 329, 14651, 3610, 785, 51268], "temperature": 0.0, "avg_logprob": -0.4071043226453993, "compression_ratio": 1.7753623188405796, "no_speech_prob": 0.04547234624624252}, {"id": 688, "seek": 407360, "start": 4091.68, "end": 4097.24, "text": " es como un poco antintuitivo pero hacer el promedio todas esas 300 dimensiones de las distintas", "tokens": [51268, 785, 2617, 517, 10639, 2511, 686, 1983, 6340, 4768, 6720, 806, 2234, 292, 1004, 10906, 23388, 6641, 10139, 279, 368, 2439, 31489, 296, 51546], "temperature": 0.0, "avg_logprob": -0.4071043226453993, "compression_ratio": 1.7753623188405796, "no_speech_prob": 0.04547234624624252}, {"id": 689, "seek": 407360, "start": 4097.24, "end": 4102.76, "text": " palabras despu\u00e9s yo utiliz\u00f3 eso como entrada para otro otro sistema de clasificaci\u00f3n no s\u00f3lo", "tokens": [51546, 35240, 15283, 5290, 19906, 812, 7287, 2617, 37119, 1690, 11921, 11921, 13245, 368, 596, 296, 40802, 572, 22885, 51822], "temperature": 0.0, "avg_logprob": -0.4071043226453993, "compression_ratio": 1.7753623188405796, "no_speech_prob": 0.04547234624624252}, {"id": 690, "seek": 410276, "start": 4102.84, "end": 4106.84, "text": " arrenornal sino que hay que utilizar otro otro tipo de cosas como su proyecto no haciens o", "tokens": [50368, 594, 1095, 1865, 304, 18108, 631, 4842, 631, 24060, 11921, 11921, 9746, 368, 12218, 2617, 459, 32285, 572, 324, 537, 694, 277, 50568], "temperature": 0.0, "avg_logprob": -0.3568701590261152, "compression_ratio": 1.759581881533101, "no_speech_prob": 0.021378228440880775}, {"id": 691, "seek": 410276, "start": 4106.84, "end": 4112.88, "text": " relaci\u00f3n log\u00edstica y anda bastante bien o sea es como extra\u00f1o pero sobre todo el problema de an\u00e1lisis", "tokens": [50568, 37247, 3565, 19512, 2262, 288, 21851, 14651, 3610, 277, 4158, 785, 2617, 2857, 7716, 4768, 5473, 5149, 806, 12395, 368, 44113, 28436, 50870], "temperature": 0.0, "avg_logprob": -0.3568701590261152, "compression_ratio": 1.759581881533101, "no_speech_prob": 0.021378228440880775}, {"id": 692, "seek": 410276, "start": 4112.88, "end": 4118.8, "text": " sentimiento anda bastante bien bueno esa la t\u00e9cnica del Centroide es una t\u00e9cnica f\u00e1cil decir si yo tengo", "tokens": [50870, 2279, 14007, 21851, 14651, 3610, 11974, 11342, 635, 45411, 1103, 3408, 340, 482, 785, 2002, 45411, 17474, 10235, 1511, 5290, 13989, 51166], "temperature": 0.0, "avg_logprob": -0.3568701590261152, "compression_ratio": 1.759581881533101, "no_speech_prob": 0.021378228440880775}, {"id": 693, "seek": 410276, "start": 4118.8, "end": 4124.88, "text": " una colecci\u00f3n de embedings puedo hacerme embedings de oraciones o embedings de textos un poco m\u00e1s grandes", "tokens": [51166, 2002, 45139, 14735, 368, 846, 2883, 1109, 21612, 46093, 31081, 846, 2883, 1109, 368, 420, 9188, 277, 846, 2883, 1109, 368, 2487, 329, 517, 10639, 3573, 16640, 51470], "temperature": 0.0, "avg_logprob": -0.3568701590261152, "compression_ratio": 1.759581881533101, "no_speech_prob": 0.021378228440880775}, {"id": 694, "seek": 410276, "start": 4124.88, "end": 4132.6, "text": " simplemente promediendo los embedings que tengo bien entonces ahora lo que vamos a ver en el", "tokens": [51470, 33190, 2234, 292, 7304, 1750, 846, 2883, 1109, 631, 13989, 3610, 13003, 9923, 450, 631, 5295, 257, 1306, 465, 806, 51856], "temperature": 0.0, "avg_logprob": -0.3568701590261152, "compression_ratio": 1.759581881533101, "no_speech_prob": 0.021378228440880775}, {"id": 695, "seek": 413260, "start": 4132.6, "end": 4139.320000000001, "text": " resto de la clase en unos minutos son ejemplos de c\u00f3mo funcionan estas arquitecturas m\u00e1s complejas que", "tokens": [50364, 28247, 368, 635, 44578, 465, 17780, 19421, 1872, 10012, 5895, 329, 368, 12826, 14186, 282, 13897, 40258, 5739, 12907, 3573, 44424, 19221, 631, 50700], "temperature": 0.0, "avg_logprob": -0.2982671646844773, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.01569957844913006}, {"id": 696, "seek": 413260, "start": 4139.320000000001, "end": 4143.64, "text": " puedo utilizar gracias a que tengo embedings no les vamos a ver en profundidad sino que simplemente", "tokens": [50700, 21612, 24060, 16611, 257, 631, 13989, 846, 2883, 1109, 572, 1512, 5295, 257, 1306, 465, 40958, 4580, 18108, 631, 33190, 50916], "temperature": 0.0, "avg_logprob": -0.2982671646844773, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.01569957844913006}, {"id": 697, "seek": 413260, "start": 4143.64, "end": 4150.08, "text": " vamos a pasar por arriba pero es una idea para ver qu\u00e9 clase de cosas se pueden hacer y empezamos por las", "tokens": [50916, 5295, 257, 25344, 1515, 28469, 4768, 785, 2002, 1558, 1690, 1306, 8057, 44578, 368, 12218, 369, 14714, 6720, 288, 18730, 2151, 1515, 2439, 51238], "temperature": 0.0, "avg_logprob": -0.2982671646844773, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.01569957844913006}, {"id": 698, "seek": 413260, "start": 4150.08, "end": 4158.08, "text": " como lutivas las redes tipos en N se llaman redes como lutivas o como lusionales y originalmente se utilizaban", "tokens": [51238, 2617, 287, 325, 24759, 2439, 16762, 37105, 465, 426, 369, 4849, 6147, 16762, 2617, 287, 325, 24759, 277, 2617, 287, 301, 1966, 279, 288, 3380, 4082, 369, 19906, 18165, 51638], "temperature": 0.0, "avg_logprob": -0.2982671646844773, "compression_ratio": 1.708502024291498, "no_speech_prob": 0.01569957844913006}, {"id": 699, "seek": 415808, "start": 4158.08, "end": 4164.12, "text": " como para procesar im\u00e1genes o sea tambi\u00e9n se utilizan estoy en d\u00eda para procesar im\u00e1genes y lo que hacen es", "tokens": [50364, 2617, 1690, 17565, 289, 566, 842, 47986, 277, 4158, 6407, 369, 19906, 282, 15796, 465, 12271, 1690, 17565, 289, 566, 842, 47986, 288, 450, 631, 27434, 785, 50666], "temperature": 0.0, "avg_logprob": -0.33218327041499873, "compression_ratio": 1.836734693877551, "no_speech_prob": 0.10655732452869415}, {"id": 700, "seek": 415808, "start": 4165.12, "end": 4171.12, "text": " ir recorriendo como que segmenta una imagen en cuadraditos y lo van recorriendo digamos y despu\u00e9s obtienen como", "tokens": [50716, 3418, 850, 284, 470, 3999, 2617, 631, 9469, 64, 2002, 40652, 465, 34434, 6206, 11343, 288, 450, 3161, 850, 284, 470, 3999, 36430, 288, 15283, 7464, 22461, 2617, 51016], "temperature": 0.0, "avg_logprob": -0.33218327041499873, "compression_ratio": 1.836734693877551, "no_speech_prob": 0.10655732452869415}, {"id": 701, "seek": 415808, "start": 4171.12, "end": 4178.44, "text": " informaci\u00f3n de cada uno de los cuadraditos bueno pero tambi\u00e9n se han aplicado al lenguaje y la forma que se", "tokens": [51016, 21660, 368, 8411, 8526, 368, 1750, 34434, 6206, 11343, 11974, 4768, 6407, 369, 7276, 18221, 1573, 419, 35044, 84, 11153, 288, 635, 8366, 631, 369, 51382], "temperature": 0.0, "avg_logprob": -0.33218327041499873, "compression_ratio": 1.836734693877551, "no_speech_prob": 0.10655732452869415}, {"id": 702, "seek": 415808, "start": 4178.44, "end": 4184.04, "text": " aplican lenguaje es como decir batomando de enegramas y va viendo yo que es por ejemplo tres palabras a la vez y va", "tokens": [51382, 18221, 282, 35044, 84, 11153, 785, 2617, 10235, 7362, 298, 1806, 368, 465, 1146, 2356, 296, 288, 2773, 34506, 5290, 631, 785, 1515, 13358, 15890, 35240, 257, 635, 5715, 288, 2773, 51662], "temperature": 0.0, "avg_logprob": -0.33218327041499873, "compression_ratio": 1.836734693877551, "no_speech_prob": 0.10655732452869415}, {"id": 703, "seek": 418404, "start": 4184.04, "end": 4191.4, "text": " obteniendo datos de cada una de las tres palabras a la vez y despu\u00e9s con eso despu\u00e9s saca un total entonces lo", "tokens": [50364, 28326, 7304, 27721, 368, 8411, 2002, 368, 2439, 15890, 35240, 257, 635, 5715, 288, 15283, 416, 7287, 15283, 4899, 64, 517, 3217, 13003, 450, 50732], "temperature": 0.0, "avg_logprob": -0.35284879256267937, "compression_ratio": 1.7075098814229248, "no_speech_prob": 0.0794605016708374}, {"id": 704, "seek": 418404, "start": 4191.4, "end": 4197.88, "text": " interesante es que digamos puedo pasar a tener cosas de orden m\u00e1s grande que una palabra no o sea ahora en", "tokens": [50732, 36396, 785, 631, 36430, 21612, 25344, 257, 11640, 12218, 368, 28615, 3573, 8883, 631, 2002, 31702, 572, 277, 4158, 9923, 465, 51056], "temperature": 0.0, "avg_logprob": -0.35284879256267937, "compression_ratio": 1.7075098814229248, "no_speech_prob": 0.0794605016708374}, {"id": 705, "seek": 418404, "start": 4197.88, "end": 4204.48, "text": " bebrosa una sola palabra estoy produzando toda una oraci\u00f3n entonces tienes una pregunta bien entonces un ejemplo", "tokens": [51056, 312, 1443, 6447, 2002, 34162, 31702, 15796, 1082, 89, 1806, 11687, 2002, 420, 3482, 13003, 20716, 2002, 24252, 3610, 13003, 517, 13358, 51386], "temperature": 0.0, "avg_logprob": -0.35284879256267937, "compression_ratio": 1.7075098814229248, "no_speech_prob": 0.0794605016708374}, {"id": 706, "seek": 418404, "start": 4204.48, "end": 4209.48, "text": " como funciona esto supongamos que estoy tratando de clasificar Twitch y digo la pel\u00edcula fue muy", "tokens": [51386, 2617, 26210, 7433, 9331, 556, 2151, 631, 15796, 21507, 1806, 368, 596, 296, 25625, 22222, 288, 22990, 635, 40154, 9248, 5323, 51636], "temperature": 0.0, "avg_logprob": -0.35284879256267937, "compression_ratio": 1.7075098814229248, "no_speech_prob": 0.0794605016708374}, {"id": 707, "seek": 420948, "start": 4209.48, "end": 4217.32, "text": " aburrida yo me puedo construir una red neuronal de tipo convolutiva que lo que va a ser es decir bueno a los", "tokens": [50364, 410, 374, 81, 2887, 5290, 385, 21612, 38445, 2002, 2182, 12087, 21523, 368, 9746, 3754, 2308, 5931, 631, 450, 631, 2773, 257, 816, 785, 10235, 11974, 257, 1750, 50756], "temperature": 0.0, "avg_logprob": -0.2796390138823411, "compression_ratio": 2.0114503816793894, "no_speech_prob": 0.32881176471710205}, {"id": 708, "seek": 420948, "start": 4217.32, "end": 4223.5599999999995, "text": " en beings de la de a tres palabras los voy tomando de tres palabras considero los en beings de la pel\u00edcula fue y a", "tokens": [50756, 465, 312, 1109, 368, 635, 368, 257, 15890, 35240, 1750, 7552, 2916, 1806, 368, 15890, 35240, 1949, 78, 1750, 465, 312, 1109, 368, 635, 40154, 9248, 288, 257, 51068], "temperature": 0.0, "avg_logprob": -0.2796390138823411, "compression_ratio": 2.0114503816793894, "no_speech_prob": 0.32881176471710205}, {"id": 709, "seek": 420948, "start": 4223.5599999999995, "end": 4229.28, "text": " esos tres en beings se los paso a una red a esa esa unidad convolutiva que lo que va a ser es mirar", "tokens": [51068, 22411, 15890, 465, 312, 1109, 369, 1750, 29212, 257, 2002, 2182, 257, 11342, 785, 64, 517, 4580, 3754, 2308, 5931, 631, 450, 631, 2773, 257, 816, 785, 3149, 289, 51354], "temperature": 0.0, "avg_logprob": -0.2796390138823411, "compression_ratio": 2.0114503816793894, "no_speech_prob": 0.32881176471710205}, {"id": 710, "seek": 420948, "start": 4229.28, "end": 4234.28, "text": " estras tres palabras y tratar de sacar informaci\u00f3n de las tres y devolverme una cosa que tenga ciertos", "tokens": [51354, 871, 3906, 15890, 35240, 288, 42549, 368, 43823, 21660, 368, 2439, 15890, 288, 1905, 401, 331, 1398, 2002, 10163, 631, 36031, 49252, 329, 51604], "temperature": 0.0, "avg_logprob": -0.2796390138823411, "compression_ratio": 2.0114503816793894, "no_speech_prob": 0.32881176471710205}, {"id": 711, "seek": 420948, "start": 4234.28, "end": 4239.08, "text": " tama\u00f1os fijo y despu\u00e9s se va a mover la ventana y en vez de la pel\u00edcula fue va a considerar las", "tokens": [51604, 45342, 8242, 283, 24510, 288, 15283, 369, 2773, 257, 39945, 635, 6931, 2095, 288, 465, 5715, 368, 635, 40154, 9248, 2773, 257, 1949, 289, 2439, 51844], "temperature": 0.0, "avg_logprob": -0.2796390138823411, "compression_ratio": 2.0114503816793894, "no_speech_prob": 0.32881176471710205}, {"id": 712, "seek": 423908, "start": 4239.08, "end": 4244.76, "text": " palabras pel\u00edculas fue muy y devuelta lo va a pasar por esa subred y va a tratar de sacar salidas y despu\u00e9s fue", "tokens": [50364, 35240, 31810, 296, 9248, 5323, 288, 1905, 3483, 1328, 450, 2773, 257, 25344, 1515, 11342, 1422, 986, 288, 2773, 257, 42549, 368, 43823, 1845, 11382, 288, 15283, 9248, 50648], "temperature": 0.0, "avg_logprob": -0.35730569404468204, "compression_ratio": 1.9054054054054055, "no_speech_prob": 0.04047335311770439}, {"id": 713, "seek": 423908, "start": 4244.76, "end": 4250.0, "text": " muy aburrida lo va a pasar por la misma subred tratar de sacar salidas despu\u00e9s voy a tener una", "tokens": [50648, 5323, 410, 374, 81, 2887, 450, 2773, 257, 25344, 1515, 635, 24946, 1422, 986, 42549, 368, 43823, 1845, 11382, 15283, 7552, 257, 11640, 2002, 50910], "temperature": 0.0, "avg_logprob": -0.35730569404468204, "compression_ratio": 1.9054054054054055, "no_speech_prob": 0.04047335311770439}, {"id": 714, "seek": 423908, "start": 4250.0, "end": 4257.16, "text": " capa que dice bueno de todas estas salidas intermedia que tuve obtengon los m\u00e1ximos y esos m\u00e1ximos los usos para", "tokens": [50910, 1410, 64, 631, 10313, 11974, 368, 10906, 13897, 1845, 11382, 728, 1912, 654, 631, 2604, 303, 28326, 10660, 1750, 31031, 329, 288, 22411, 31031, 329, 1750, 505, 329, 1690, 51268], "temperature": 0.0, "avg_logprob": -0.35730569404468204, "compression_ratio": 1.9054054054054055, "no_speech_prob": 0.04047335311770439}, {"id": 715, "seek": 423908, "start": 4257.16, "end": 4264.0, "text": " que alcular mi salida que mi salida final ser\u00eda positivo negativo neutro o no no estas redes esta", "tokens": [51268, 631, 419, 17792, 2752, 1845, 2887, 631, 2752, 1845, 2887, 2572, 23679, 44710, 2485, 18586, 7989, 340, 277, 572, 572, 13897, 16762, 5283, 51610], "temperature": 0.0, "avg_logprob": -0.35730569404468204, "compression_ratio": 1.9054054054054055, "no_speech_prob": 0.04047335311770439}, {"id": 716, "seek": 426400, "start": 4264.0, "end": 4268.92, "text": " capa como le tiva que que all\u00ed en el medio parece como capa como le tiva entonces a sus redes que", "tokens": [50364, 1410, 64, 2617, 476, 256, 5931, 631, 631, 34294, 465, 806, 22123, 14120, 2617, 1410, 64, 2617, 476, 256, 5931, 13003, 257, 3291, 16762, 631, 50610], "temperature": 0.0, "avg_logprob": -0.37197664405117514, "compression_ratio": 1.8850574712643677, "no_speech_prob": 0.10609495639801025}, {"id": 717, "seek": 426400, "start": 4268.92, "end": 4272.92, "text": " estoy viendo ah\u00ed en realidad son los mismos pesos no es como la misma que se va moviendo y me va dando", "tokens": [50610, 15796, 34506, 12571, 465, 25635, 1872, 1750, 47458, 33204, 572, 785, 2617, 635, 24946, 631, 369, 2773, 2402, 7304, 288, 385, 2773, 29854, 50810], "temperature": 0.0, "avg_logprob": -0.37197664405117514, "compression_ratio": 1.8850574712643677, "no_speech_prob": 0.10609495639801025}, {"id": 718, "seek": 426400, "start": 4272.92, "end": 4279.32, "text": " resultados distintos bien entonces lo bueno que tienes que llevar todo una entrada que son muchas palabras", "tokens": [50810, 36796, 49337, 3610, 13003, 450, 11974, 631, 20716, 631, 30374, 5149, 2002, 37119, 631, 1872, 16072, 35240, 51130], "temperature": 0.0, "avg_logprob": -0.37197664405117514, "compression_ratio": 1.8850574712643677, "no_speech_prob": 0.10609495639801025}, {"id": 719, "seek": 426400, "start": 4279.32, "end": 4284.52, "text": " y me va a dar una salida \u00fanica digamos condensa todas las palabras se queda como con las", "tokens": [51130, 288, 385, 2773, 257, 4072, 2002, 1845, 2887, 30104, 36430, 2224, 23364, 10906, 2439, 35240, 369, 23314, 2617, 416, 2439, 51390], "temperature": 0.0, "avg_logprob": -0.37197664405117514, "compression_ratio": 1.8850574712643677, "no_speech_prob": 0.10609495639801025}, {"id": 720, "seek": 426400, "start": 4284.52, "end": 4288.56, "text": " digamos las dimensiones m\u00e1ximas de cada una que les quede m\u00e1s la inter\u00e9s en y con eso que", "tokens": [51390, 36430, 2439, 10139, 279, 31031, 296, 368, 8411, 2002, 631, 1512, 421, 4858, 3573, 635, 728, 2191, 465, 288, 416, 7287, 631, 51592], "temperature": 0.0, "avg_logprob": -0.37197664405117514, "compression_ratio": 1.8850574712643677, "no_speech_prob": 0.10609495639801025}, {"id": 721, "seek": 428856, "start": 4288.56, "end": 4298.68, "text": " va a ir con una salida bien esas la red tipo convolutiva las redes el ctm pertenecen a un grupo m\u00e1s grande", "tokens": [50364, 2773, 257, 3418, 416, 2002, 1845, 2887, 3610, 23388, 635, 2182, 9746, 3754, 2308, 5931, 2439, 16762, 806, 269, 83, 76, 680, 1147, 68, 13037, 257, 517, 20190, 3573, 8883, 50870], "temperature": 0.0, "avg_logprob": -0.3503946576799665, "compression_ratio": 1.7850877192982457, "no_speech_prob": 0.050153277814388275}, {"id": 722, "seek": 428856, "start": 4298.68, "end": 4303.8, "text": " de redes que se llama las redes recurrentes que significas son redes con memoria que van mirando", "tokens": [50870, 368, 16762, 631, 369, 23272, 2439, 16762, 18680, 1753, 279, 631, 3350, 296, 1872, 16762, 416, 1334, 8172, 631, 3161, 3149, 1806, 51126], "temperature": 0.0, "avg_logprob": -0.3503946576799665, "compression_ratio": 1.7850877192982457, "no_speech_prob": 0.050153277814388275}, {"id": 723, "seek": 428856, "start": 4303.8, "end": 4308.200000000001, "text": " a cada palabra a la vez y van recordando lo que viene hasta el momento entonces esto me sirve para", "tokens": [51126, 257, 8411, 31702, 257, 635, 5715, 288, 3161, 2136, 1806, 450, 631, 19561, 10764, 806, 9333, 13003, 7433, 385, 4735, 303, 1690, 51346], "temperature": 0.0, "avg_logprob": -0.3503946576799665, "compression_ratio": 1.7850877192982457, "no_speech_prob": 0.050153277814388275}, {"id": 724, "seek": 428856, "start": 4308.200000000001, "end": 4313.400000000001, "text": " obtener una salida final o tambi\u00e9n para obtener salidas por palabra entonces vamos a ver como funciona", "tokens": [51346, 28326, 260, 2002, 1845, 2887, 2572, 277, 6407, 1690, 28326, 260, 1845, 11382, 1515, 31702, 13003, 5295, 257, 1306, 2617, 26210, 51606], "temperature": 0.0, "avg_logprob": -0.3503946576799665, "compression_ratio": 1.7850877192982457, "no_speech_prob": 0.050153277814388275}, {"id": 725, "seek": 431340, "start": 4313.4, "end": 4321.12, "text": " de estas esto como una especie de diagrama de c\u00f3mo ser\u00eda una recurrente similar a la que ve\u00edamos", "tokens": [50364, 368, 13897, 7433, 2617, 2002, 49368, 368, 10686, 64, 368, 12826, 23679, 2002, 850, 374, 14772, 2531, 257, 635, 631, 1241, 16275, 50750], "temperature": 0.0, "avg_logprob": -0.296980806099352, "compression_ratio": 1.8639705882352942, "no_speech_prob": 0.16212226450443268}, {"id": 726, "seek": 431340, "start": 4321.12, "end": 4326.24, "text": " hace un rato digamos en capas pero ahora yo voy a tener una capa que tiene una lacesa s\u00ed misma", "tokens": [50750, 10032, 517, 367, 2513, 36430, 465, 1410, 296, 4768, 9923, 5290, 7552, 257, 11640, 2002, 1410, 64, 631, 7066, 2002, 635, 887, 64, 8600, 24946, 51006], "temperature": 0.0, "avg_logprob": -0.296980806099352, "compression_ratio": 1.8639705882352942, "no_speech_prob": 0.16212226450443268}, {"id": 727, "seek": 431340, "start": 4326.24, "end": 4330.96, "text": " digamos todas las neuronas de esa capa van a tener un enlace de vuelta de vuelta hacia s\u00ed misma se llama", "tokens": [51006, 36430, 10906, 2439, 34090, 296, 368, 11342, 1410, 64, 3161, 257, 11640, 517, 465, 19837, 368, 41542, 368, 41542, 21365, 8600, 24946, 369, 23272, 51242], "temperature": 0.0, "avg_logprob": -0.296980806099352, "compression_ratio": 1.8639705882352942, "no_speech_prob": 0.16212226450443268}, {"id": 728, "seek": 431340, "start": 4330.96, "end": 4336.5599999999995, "text": " capa recurrente y bueno despu\u00e9s voy a tener una capa de salida entonces cuando yo voy a ver como funciona", "tokens": [51242, 1410, 64, 18680, 14772, 288, 11974, 15283, 7552, 257, 11640, 2002, 1410, 64, 368, 1845, 2887, 13003, 7767, 5290, 7552, 257, 1306, 2617, 26210, 51522], "temperature": 0.0, "avg_logprob": -0.296980806099352, "compression_ratio": 1.8639705882352942, "no_speech_prob": 0.16212226450443268}, {"id": 729, "seek": 431340, "start": 4336.5599999999995, "end": 4341.36, "text": " eso con un tweet que quiero clasificar como la pel\u00edcula fue muy aburrida funcionar\u00eda esta manera", "tokens": [51522, 7287, 416, 517, 15258, 631, 16811, 596, 296, 25625, 2617, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 14186, 21178, 5283, 13913, 51762], "temperature": 0.0, "avg_logprob": -0.296980806099352, "compression_ratio": 1.8639705882352942, "no_speech_prob": 0.16212226450443268}, {"id": 730, "seek": 434136, "start": 4341.36, "end": 4348.4, "text": " yo digo bueno primero agarr\u00f3 la palabra la el embedding de la palabra la se lo paso a la red y despu\u00e9s", "tokens": [50364, 5290, 22990, 11974, 21289, 623, 2284, 812, 635, 31702, 635, 806, 12240, 3584, 368, 635, 31702, 635, 369, 450, 29212, 257, 635, 2182, 288, 15283, 50716], "temperature": 0.0, "avg_logprob": -0.269321616815061, "compression_ratio": 2.0205128205128204, "no_speech_prob": 0.1873912662267685}, {"id": 731, "seek": 434136, "start": 4348.4, "end": 4352.639999999999, "text": " voy a agarrar el embedding de la palabra pel\u00edcula de se lo paso de vuelta de la red pero esta vez", "tokens": [50716, 7552, 257, 623, 2284, 289, 806, 12240, 3584, 368, 635, 31702, 40154, 368, 369, 450, 29212, 368, 41542, 368, 635, 2182, 4768, 5283, 5715, 50928], "temperature": 0.0, "avg_logprob": -0.269321616815061, "compression_ratio": 2.0205128205128204, "no_speech_prob": 0.1873912662267685}, {"id": 732, "seek": 434136, "start": 4352.639999999999, "end": 4357.2, "text": " adem\u00e1s de poner el embedding de la palabra pel\u00edcula voy a poner tambi\u00e9n la salida del paso anterior", "tokens": [50928, 21251, 368, 19149, 806, 12240, 3584, 368, 635, 31702, 40154, 7552, 257, 19149, 6407, 635, 1845, 2887, 1103, 29212, 22272, 51156], "temperature": 0.0, "avg_logprob": -0.269321616815061, "compression_ratio": 2.0205128205128204, "no_speech_prob": 0.1873912662267685}, {"id": 733, "seek": 434136, "start": 4357.2, "end": 4364.08, "text": " entonces esto va consumiendo una palabra a la vez y siempre consumiendo la salida de la", "tokens": [51156, 13003, 7433, 2773, 3978, 7304, 2002, 31702, 257, 635, 5715, 288, 12758, 3978, 7304, 635, 1845, 2887, 368, 635, 51500], "temperature": 0.0, "avg_logprob": -0.269321616815061, "compression_ratio": 2.0205128205128204, "no_speech_prob": 0.1873912662267685}, {"id": 734, "seek": 436408, "start": 4364.08, "end": 4371.12, "text": " capa anterior entonces va consumiendo la pel\u00edcula fue muy aburrida cuando lleg\u00f3 aburrida ya consumi\u00f3", "tokens": [50364, 1410, 64, 22272, 13003, 2773, 3978, 7304, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 7767, 46182, 410, 374, 81, 2887, 2478, 3978, 7138, 50716], "temperature": 0.0, "avg_logprob": -0.3020286750793457, "compression_ratio": 1.759090909090909, "no_speech_prob": 0.08652772009372711}, {"id": 735, "seek": 436408, "start": 4371.12, "end": 4376.72, "text": " las salidas de todas las capas anteriores y la palabra nueva y ah\u00ed es como que la salida", "tokens": [50716, 2439, 1845, 11382, 368, 10906, 2439, 1410, 296, 364, 34345, 2706, 288, 635, 31702, 28963, 288, 12571, 785, 2617, 631, 635, 1845, 2887, 50996], "temperature": 0.0, "avg_logprob": -0.3020286750793457, "compression_ratio": 1.759090909090909, "no_speech_prob": 0.08652772009372711}, {"id": 736, "seek": 436408, "start": 4376.72, "end": 4380.36, "text": " ese \u00faltimo paso ya me dio tiene como una especie de versi\u00f3n condensada de todo lo que era la", "tokens": [50996, 10167, 21013, 29212, 2478, 385, 31965, 7066, 2617, 2002, 49368, 368, 47248, 2224, 694, 1538, 368, 5149, 450, 631, 4249, 635, 51178], "temperature": 0.0, "avg_logprob": -0.3020286750793457, "compression_ratio": 1.759090909090909, "no_speech_prob": 0.08652772009372711}, {"id": 737, "seek": 436408, "start": 4380.36, "end": 4388.36, "text": " la versi\u00f3n y ah\u00ed con esos \u00faltimos pesos calcule la salida positivo negativo neutro o no adem\u00e1s", "tokens": [51178, 635, 47248, 288, 12571, 416, 22411, 33013, 33204, 2104, 66, 2271, 635, 1845, 2887, 44710, 2485, 18586, 7989, 340, 277, 572, 21251, 51578], "temperature": 0.0, "avg_logprob": -0.3020286750793457, "compression_ratio": 1.759090909090909, "no_speech_prob": 0.08652772009372711}, {"id": 738, "seek": 438836, "start": 4388.36, "end": 4395.12, "text": " si yo quisiera podr\u00eda ir sacando para ir sacando los pesos de cada una de las salidas entonces", "tokens": [50364, 1511, 5290, 37945, 10609, 27246, 3418, 4899, 1806, 1690, 3418, 4899, 1806, 1750, 33204, 368, 8411, 2002, 368, 2439, 1845, 11382, 13003, 50702], "temperature": 0.0, "avg_logprob": -0.3556669815726902, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.1491423100233078}, {"id": 739, "seek": 438836, "start": 4395.12, "end": 4398.719999999999, "text": " ah\u00ed tendr\u00eda como una salida por palabra entonces esto podr\u00eda ser un ejemplo por ejemplo para", "tokens": [50702, 12571, 3928, 37183, 2617, 2002, 1845, 2887, 1515, 31702, 13003, 7433, 27246, 816, 517, 13358, 1515, 13358, 1690, 50882], "temperature": 0.0, "avg_logprob": -0.3556669815726902, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.1491423100233078}, {"id": 740, "seek": 438836, "start": 4398.719999999999, "end": 4402.759999999999, "text": " los problemas de clasificaci\u00f3n de secuencia que debemos la vez pasada bueno con una red de este", "tokens": [50882, 1750, 20720, 368, 596, 296, 40802, 368, 907, 47377, 631, 3001, 4485, 635, 5715, 1736, 1538, 11974, 416, 2002, 2182, 368, 4065, 51084], "temperature": 0.0, "avg_logprob": -0.3556669815726902, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.1491423100233078}, {"id": 741, "seek": 438836, "start": 4402.759999999999, "end": 4406.44, "text": " estilo se puede hacer la clasificaci\u00f3n de secuencia sacando una salida por palabra si ten\u00edas una", "tokens": [51084, 37470, 369, 8919, 6720, 635, 596, 296, 40802, 368, 907, 47377, 4899, 1806, 2002, 1845, 2887, 1515, 31702, 1511, 2064, 10025, 2002, 51268], "temperature": 0.0, "avg_logprob": -0.3556669815726902, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.1491423100233078}, {"id": 742, "seek": 438836, "start": 4406.44, "end": 4413.799999999999, "text": " pregunta el embedding exact si la entrada en esto caso yo digo bueno a sumo que tengo", "tokens": [51268, 24252, 806, 12240, 3584, 1900, 1511, 635, 37119, 465, 7433, 9666, 5290, 22990, 11974, 257, 2408, 78, 631, 13989, 51636], "temperature": 0.0, "avg_logprob": -0.3556669815726902, "compression_ratio": 1.9227642276422765, "no_speech_prob": 0.1491423100233078}, {"id": 743, "seek": 441380, "start": 4413.8, "end": 4423.46, "text": " por remains yo ya puedo utilizar estas redes m\u00e1s complejas bien y la que es la arquitectura del", "tokens": [50364, 1515, 7023, 5290, 2478, 21612, 24060, 13897, 16762, 3573, 44424, 19221, 3610, 288, 635, 631, 785, 635, 40258, 5739, 2991, 1103, 50847], "temperature": 0.0, "avg_logprob": -0.3091654515528417, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.05605890601873398}, {"id": 744, "seek": 441380, "start": 4423.46, "end": 4428.56, "text": " estado del arte hoy en d\u00eda es la arquitectura de tipo transformer que tambi\u00e9n es una arquitectura", "tokens": [50847, 18372, 1103, 29159, 13775, 465, 12271, 785, 635, 40258, 5739, 2991, 368, 9746, 31782, 631, 6407, 785, 2002, 40258, 5739, 2991, 51102], "temperature": 0.0, "avg_logprob": -0.3091654515528417, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.05605890601873398}, {"id": 745, "seek": 441380, "start": 4428.56, "end": 4432.320000000001, "text": " que utiliza secuencias de entrada pero es una arquitectura bastante m\u00e1s compleja ac\u00e1 vamos", "tokens": [51102, 631, 4976, 13427, 907, 7801, 12046, 368, 37119, 4768, 785, 2002, 40258, 5739, 2991, 14651, 3573, 44424, 2938, 23496, 5295, 51290], "temperature": 0.0, "avg_logprob": -0.3091654515528417, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.05605890601873398}, {"id": 746, "seek": 441380, "start": 4432.320000000001, "end": 4436.92, "text": " a ver solamente una idea muy b\u00e1sica como funciona pero es una arquitectura que tengo muchos", "tokens": [51290, 257, 1306, 27814, 2002, 1558, 5323, 25545, 2262, 2617, 26210, 4768, 785, 2002, 40258, 5739, 2991, 631, 13989, 17061, 51520], "temperature": 0.0, "avg_logprob": -0.3091654515528417, "compression_ratio": 1.8725490196078431, "no_speech_prob": 0.05605890601873398}, {"id": 747, "seek": 443692, "start": 4437.12, "end": 4444.4800000000005, "text": " pedazos y hace muchas cosas distintas y bueno el se basa en una cosa de llamas tapas autotensionales", "tokens": [50374, 5670, 921, 329, 288, 10032, 16072, 12218, 31489, 296, 288, 11974, 806, 369, 987, 64, 465, 2002, 10163, 368, 16848, 296, 5119, 296, 1476, 310, 3378, 4229, 50742], "temperature": 0.0, "avg_logprob": -0.3353776198167067, "compression_ratio": 1.8215962441314555, "no_speech_prob": 0.08685000985860825}, {"id": 748, "seek": 443692, "start": 4444.4800000000005, "end": 4448.24, "text": " ahora no vamos a ver qu\u00e9 es el modelo autotensional pero lo vamos a ver la clase que viene", "tokens": [50742, 9923, 572, 5295, 257, 1306, 8057, 785, 806, 27825, 1476, 310, 3378, 304, 4768, 450, 5295, 257, 1306, 635, 44578, 631, 19561, 50930], "temperature": 0.0, "avg_logprob": -0.3353776198167067, "compression_ratio": 1.8215962441314555, "no_speech_prob": 0.08685000985860825}, {"id": 749, "seek": 443692, "start": 4448.24, "end": 4455.4800000000005, "text": " no lo emente como bueno un ejemplo de c\u00f3mo funciona el sistema de traducci\u00f3n autom\u00e1tica que utiliza", "tokens": [50930, 572, 450, 846, 1576, 2617, 11974, 517, 13358, 368, 12826, 26210, 806, 13245, 368, 2479, 1311, 5687, 3553, 23432, 631, 4976, 13427, 51292], "temperature": 0.0, "avg_logprob": -0.3353776198167067, "compression_ratio": 1.8215962441314555, "no_speech_prob": 0.08685000985860825}, {"id": 750, "seek": 443692, "start": 4455.4800000000005, "end": 4460.32, "text": " modelos autotensionales bueno una variante de eso es el modelo autotensional que lo que hace", "tokens": [51292, 2316, 329, 1476, 310, 3378, 4229, 11974, 2002, 3034, 2879, 368, 7287, 785, 806, 27825, 1476, 310, 3378, 304, 631, 450, 631, 10032, 51534], "temperature": 0.0, "avg_logprob": -0.3353776198167067, "compression_ratio": 1.8215962441314555, "no_speech_prob": 0.08685000985860825}, {"id": 751, "seek": 446032, "start": 4460.4, "end": 4465.88, "text": " construir una matriz entre las palabras de una oraci\u00f3n y s\u00ed misma no se tengo una oraci\u00f3n", "tokens": [50368, 38445, 2002, 3803, 24959, 3962, 2439, 35240, 368, 2002, 420, 3482, 288, 8600, 24946, 572, 369, 13989, 2002, 420, 3482, 50642], "temperature": 0.0, "avg_logprob": -0.36268476712501657, "compression_ratio": 2.0168067226890756, "no_speech_prob": 0.21045748889446259}, {"id": 752, "seek": 446032, "start": 4465.88, "end": 4471.08, "text": " que tiene ene palabras y va a tratar de cruzar las ene palabras con las propias ene palabras", "tokens": [50642, 631, 7066, 465, 68, 35240, 288, 2773, 257, 42549, 368, 5140, 26236, 2439, 465, 68, 35240, 416, 2439, 2365, 4609, 465, 68, 35240, 50902], "temperature": 0.0, "avg_logprob": -0.36268476712501657, "compression_ratio": 2.0168067226890756, "no_speech_prob": 0.21045748889446259}, {"id": 753, "seek": 446032, "start": 4471.08, "end": 4475.24, "text": " y tratar de establecer conexiones entre cada uno de los pares entonces termina calculando una", "tokens": [50902, 288, 42549, 368, 37444, 1776, 49509, 5411, 3962, 8411, 8526, 368, 1750, 2502, 495, 13003, 1433, 1426, 4322, 1806, 2002, 51110], "temperature": 0.0, "avg_logprob": -0.36268476712501657, "compression_ratio": 2.0168067226890756, "no_speech_prob": 0.21045748889446259}, {"id": 754, "seek": 446032, "start": 4475.24, "end": 4481.04, "text": " matriz y lo bueno que tiene es que me permite construir en vez de contextuales por palabra o sea", "tokens": [51110, 3803, 24959, 288, 450, 11974, 631, 7066, 785, 631, 385, 31105, 38445, 465, 5715, 368, 35526, 279, 1515, 31702, 277, 4158, 51400], "temperature": 0.0, "avg_logprob": -0.36268476712501657, "compression_ratio": 2.0168067226890756, "no_speech_prob": 0.21045748889446259}, {"id": 755, "seek": 446032, "start": 4481.04, "end": 4486.36, "text": " en vez de una palabra vista en contexto y adem\u00e1s una en vez de total de la oraci\u00f3n entonces funcionan", "tokens": [51400, 465, 5715, 368, 2002, 31702, 22553, 465, 47685, 288, 21251, 2002, 465, 5715, 368, 3217, 368, 635, 420, 3482, 13003, 14186, 282, 51666], "temperature": 0.0, "avg_logprob": -0.36268476712501657, "compression_ratio": 2.0168067226890756, "no_speech_prob": 0.21045748889446259}, {"id": 756, "seek": 448636, "start": 4486.36, "end": 4490.04, "text": " m\u00e1s o menos as\u00ed esto es como una especie de representaci\u00f3n muy vaga de lo que es un transformer", "tokens": [50364, 3573, 277, 8902, 8582, 7433, 785, 2617, 2002, 49368, 368, 2906, 3482, 5323, 371, 9286, 368, 450, 631, 785, 517, 4088, 260, 50548], "temperature": 0.0, "avg_logprob": -0.27261281417588057, "compression_ratio": 1.713768115942029, "no_speech_prob": 0.07548759877681732}, {"id": 757, "seek": 448636, "start": 4490.04, "end": 4494.88, "text": " no se transformen en realidad tiene como muchas partes m\u00e1s complejas pero imag\u00ednense que", "tokens": [50548, 572, 369, 4088, 268, 465, 25635, 7066, 2617, 16072, 31210, 3573, 44424, 19221, 4768, 2576, 10973, 1288, 631, 50790], "temperature": 0.0, "avg_logprob": -0.27261281417588057, "compression_ratio": 1.713768115942029, "no_speech_prob": 0.07548759877681732}, {"id": 758, "seek": 448636, "start": 4494.88, "end": 4499.96, "text": " funciona esta manera no yo digo tengo la oraci\u00f3n la pel\u00edcula fue muy aburrida entonces la", "tokens": [50790, 26210, 5283, 13913, 572, 5290, 22990, 13989, 635, 420, 3482, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 13003, 635, 51044], "temperature": 0.0, "avg_logprob": -0.27261281417588057, "compression_ratio": 1.713768115942029, "no_speech_prob": 0.07548759877681732}, {"id": 759, "seek": 448636, "start": 4499.96, "end": 4505.599999999999, "text": " voy a pasar por una capa autotensional que significa yo cruzo todas las palabras con todas y", "tokens": [51044, 7552, 257, 25344, 1515, 2002, 1410, 64, 1476, 310, 3378, 304, 631, 19957, 5290, 5140, 4765, 10906, 2439, 35240, 416, 10906, 288, 51326], "temperature": 0.0, "avg_logprob": -0.27261281417588057, "compression_ratio": 1.713768115942029, "no_speech_prob": 0.07548759877681732}, {"id": 760, "seek": 448636, "start": 4505.599999999999, "end": 4512.12, "text": " calculo la relevancia de cada palabra contra las dem\u00e1s eso me va a dar una serie de salidas y eso", "tokens": [51326, 4322, 78, 635, 2951, 9768, 2755, 368, 8411, 31702, 10742, 2439, 34682, 7287, 385, 2773, 257, 4072, 2002, 23030, 368, 1845, 11382, 288, 7287, 51652], "temperature": 0.0, "avg_logprob": -0.27261281417588057, "compression_ratio": 1.713768115942029, "no_speech_prob": 0.07548759877681732}, {"id": 761, "seek": 451212, "start": 4512.12, "end": 4516.5599999999995, "text": " de lo que hace es construirme como una colecci\u00f3n de env\u00e9ns de nivel 1, o sea yo empec\u00e9 con", "tokens": [50364, 368, 450, 631, 10032, 785, 38445, 1398, 2617, 2002, 45139, 14735, 368, 465, 85, 3516, 82, 368, 24423, 502, 11, 277, 4158, 5290, 846, 494, 13523, 416, 50586], "temperature": 0.0, "avg_logprob": -0.2920839521620009, "compression_ratio": 1.8987854251012146, "no_speech_prob": 0.10024335235357285}, {"id": 762, "seek": 451212, "start": 4516.5599999999995, "end": 4522.2, "text": " los bordes env\u00e9ns de la pel\u00edcula fue muy aburrida y ahora voy a tener una colecci\u00f3n de", "tokens": [50586, 1750, 25872, 279, 465, 85, 3516, 82, 368, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 288, 9923, 7552, 257, 11640, 2002, 45139, 14735, 368, 50868], "temperature": 0.0, "avg_logprob": -0.2920839521620009, "compression_ratio": 1.8987854251012146, "no_speech_prob": 0.10024335235357285}, {"id": 763, "seek": 451212, "start": 4522.2, "end": 4527.72, "text": " env\u00e9n de nivel 1 que ya mirando algo de contexto eso es env\u00e9n de nivel 1 a su vez de los", "tokens": [50868, 465, 85, 3516, 368, 24423, 502, 631, 2478, 3149, 1806, 8655, 368, 47685, 7287, 785, 465, 85, 3516, 368, 24423, 502, 257, 459, 5715, 368, 1750, 51144], "temperature": 0.0, "avg_logprob": -0.2920839521620009, "compression_ratio": 1.8987854251012146, "no_speech_prob": 0.10024335235357285}, {"id": 764, "seek": 451212, "start": 4527.72, "end": 4532.48, "text": " paso de vuelta a otra capa autotensional que de vuelta a los cruz a todos con todos y me debo", "tokens": [51144, 29212, 368, 41542, 257, 13623, 1410, 64, 1476, 310, 3378, 304, 631, 368, 41542, 257, 1750, 5140, 89, 257, 6321, 416, 6321, 288, 385, 368, 1763, 51382], "temperature": 0.0, "avg_logprob": -0.2920839521620009, "compression_ratio": 1.8987854251012146, "no_speech_prob": 0.10024335235357285}, {"id": 765, "seek": 451212, "start": 4532.48, "end": 4538.16, "text": " dar una salida que son los env\u00e9ns de nivel 2 y eso lo sigo pasando por varias capas autotensionales", "tokens": [51382, 4072, 2002, 1845, 2887, 631, 1872, 1750, 465, 85, 3516, 82, 368, 24423, 568, 288, 7287, 450, 4556, 78, 45412, 1515, 37496, 1410, 296, 1476, 310, 3378, 4229, 51666], "temperature": 0.0, "avg_logprob": -0.2920839521620009, "compression_ratio": 1.8987854251012146, "no_speech_prob": 0.10024335235357285}, {"id": 766, "seek": 453816, "start": 4538.16, "end": 4542.4, "text": " que los cruzan todos con todos hasta que al final me terminan dando lo o sea lo voy a", "tokens": [50364, 631, 1750, 5140, 89, 282, 6321, 416, 6321, 10764, 631, 419, 2572, 385, 10761, 282, 29854, 450, 277, 4158, 450, 7552, 257, 50576], "temperature": 0.0, "avg_logprob": -0.33837755795182856, "compression_ratio": 1.7732793522267207, "no_speech_prob": 0.04542139917612076}, {"id": 767, "seek": 453816, "start": 4542.4, "end": 4549.0, "text": " pasar en el capas y me terminan dando una salida de nivel 5 digamos entonces al inicio", "tokens": [50576, 25344, 465, 806, 1410, 296, 288, 385, 10761, 282, 29854, 2002, 1845, 2887, 368, 24423, 1025, 36430, 13003, 419, 294, 18322, 50906], "temperature": 0.0, "avg_logprob": -0.33837755795182856, "compression_ratio": 1.7732793522267207, "no_speech_prob": 0.04542139917612076}, {"id": 768, "seek": 453816, "start": 4549.0, "end": 4553.96, "text": " de nida guarden v\u00e9ns que miraban solamente una palabra a la vez y lo que tengo al final", "tokens": [50906, 368, 297, 2887, 6290, 268, 371, 3516, 82, 631, 3149, 18165, 27814, 2002, 31702, 257, 635, 5715, 288, 450, 631, 13989, 419, 2572, 51154], "temperature": 0.0, "avg_logprob": -0.33837755795182856, "compression_ratio": 1.7732793522267207, "no_speech_prob": 0.04542139917612076}, {"id": 769, "seek": 453816, "start": 4553.96, "end": 4558.04, "text": " ya son como en veis contextuales en los cuales ya considero varias veces cruzar todas las", "tokens": [51154, 2478, 1872, 2617, 465, 1241, 271, 4319, 901, 279, 465, 1750, 46932, 2478, 1949, 78, 37496, 17054, 5140, 26236, 10906, 2439, 51358], "temperature": 0.0, "avg_logprob": -0.33837755795182856, "compression_ratio": 1.7732793522267207, "no_speech_prob": 0.04542139917612076}, {"id": 770, "seek": 453816, "start": 4558.04, "end": 4563.84, "text": " palabras con todas entonces como que eso va ganando informaci\u00f3n en cada paso a su vez", "tokens": [51358, 35240, 416, 10906, 13003, 2617, 631, 7287, 2773, 7574, 1806, 21660, 465, 8411, 29212, 257, 459, 5715, 51648], "temperature": 0.0, "avg_logprob": -0.33837755795182856, "compression_ratio": 1.7732793522267207, "no_speech_prob": 0.04542139917612076}, {"id": 771, "seek": 456384, "start": 4563.84, "end": 4569.84, "text": " a bien despu\u00e9s que yo tengo estos en veis contextuales en general si utiliza otra red m\u00e1s de tipo", "tokens": [50364, 257, 3610, 15283, 631, 5290, 13989, 12585, 465, 1241, 271, 4319, 901, 279, 465, 2674, 1511, 4976, 13427, 13623, 2182, 3573, 368, 9746, 50664], "temperature": 0.0, "avg_logprob": -0.3614470116177896, "compression_ratio": 1.7597173144876326, "no_speech_prob": 0.11884661763906479}, {"id": 772, "seek": 456384, "start": 4569.84, "end": 4574.76, "text": " de coder puede ser un tanforo de puede ser una lctm algo m\u00e1s pero necesito otra cosa que es la", "tokens": [50664, 368, 17656, 260, 8919, 816, 517, 7603, 2994, 78, 368, 8919, 816, 2002, 287, 66, 83, 76, 8655, 3573, 4768, 11909, 3528, 13623, 10163, 631, 785, 635, 50910], "temperature": 0.0, "avg_logprob": -0.3614470116177896, "compression_ratio": 1.7597173144876326, "no_speech_prob": 0.11884661763906479}, {"id": 773, "seek": 456384, "start": 4574.76, "end": 4578.400000000001, "text": " que me diga por ejemplo hacia el positivo o negativo en el otro etc\u00e9tera pero es otro tipo de", "tokens": [50910, 631, 385, 2528, 64, 1515, 13358, 21365, 806, 44710, 277, 2485, 18586, 465, 806, 11921, 5183, 526, 23833, 4768, 785, 11921, 9746, 368, 51092], "temperature": 0.0, "avg_logprob": -0.3614470116177896, "compression_ratio": 1.7597173144876326, "no_speech_prob": 0.11884661763906479}, {"id": 774, "seek": 456384, "start": 4578.400000000001, "end": 4583.4400000000005, "text": " red que despu\u00e9s de codificas en formaci\u00f3n pero bueno por lo menos hasta ac\u00e1 yo ya constru\u00ed en medings", "tokens": [51092, 2182, 631, 15283, 368, 17656, 1089, 296, 465, 1254, 3482, 4768, 11974, 1515, 450, 8902, 10764, 23496, 5290, 2478, 12946, 870, 465, 1205, 1109, 51344], "temperature": 0.0, "avg_logprob": -0.3614470116177896, "compression_ratio": 1.7597173144876326, "no_speech_prob": 0.11884661763906479}, {"id": 775, "seek": 456384, "start": 4583.4400000000005, "end": 4589.68, "text": " de cosas pero bien lo que tengo ac\u00e1 son ten\u00eda la pel\u00edcula fue muy aburrida y eso lo transform\u00e9 en", "tokens": [51344, 368, 12218, 4768, 3610, 450, 631, 13989, 23496, 1872, 23718, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 288, 7287, 450, 4088, 526, 465, 51656], "temperature": 0.0, "avg_logprob": -0.3614470116177896, "compression_ratio": 1.7597173144876326, "no_speech_prob": 0.11884661763906479}, {"id": 776, "seek": 458968, "start": 4589.76, "end": 4595.240000000001, "text": " tenia cinco palabras y lo transform\u00e9 en cinco en medings digamos que de distintos niveles pero siempre", "tokens": [50368, 2064, 654, 21350, 35240, 288, 450, 4088, 526, 465, 21350, 465, 1205, 1109, 36430, 631, 368, 49337, 11461, 904, 4768, 12758, 50642], "temperature": 0.0, "avg_logprob": -0.24876744523007646, "compression_ratio": 1.9843137254901961, "no_speech_prob": 0.1985362321138382}, {"id": 777, "seek": 458968, "start": 4595.240000000001, "end": 4600.88, "text": " son cinco en medings entonces yo dir\u00eda que el primero se corresponde con la el segundo con pel\u00edcula", "tokens": [50642, 1872, 21350, 465, 1205, 1109, 13003, 5290, 4746, 2686, 631, 806, 21289, 369, 6805, 68, 416, 635, 806, 17954, 416, 40154, 50924], "temperature": 0.0, "avg_logprob": -0.24876744523007646, "compression_ratio": 1.9843137254901961, "no_speech_prob": 0.1985362321138382}, {"id": 778, "seek": 458968, "start": 4600.88, "end": 4606.4800000000005, "text": " tercero con fue es una una versi\u00f3n contextual del en medings porque significa la palabra pel\u00edcula", "tokens": [50924, 38103, 78, 416, 9248, 785, 2002, 2002, 47248, 35526, 1103, 465, 1205, 1109, 4021, 19957, 635, 31702, 40154, 51204], "temperature": 0.0, "avg_logprob": -0.24876744523007646, "compression_ratio": 1.9843137254901961, "no_speech_prob": 0.1985362321138382}, {"id": 779, "seek": 458968, "start": 4606.4800000000005, "end": 4610.84, "text": " en el contexto de la pel\u00edcula fue muy aburrida no es la palabra pel\u00edcula en general entonces yo", "tokens": [51204, 465, 806, 47685, 368, 635, 40154, 9248, 5323, 410, 374, 81, 2887, 572, 785, 635, 31702, 40154, 465, 2674, 13003, 5290, 51422], "temperature": 0.0, "avg_logprob": -0.24876744523007646, "compression_ratio": 1.9843137254901961, "no_speech_prob": 0.1985362321138382}, {"id": 780, "seek": 458968, "start": 4610.84, "end": 4616.08, "text": " tuviera una relaci\u00f3n que tiene gato ser\u00eda gato en el contexto del gato como he pescado que no ser\u00eda", "tokens": [51422, 38177, 10609, 2002, 37247, 631, 7066, 290, 2513, 23679, 290, 2513, 465, 806, 47685, 1103, 290, 2513, 2617, 415, 9262, 27713, 631, 572, 23679, 51684], "temperature": 0.0, "avg_logprob": -0.24876744523007646, "compression_ratio": 1.9843137254901961, "no_speech_prob": 0.1985362321138382}, {"id": 781, "seek": 461608, "start": 4616.08, "end": 4619.88, "text": " lo mismo que cuando estoy hablando en un gato y verablico probablemente o sea los en veintiendes", "tokens": [50364, 450, 12461, 631, 7767, 15796, 29369, 465, 517, 290, 2513, 288, 1306, 455, 1050, 78, 21759, 4082, 277, 4158, 1750, 465, 1241, 686, 1174, 279, 50554], "temperature": 0.0, "avg_logprob": -0.3761241508252693, "compression_ratio": 1.8175182481751824, "no_speech_prob": 0.03790983185172081}, {"id": 782, "seek": 461608, "start": 4619.88, "end": 4627.2, "text": " bien pero adem\u00e1s me interesa tener una representaci\u00f3n de la oraci\u00f3n entera y para eso lo que", "tokens": [50554, 3610, 4768, 21251, 385, 728, 13708, 11640, 2002, 2906, 3482, 368, 635, 420, 3482, 948, 1663, 288, 1690, 7287, 450, 631, 50920], "temperature": 0.0, "avg_logprob": -0.3761241508252693, "compression_ratio": 1.8175182481751824, "no_speech_prob": 0.03790983185172081}, {"id": 783, "seek": 461608, "start": 4627.2, "end": 4633.0, "text": " se hace es agregar un toque en extra un toque en llamado CLS se pone al principio de la oraci\u00f3n y", "tokens": [50920, 369, 10032, 785, 4554, 2976, 517, 281, 1077, 465, 2857, 517, 281, 1077, 465, 47055, 383, 19198, 369, 40192, 419, 34308, 368, 635, 420, 3482, 288, 51210], "temperature": 0.0, "avg_logprob": -0.3761241508252693, "compression_ratio": 1.8175182481751824, "no_speech_prob": 0.03790983185172081}, {"id": 784, "seek": 461608, "start": 4633.0, "end": 4640.28, "text": " se lo hace jugar con todos los las capas atencionales del medio entonces yo tengo una palabra extra que como", "tokens": [51210, 369, 450, 10032, 37692, 416, 6321, 1750, 2439, 1410, 296, 412, 22660, 1966, 279, 1103, 22123, 13003, 5290, 13989, 2002, 31702, 2857, 631, 2617, 51574], "temperature": 0.0, "avg_logprob": -0.3761241508252693, "compression_ratio": 1.8175182481751824, "no_speech_prob": 0.03790983185172081}, {"id": 785, "seek": 461608, "start": 4640.28, "end": 4644.16, "text": " no es una palabra de la oraci\u00f3n no tiene un en veint contexto al sino lo que hace es capturar la", "tokens": [51574, 572, 785, 2002, 31702, 368, 635, 420, 3482, 572, 7066, 517, 465, 1241, 686, 47685, 419, 18108, 450, 631, 10032, 785, 3770, 28586, 635, 51768], "temperature": 0.0, "avg_logprob": -0.3761241508252693, "compression_ratio": 1.8175182481751824, "no_speech_prob": 0.03790983185172081}, {"id": 786, "seek": 464416, "start": 4644.16, "end": 4650.12, "text": " informaci\u00f3n de la oraci\u00f3n en la vez entonces ese en veint que me queda afuera el en veint que corresponde al", "tokens": [50364, 21660, 368, 635, 420, 3482, 465, 635, 5715, 13003, 10167, 465, 1241, 686, 631, 385, 23314, 3238, 84, 1663, 806, 465, 1241, 686, 631, 6805, 68, 419, 50662], "temperature": 0.0, "avg_logprob": -0.3269710362514603, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.012167075648903847}, {"id": 787, "seek": 464416, "start": 4650.12, "end": 4655.08, "text": " el toque en CLS ese que despu\u00e9s yo podr\u00e9 utilizar para predecir cosas yo lo utilizo como un en", "tokens": [50662, 806, 281, 1077, 465, 383, 19198, 10167, 631, 15283, 5290, 2497, 10521, 24060, 1690, 24874, 23568, 12218, 5290, 450, 4976, 19055, 2617, 517, 465, 50910], "temperature": 0.0, "avg_logprob": -0.3269710362514603, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.012167075648903847}, {"id": 788, "seek": 464416, "start": 4655.08, "end": 4660.36, "text": " veint que tiene cierto tama\u00f1o y se lo paso una capa de dos max para que me prediga as\u00ed esa", "tokens": [50910, 1241, 686, 631, 7066, 28558, 45342, 7716, 288, 369, 450, 29212, 2002, 1410, 64, 368, 4491, 11469, 1690, 631, 385, 3852, 9900, 8582, 11342, 51174], "temperature": 0.0, "avg_logprob": -0.3269710362514603, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.012167075648903847}, {"id": 789, "seek": 464416, "start": 4660.36, "end": 4670.72, "text": " oraci\u00f3n es positivo negativo en neutra o no bien bueno y para terminar comentarles los tipo de", "tokens": [51174, 420, 3482, 785, 44710, 2485, 18586, 465, 7989, 424, 277, 572, 3610, 11974, 288, 1690, 36246, 14541, 289, 904, 1750, 9746, 368, 51692], "temperature": 0.0, "avg_logprob": -0.3269710362514603, "compression_ratio": 1.6923076923076923, "no_speech_prob": 0.012167075648903847}, {"id": 790, "seek": 467072, "start": 4670.72, "end": 4675.0, "text": " herramientas que pueden utilizar para trabajar con reneunales obviamente para el segundo laboratorio", "tokens": [50364, 38271, 296, 631, 14714, 24060, 1690, 30793, 416, 319, 716, 409, 4229, 36325, 1690, 806, 17954, 5938, 48028, 50578], "temperature": 0.0, "avg_logprob": -0.40524782927139946, "compression_ratio": 1.8700787401574803, "no_speech_prob": 0.10892894864082336}, {"id": 791, "seek": 467072, "start": 4675.0, "end": 4681.84, "text": " o una poder utilizar reneunales si quieren de todo tipo si quieren colecciones en veints no", "tokens": [50578, 277, 2002, 8152, 24060, 319, 716, 409, 4229, 1511, 36706, 368, 5149, 9746, 1511, 36706, 45139, 1914, 5411, 465, 1241, 686, 82, 572, 50920], "temperature": 0.0, "avg_logprob": -0.40524782927139946, "compression_ratio": 1.8700787401574803, "no_speech_prob": 0.10892894864082336}, {"id": 792, "seek": 467072, "start": 4681.84, "end": 4686.320000000001, "text": " sus amigos podemos dar o pueden bajar algunas que est\u00e9n disponibles en la web pero bueno", "tokens": [50920, 3291, 18243, 12234, 4072, 277, 14714, 23589, 289, 27316, 631, 871, 3516, 23311, 14428, 465, 635, 3670, 4768, 11974, 51144], "temperature": 0.0, "avg_logprob": -0.40524782927139946, "compression_ratio": 1.8700787401574803, "no_speech_prob": 0.10892894864082336}, {"id": 793, "seek": 467072, "start": 4686.320000000001, "end": 4689.84, "text": " herramientas habitual para trabajar con estos son por ejemplo tensorflow y paitor que son dos", "tokens": [51144, 38271, 296, 46883, 1690, 30793, 416, 12585, 1872, 1515, 13358, 40863, 10565, 288, 280, 1001, 284, 631, 1872, 4491, 51320], "temperature": 0.0, "avg_logprob": -0.40524782927139946, "compression_ratio": 1.8700787401574803, "no_speech_prob": 0.10892894864082336}, {"id": 794, "seek": 467072, "start": 4689.84, "end": 4696.76, "text": " y los tecas tensorflow de Google y paitor es de meta o de facebook y bueno queras general trabajar", "tokens": [51320, 288, 1750, 535, 16369, 40863, 10565, 368, 3329, 288, 280, 1001, 284, 785, 368, 19616, 277, 368, 23372, 288, 11974, 421, 6985, 2674, 30793, 51666], "temperature": 0.0, "avg_logprob": -0.40524782927139946, "compression_ratio": 1.8700787401574803, "no_speech_prob": 0.10892894864082336}, {"id": 795, "seek": 469676, "start": 4696.8, "end": 4700.68, "text": " un tercer flow y jagging face es un repositorio que tengo un mont\u00f3n de modelos ya prendrenados", "tokens": [50366, 517, 38103, 3095, 288, 361, 559, 3249, 1851, 785, 517, 1085, 329, 3029, 1004, 631, 13989, 517, 45259, 368, 2316, 329, 2478, 9866, 1095, 4181, 50560], "temperature": 0.0, "avg_logprob": -0.5075444760529891, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.08862072229385376}, {"id": 796, "seek": 469676, "start": 4700.68, "end": 4705.04, "text": " para muchos idiomas y para muchas cosas que ya se pueden utilizar autos de box y funcionan", "tokens": [50560, 1690, 17061, 18014, 7092, 288, 1690, 16072, 12218, 631, 2478, 369, 14714, 24060, 1476, 329, 368, 2424, 288, 14186, 282, 50778], "temperature": 0.0, "avg_logprob": -0.5075444760529891, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.08862072229385376}, {"id": 797, "seek": 469676, "start": 4705.04, "end": 4710.400000000001, "text": " muy bien y bueno t\u00e1s son estas herramientas y otras m\u00e1s las van a poder utilizar el laboratorio", "tokens": [50778, 5323, 3610, 288, 11974, 256, 2490, 1872, 13897, 38271, 296, 288, 20244, 3573, 2439, 3161, 257, 8152, 24060, 806, 5938, 48028, 51046], "temperature": 0.0, "avg_logprob": -0.5075444760529891, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.08862072229385376}, {"id": 798, "seek": 469676, "start": 4711.92, "end": 4715.56, "text": " bueno por hoy eso la pr\u00f3xima a\u00e9jamos a ver traducci\u00f3n autom\u00e1tica", "tokens": [51122, 11974, 1515, 13775, 7287, 635, 24096, 257, 526, 73, 2151, 257, 1306, 2479, 1311, 5687, 3553, 23432, 51304], "temperature": 0.0, "avg_logprob": -0.5075444760529891, "compression_ratio": 1.59009009009009, "no_speech_prob": 0.08862072229385376}], "language": "es"}